{"version":3,"sources":["redux/userReducer.js","redux/menuReducer.js","components/dashboard/header/Header.jsx","components/dashboard/menu/Menu.jsx","components/dashboard/coverTable/DICT/TableBootstrapDICT.jsx","components/dashboard/coverTable/NETWORK/NETWORK_REPORT.jsx","components/dashboard/coverTable/DICT/DICT_BIN_TABLE.jsx","components/dashboard/coverTable/DICT/DICT_BANK_RANGE.jsx","components/dashboard/coverTable/ADMIN/helpers.js","components/dashboard/coverTable/NETWORK/NETWORK_ADD_CLIENT.jsx","components/dashboard/coverTable/NETWORK/NETWORK_CREATE.jsx","components/dashboard/coverTable/NETWORK/NETWORK_EDIT.jsx","components/dashboard/coverTable/NETWORK/NETWORK_AUDIT.jsx","components/dashboard/coverTable/ADMIN/TableADMIN_USERS.jsx","components/dashboard/coverTable/ADMIN/TableADMIN_OPERATIONS.jsx","components/dashboard/coverTable/ADMIN/TableADMIN_ROLE_OPERATIONS.jsx","components/dashboard/coverTable/ADMIN/TableADMIN_USER_OPERATIONS.jsx","components/dashboard/coverTable/ADMIN/TableADMIN_ROLES.jsx","components/dashboard/coverTable/REPORT/REPORT_SETTINGS_TSP.jsx","components/dashboard/coverTable/REPORT/REPORT_SETTINGS_NET.jsx","components/dashboard/coverTable/REPORT/REPORTS_acquiring.jsx","components/dashboard/coverTable/REPORT/REPORTS_ACQUIRING_MONITOR.jsx","components/dashboard/coverTable/REPORT/REPORT_FIX_COMMISSION.jsx","components/dashboard/coverTable/REPORT/REPORT_ACQ_DETAILED_INT.jsx","components/dashboard/coverTable/REPORT/REPORT_ACQ_DETAILED.jsx","components/dashboard/coverTable/REPORT/REPORT_GROSS_COMM.jsx","components/dashboard/coverTable/REPORT/REPORT_GROSS_COMM_INTERNET.jsx","components/dashboard/coverTable/REPORT/REPORT_OPERATIONS.jsx","components/dashboard/coverTable/REPORT/REPORT_CASH_OUT.jsx","components/UI/LoaderUI.js","components/dashboard/coverTable/REPORT/REPORT_OPERATIONS_INTERNET.jsx","components/dashboard/coverTable/REPORT/REPORT_OPERATIONS_NET.jsx","components/dashboard/coverTable/REPORT/REPORT_TERMINALS_INTERNET.jsx","components/dashboard/coverTable/REPORT/REPORT_TERMINALS.jsx","components/dashboard/coverTable/CoverTable.jsx","components/dashboard/popup/PopupTable.jsx","components/dashboard/Dashboard.jsx","components/dashboard/DashboardContainer.js","components/login/Login.jsx","components/login/LoginContainer.js","components/main/Main.jsx","components/main/MainContainer.jsx","components/dashboard/profile/Profile.jsx","components/dashboard/profile/ProfileContainer.js","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["initialState","token","user_code","user_name","user_position","OPERATIONS","addUserDataCreator","type","userReducer","state","action","stateAddUserData","roleData","isLoading","showTable","tableData","nameOperation","operation","showPopupTable","typePopup","changeLoadingCreator","loading","menuReducer","stateShowPopupTable","console","log","stateIsLoading","stateAddTableData","stateOperationName","stateRoleData","Header","props","userShortName","userName","userNameArr","split","length","getProfileData","store","history","push","date","a","this","changeLoading","axios","delete","headers","Token","then","res","window","localStorage","removeItem","catch","error","response","get","userState","setState","data","last_banking_date","getDate","className","onClick","title","DropdownButton","id","Dropdown","Item","requestLogOut","as","React","Component","Menu","generateUserRoutingMenu","menuItems","reduce","item","isMenu","menu","firstLevelMenu","filter","i","parent_operation","notFirstLevelMenu","map","secondLevel","children","el","thirdLevel","e","Error","activeOperation","operationArr","name","menuRender","obj","key","Accordion","objItem","index","eventKey","style","fontWeight","Body","indexTwo","location","pathname","substr","itemLink","subMenu","stopPropagation","currentTarget","getAttribute","params","TableBootstrapDICT","columnsData","Object","keys","dataField","text","requestDICT","baseUrl","addTableData","Table","keyField","menuState","TableRows","columns","TableHeaders","cellEdit","cellEditFactory","mode","blurToSave","NETWORK_REPORT","useState","setIsLoading","options","setOptions","brand","setBrand","nameBrand","setNameBrand","setIsLoadingNameManager","setOptionsNameManager","brand_id","brand_name","brand_status_name","brand_manager_id","brand_manager_institution_id","brand_contact_name","brand_contact_position","brand_contact_phone","brand_contact_email","level2_ident_code","level2_id","level2_name","level2_manager_id","level2_manager_institution_id","client_name","ident_code","client_manager_id","client_manager_institution_id","client_institution_id","form","setForm","handleSearchBrandName","query","record_count","handleSearchNameManager","manager_id","value","manager_name","useEffect","confirm","post","responseType","url","URL","createObjectURL","Blob","link","document","createElement","fileTitle","decodeURI","href","setAttribute","body","appendChild","click","onChange","target","val","checked","filterBy","labelKey","option","minLength","onSearch","searchText","placeholder","renderMenuItemChildren","Form","Check","defaultChecked","marginTop","label","class","background","padding","DICT_BIN_TABLE","textError","setData","isErrorBin","setIsErrorBin","isErrorBankName","setIsErrorBankName","isShowAlert","setIsShowAlert","alertType","setAlertType","alertText","setAlertText","handleForm","ErrorStatus","ErrorCode","ErrorMessage","setTimeout","Alert","variant","Group","Label","Control","bin","bankname","banknameloc","emberid","cardtypename","country","submit","DICT_BANK_RANGE","isErrorMinNum","setIsErrorMinNum","isErrorMaxNum","setIsErrorMaxNum","bank_range_name","min_number","max_number","editColumn","row","_this","nameRole","inputValue","role_id","isSelected","operations","requestADMIN_ROLE_OPERATIONS_edit","requestADMIN_ROLE_OPERATIONS","roleID","isShowTable","selectRoleID","checkbox","cell","OptionItem","selected","optionItem","bank_branch_id","only_active","roles","users","isShowSelectRoles","OptionItemDICT_NET_BRAND","OptionItemDICT_NET_ENTITY","entity_id","entity_name","OptionItemDICT_NETWORK_MANAGERS","BlockSelectItemIdentCode","onClickBlockSelectItem","AutocompleteInputIdentCode","onChangeAutocompleteInput","param","addIdentCode","Number","inputRequest","request","onClickAutocompleteInputRes","inputResult","isShowBlockSelect","isShowInputResult","isShowInputRequest","onBlurBlockSelect","currentVal","toString","includes","myRef","createRef","showBlock","institution_id","branch_id","tsp_list","mask","maskChar","alwaysShowMask","pattern","onBlur","ref","NETWORK_ADD_CLIENT","changeSelect","name_input","closePopupError","isShowPopupError","closePopupErrorSave","isShowPopupErrorSave","closePopupOrder_numberError","isShowOrder_numberError","isShowBootstrapTable","renderItem","highlighted","backgroundColor","shouldItemRender","toLowerCase","indexOf","autocompleteSelect","requestDICT_NET_BRAND_QueryTSP","isDisableInput","changeSelectDICT_NET_BRAND_QueryTSP","client_id","DICT_NET_BRAND_QueryTSP","currentElement","array","changeInputDICT_NETWORK_MANAGERS","requestDICT_NET_BRAND","changeInputDICT_NET_BRAND","DICT_NET_BRAND","second_level_flag","isDisableInputDICT_NET_ENTITY","requestDICT_NET_ENTITY","changeInputDICT_NET_ENTITY","client","DICT_NET_ENTITY","isDisableBtnSave","save","requestDICT_NET_CLIENT","nextInput","requestDICT_NETWORK_MANAGERS","isDisableInputDICT_NETWORK_MANAGERS","isContact_emailError","isDisabledSaveBtn","DICT_INSTITUTION","isShowSelectDICT_INSTITUTION","isDisableButton","selectRow","DICT_BRANCH","isDisableTVBV","isShowSelectTVBV","TSPReportSettingsSearchObj","settings","isShowTsp","currentTsp","isShowTypeAcquiring","isShowReport","DICT_REPORT_FORMAT","isShowREPORT_FORMAT","DICT_REPORT_PERIOD_TYPE","isShowDICT_REPORT_PERIOD_TYPE","DICT_REPORT_CHANNEL_TYPE","isShowDICT_REPORT_CHANNEL_TYPE","isShowTableTSPReportSettingsSTD","TSPReportSettingsSTD","DICT_NET_CLIENT_STATUS","isShowDICT_NET_CLIENT_STATUS","currentAcquiring_type_id","type_acquiring","tsp_id","report_format_id","report_period_type_id","channel_type_id","file_name_mask","isShowDICT_NET_BRAND_QueryTSP","DICT_NETWORK_MANAGERS","isShowSelectDICT_NETWORK_MANAGERS","isDisableInputDICT_NET_BRAND","isShowSelectDICT_NET_BRAND","isShowSelectDICT_NET_ENTITY","isDisableIdent_code","isDICT_NET_BRAND_QueryTSPEmpty","htmlFor","api_name","brand_region","disabled","SampleComponent","changeInputSC","brand_manager_name","OptionItemDICT_NET_CLIENT_STATUS","status_code","status_name","institution_name","NETWORK_CREATE","selectDICT_INSTITUTION","apiName","inputDataObj","requestDICT_BRANCH","formatDate","day","month","getMonth","slice","getFullYear","contact_person","contact_phone","contact_position","contact_email","brand_status_code","showError","errorBrand","errorStatus","errorManager","openStandardReport","requestTSPReportSettingsSTD","closePopupTable","physical_acquiring_type_id","physical_channel_type_id","physical_report_format_id","physical_report_period_type_id","internet_acquiring_type_id","internet_channel_type_id","internet_report_format_id","internet_report_period_type_id","changeReport_format_id","changeReport_period_type_id","changeChannel_type_id","saveReport","dody","main_settings","acquiring_type_id","physical_file_name_mask","channel_address","physical_channel_address","internet_file_name_mask","internet_channel_address","std_settings","nameNetWork","requestGetNewBrandId","hendleNnameNetWork","keyCode","changeInput","test","arr","number","more","requestGetNewEntityId","showTwoLevelYes","showTwoLevel","moreTwoLevel","showTwoLevelNo","twoLevelArr","get_entity_id","cloneArr","assign","indexItem","findIndex","requestDICT_NET_CLIENT_STATUS","requestDICT_INSTITUTION","newObj","param1","userBody","date_from","date_to","tsp_name","forEach","cover","search","onKeyDown","errorId","errorRu","opacity","BlockSelectItemBrandName","AutocompleteInputBrandName","onClickAutocompleteInput","addBrandName","brand_arr","prevProps","prevState","snapshot","update","NETWORK_EDIT","updateVal","setUpdateVal","firstLevel","setFirstLevel","setSecondLevel","setThirdLevel","clientArr","setClientArr","isShowFirstLvl","setIsShowFirstLvl","isShowSecondLvl","setIsShowSecondLvl","isShowThirdLvl","setIsShowThirdLvl","setBrandName","formFirstLevel","setFormFirstLevel","setIsLoadingStatus","isLoadingNameManager","optionsNameManager","setIsLoadingSecondLvl","optionsSecondLvl","setOptionsSecondLvl","optionsThirdLvl","setOptionsThirdLvl","setIsLoadingManager","optionsManager","setOptionsManager","handleSearchBrandNameSecondLvl","handleSearchManager","handleSearchBrandStatus","lenght","handleLevel","dataset","selectedArr","otherArr","sort","b","handlePIB","eventManagerID","manager","eventManagerName","eventBrandRegion","Select","margin","scope","NETWORK_AUDIT","Date","dateFrom","setDateFrom","dateTo","setDateTo","promptText","marginLeft","minWidth","TableADMIN_USERS","changeUserCode","changeUserName","changeOnlyActive","requestADMIN_USERS","requestDeleteUser","requestADMIN_USERS_delete","changeDate","dateBlock","editHandle","requestADMIN_ROLES","addHandle","isShowAddBlock","deleteHandle","isShowDeleteBlock","closeEditForm","isShowEditBlock","changeInputSelect","keyName","isEdit","inputRow","saveUser","requestADMIN_USERS_add","addUser","addRow","animal","role","initialValues","account","branch_name","date_registered","department","division","ipphone","language_code","language_name","last_logon_date","middle_name","mobile","office","phone","region","role_name","status","surname","tvbv","user_email","user_role","selectRowProp","onSelect","defaultValue","isKey","delay","TableADMIN_OPERATIONS","requestADMIN_OPERATIONS","TableADMIN_ROLE_OPERATIONS","dataFormat","TableADMIN_USER_OPERATIONS","editCancelColumn","editCreateColumn","editDeleteColumn","editModifyColumn","editEnableColumn","TableADMIN_ROLES","requestADMIN_ROLE_edit","addRole","requestADMIN_ROLE_add","deleteRole","requestADMIN_ROLE_delete","role_desc","ad_role","OptionItemDICT_INSTITUTION","OptionItemDICT_BRANCH","report_format_name","OptionItemDICT_REPORT_PERIOD_TYPE","report_period_type_name","OptionItemDICT_REPORT_CHANNEL_TYPE","report_channel_type_id","report_channel_type_name","BlockSelectItemTspName","AutocompleteInputTspName","addTspName","onBlurAutocompleteInput","clickTest","current","parentElement","addEventListener","REPORT_SETTINGS_TSP","errorRU","requestTSPReportSettings","Tsp_list","itemTsp","physical_extended_report","physical_installment_report","physical_standard_report","internet_extended_report","internet_installment_report","internet_standard_report","physical_file_name","file_path","report_period_type_ids","physical_report_settings_id","report_setting_id","internet_file_name","internet_report_settings_id","requestDICT_REPORT_FORMAT","requestDICT_REPORT_PERIOD_TYPE","requestDICT_REPORT_CHANNEL_TYPE","changeTypeAcquiring","typeAcquiring","changeTypeAcquiringInternet","physicalEmailMaskError","internetEmailMaskError","seveTSPReportSettingsSTD","arry","numbers","order_number","isDuplicates","join","changeInputTsp","changeInputTspEmail","changeInputTspFtp","requestTSPReportSettingsSTD_SAVE","showHtmlReport","error_text","responseTSPReportSettings","bank_branch_name","merchant_id","creation_date","standard_report","extended_report","installment_report","channel_type_name","isShowPopupDone","count","standard_settings","newValue","field_name","cloneTSPReportSettingsSTD","indexRow","for","undefined","REPORT_SETTINGS_NET","get_DICT_NET_BRAND","acquiring","bind","DICT_BRAND_VALUES","DICT_BRAND_NAME_VALUES","DICT_BRAND_NAME_VAL","brand_settings","isBrandName_toValidation","OptionItemDICT_ACQUIRING_REPORTS","report_id","report_name","OptionItemDICT_ACQUIRING_TYPE","acquiring_type_name","OptionItemDICT_PAYMENT_SYSTEM","payment_system_id","payment_system_name","OptionItemDICT_REPORT_FORMAT","OptionItemDICT_DATE_TYPE","date_type_id","date_type_name","REPORTS_acquiring","AcquiringReportsCriteria","changeInputDateReport","changeInputDateReport_from","changeInputDateReport_to","changeInputBase","requestReports_Acquiring","changeFile_name_mask","showReport","DICT_ACQUIRING_REPORTS","isShowSelectDICT_ACQUIRING_REPORTS","DICT_ACQUIRING_TYPE","isShowSelectDICT_ACQUIRING_TYPE","DICT_PAYMENT_SYSTEM","isShowSelectDICT_PAYMENT_SYSTEM","isShowSelectDICT_REPORT_FORMAT","DICT_DATE_TYPE","isShowSelectDICT_DATE_TYPE","requestDICT_ACQUIRING_REPORTS","requestDICT_ACQUIRING_TYPE","requestDICT_PAYMENT_SYSTEM","requestDICT_DATE_TYPE","REPORTS_ACQUIRING_MONITOR","selectDates","ReportsMonitor","reports","isShowReportsDates","selectDate","formatDateFile","year","hou","getHours","min","getMinutes","isShowReportsMonitor","ReportsDates","requestReportsMonitor","requestReportsDates","timer","setInterval","clearInterval","ReportDates","reportId","fileDownload","date_submitted_char","date_submitted","width","tdStyle","whiteSpace","wordWrap","requestReports_GetReport","statusBtn","ItemMccCode","mcc_code","mcc_name","BlockSelectItemMerchantName","BlockSelectItemTerminalName","terminal_id","REPORT_OPERATIONS","isInstitution_idValidation","isDate_fromValidation","isDate_toValidation","isTerminal_type_idValidation","terminal_type_id","isMerchant_idValidation","isDate_type_idValidation","defineValidationInputs","date1","date2","diffTime","Math","abs","diffDays","ceil","isDate_month_Validation","network_brand_id","isForm_toValidation","sendOptionToServer","InputDICT_MCC","requestDICT_MCC","isShowBlockSelectDICT_MCC","isShowInputResDICT_MCC","isShowInputDICT_MCC","addMerchantName","addTerminalName","addClientID","addMccCode","handleSelect","ev","DICT_TERMINAL_SYSTEM","isShowSelectDICT_MERCHANT_SYSTEM","DICT_MERCHANT_SYSTEM","isShowSelectDICT_TERMINAL_SYSTEM","report_type_id","format_type_id","DICT_MCC_SYSTEM","isShowSelectDICT_MCC_SYSTEM","DICT_MCC","isSuccess","merchant_error","date_from_default","merchant_list","mcc_list","checkMerchantID","Link","no_transactions","fontSize","cursor","height","institution","isError","OptionItemDICT_TERMINAL_SYSTEM","AutocompleteInputMerchantName","merchant_arr","AutocompleteInputTerminalName","terminal_arr","terminal_list","trans_rrn","closeMenuOnSelect","isMulti","onFocus","requestDICT_TERMINAL_SYSTEM","LoaderUI","OptionItemDICT_BRANCH_ENTITY","OptionItemCommon","OptionItemDICT_TSP_TYPE","ItemDICT_MCC","REPORT_OPERATIONS_NET","isMerchant_toValidation","isTerminal_toValidation","isTSP_toValidation","isMCC_toValidation","DICT_BRAND_NAME_ID","isShow_BRANCH_NAME_VALUES","isShow_ENTITY_NAME_VALUES","isShow_DICT_TSP","DICT_TSP_VALUE","isShow_DICT_MERCHANT","DICT_MERCHANT_VALUE","isShow_DICT_TERMINAL","DICT_TERMINAL_VALUE","handleRequestDICT_BRANCH_NAME","get_DICT_BRAND_NAME_LEVEL","get_DICT_TSP","secondUrl","DICT_BRANCH_ENTITY_VALUES","get_DICT_BRAND_MERCHANT","get_DICT_BRAND_TERMINALS","network_entity_id","param2","innerText","REPORT_TERMINALS_INTERNET","isErrorInstitution","isErrorTerminal","isErrorDate","setIsErrorDate","isErrorDateMonth","setIsErrorDateMonth","arrInstitution","setArrInstitution","isShowInstitution","setIsShowInstitution","arrTerminal","setArrTerminal","isShowTerminal","setIsShowTerminal","isShowTypeDate","setIsShowTypeDate","setInstitution","terminal","setTerminal","terminal_status_id","on_date","handleDateFrom","reqInstitution","reqTerminal","terminal_status_name","inline","REPORT_TERMINALS","Default","CoverTable","tableType","REPORT_ACQ_DETAILED","REPORT_ACQ_DETAILED_INT","REPORT_FIX_COMMISSION","REPORT_GROSS_COMM","REPORT_GROSS_COMM_INTERNET","REPORT_OPERATIONS_INTERNET","REPORT_CASH_OUT","DeleteRow","FormInputRedux","reduxForm","renderField","input","meta","touched","warning","onSubmit","handleSubmit","values","Field","component","RenderingInputsForm","PopupTable","namePopup","close","renderingInputs","autoComplete","required","renderingInputsForm","formInputData","toggle","Dashboard","getItem","authToken","addUserData","DashboardWithRouter","withRouter","DashboardContainer","connect","dispatch","showPopupTableCreator","addTableDataCreator","operationName","operationNameCreator","addRoleData","roleDataCreator","LoginFormRedux","autocomplete","color","errorAuth","Login","setErrorAuth","user_pass","Accept","setItem","position","top","RequestAuth","username","password","LogindWithRouter","LoginContainer","Main","MainWithRouter","MainContainer","Profile","getDay","monthIndex","inputsData","saveUserData","requestSaveUserData","closeProfile","showContent","requestUserCabinet","Button","ProfileWithRouter","ProfileContainer","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","createStore","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1479479.chunk.js","sourcesContent":["\r\nlet addUserData = 'addUserData';\r\n\r\nlet initialState = {\r\n    token: null,\r\n    user_code: null,\r\n    user_name: null,\r\n    user_position: null,\r\n    OPERATIONS: null\r\n}\r\n\r\n\r\n\r\nconst userReducer = (state = initialState, action ) => {\r\n    //console.log(state);\r\n    switch (action.type) {\r\n        // case 'addToken' :\r\n        //     let stateAddToken= {...state};\r\n        //     stateAddToken.authorization = {...state.authorization};\r\n        //     stateAddToken.authorization.userData.token = action.value;\r\n        //     return stateAddToken;\r\n        case 'addUserData' :\r\n            let stateAddUserData= {...state};\r\n            stateAddUserData.token = action.token;\r\n            stateAddUserData.user_code = action.user_code;\r\n            stateAddUserData.user_name = action.user_name;\r\n            stateAddUserData.user_position = action.user_position;\r\n            stateAddUserData.OPERATIONS = action.OPERATIONS;\r\n            return stateAddUserData;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addUserDataCreator = (token, user_code, user_name, user_position, OPERATIONS) => {\r\n    return {\r\n        type: addUserData, token: token, user_code: user_code, user_name: user_name, user_position: user_position, OPERATIONS: OPERATIONS\r\n    }\r\n}\r\n\r\n\r\nexport default userReducer;\r\n\r\n\r\n","\r\n\r\nlet isLoading = 'isLoading';\r\nlet tableData = 'tableData';\r\nlet operationName = 'operationName';\r\nlet showPopupTable = 'showPopupTable';\r\nlet roleData = 'roleData';\r\n\r\nlet initialState = {\r\n    isLoading: false,\r\n    showTable: false,\r\n    tableData: null,\r\n    nameOperation: null,\r\n    operation: null,\r\n    showPopupTable: false,\r\n    typePopup: null,\r\n    roleData: null\r\n}\r\n\r\n\r\n\r\nconst menuReducer = (state = initialState, action ) => {\r\n    //console.log(state);\r\n    //console.log(action);\r\n    //console.log('zaushlo - commonReducer');\r\n    switch (action.type) {\r\n\r\n        case 'showPopupTable' :\r\n            let stateShowPopupTable= {...state};\r\n            stateShowPopupTable.showPopupTable = action.showPopupTable;\r\n            stateShowPopupTable.typePopup = action.typePopup;\r\n            console.log(stateShowPopupTable);\r\n            return stateShowPopupTable;\r\n        case 'isLoading' :\r\n            let stateIsLoading= {...state};\r\n            stateIsLoading.isLoading = action.loading;\r\n            console.log(stateIsLoading);\r\n            return stateIsLoading;\r\n        case 'tableData' :\r\n            let stateAddTableData= {...state};\r\n            console.log(action.tableData);\r\n            console.log( action.tableData != 'empty' );\r\n            stateAddTableData.tableData = action.tableData;\r\n            // if(action.tableData != 'empty') {\r\n            //     stateAddTableData.tableData = action.tableData;\r\n            // }\r\n            stateAddTableData.showTable = action.showTable;\r\n            console.log(stateAddTableData);\r\n            return stateAddTableData;\r\n        case 'operationName' :\r\n            let stateOperationName= {...state};\r\n            stateOperationName.nameOperation = action.nameOperation;\r\n            stateOperationName.operation = action.operation;\r\n            console.log(stateOperationName);\r\n            return stateOperationName;\r\n        case 'roleData' :\r\n            let stateRoleData= {...state};\r\n            stateRoleData.roleData = action.roleData;\r\n            console.log(stateRoleData);\r\n            return stateRoleData;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const showPopupTableCreator = (value, typePopup) => {\r\n    console.log(value);\r\n    return {\r\n        type: showPopupTable, showPopupTable: value, typePopup:typePopup\r\n    }\r\n}\r\nexport const addTableDataCreator = (showTable, operation) => {\r\n    console.log(showTable);\r\n    console.log(operation);\r\n    return {\r\n        type: tableData,\r\n        showTable: showTable,\r\n        tableData: operation\r\n    }\r\n}\r\nexport const changeLoadingCreator = (loading) => {\r\n    //console.log(operation);\r\n    return {\r\n        type: isLoading, loading: loading\r\n    }\r\n}\r\nexport const operationNameCreator = (nameOperation, operation) => {\r\n    console.log(nameOperation);\r\n    console.log(operation);\r\n    return {\r\n        type: operationName, nameOperation: nameOperation, operation: operation\r\n    }\r\n}\r\nexport const roleDataCreator = (role) => {\r\n    console.log(roleData);\r\n    return {\r\n        type: roleData, roleData: role\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default menuReducer;\r\n\r\n\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { DropdownButton, Dropdown } from \"react-bootstrap\";\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      date: \"\"\r\n    }\r\n  }\r\n  userShortName = (userName) => {\r\n    let userNameArr = userName.split(\" \", 2);\r\n    let userShortName = userNameArr[0] && userNameArr[0][0];\r\n    if (userNameArr[1] && userNameArr[1].length > 0) {\r\n      userShortName = userShortName + userNameArr[1][0];\r\n    }\r\n    return userShortName;\r\n  };\r\n  getProfileData = () => {\r\n    this.props.store.history.push(\"/profile\");\r\n  };\r\n  async requestLogOut(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Auth`;\r\n    await axios\r\n      .delete(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        window.localStorage.removeItem(\"token\");\r\n        this.props.store.history.push(\"/login\");\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.response);\r\n      });\r\n  }\r\n  async getDate() {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Dictionary/GetLastBankingDate`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`\r\n        },\r\n      })\r\n      .then((res) => {\r\n        this.setState({date: res.data.last_banking_date})\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.response);\r\n      });\r\n  }\r\n\r\n  componentDidMount(){\r\n     this.getDate();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <header>\r\n        <div className=\"blockNav\">\r\n          <div className=\"logoBank\">ОЩАДБАНК</div>\r\n        </div>\r\n        <div className=\"blockHeader\">\r\n          <div className=\"nameProject\">\r\n            <div className=\"title\">\r\n            АРМ Звітність\r\n              </div> \r\n            <div className=\"dates\">\r\n              <p><b>остання завантажена дата обробки: {this.state.date}</b></p>\r\n              <p><b>остання завантажена дата авторизації: {this.state.date}</b></p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"userBlock\">\r\n            <div\r\n              onClick={this.getProfileData}\r\n              title=\"Мій кабінет\"\r\n              className=\"userLogo\"\r\n            >\r\n              {this.userShortName(this.props.store.userState.user_name)}\r\n            </div>\r\n            <div\r\n              onClick={this.getProfileData}\r\n              title=\"Мій кабінет\"\r\n              className=\"userName\"\r\n            >\r\n              {this.props.store.userState.user_name}\r\n            </div>\r\n            <DropdownButton id=\"dropdown-basic-button\" title=\"\">\r\n              <Dropdown.Item\r\n                onClick={() =>\r\n                  this.requestLogOut(this.props.store.userState.token)\r\n                }\r\n                as=\"button\"\r\n              >\r\n                Вийти\r\n              </Dropdown.Item>\r\n            </DropdownButton>\r\n          </div>\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\nexport default Header;\r\n","// TODO: refacoring render menu\r\nimport { useContext } from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Accordion } from \"react-bootstrap\";\r\n\r\nconst AccordionContent = (content) => <div className=\"indent\">{content}</div>;\r\nclass Menu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.activeOperation(\r\n      this.props.store.userState.OPERATIONS,\r\n      this.props.params\r\n    );\r\n  }\r\n  generateUserRoutingMenu = (menuItems) => {\r\n    let mappedUserConfig = menuItems.reduce((res, item) => {\r\n      const isMenu = item && item.menu && item.operation;\r\n      try {\r\n        if (isMenu) {\r\n          menuItems = menuItems.filter((i)=>i.menu)\r\n          let firstLevelMenu = menuItems.filter(\r\n            (item) => item.parent_operation === null\r\n          );\r\n          let notFirstLevelMenu = menuItems.filter(\r\n            (item) => item.parent_operation !== null\r\n          );\r\n          firstLevelMenu = firstLevelMenu.map((i) => {\r\n            const secondLevel = notFirstLevelMenu.filter(\r\n              (item) => i.operation === item.parent_operation\r\n            );\r\n            return { ...i, children: secondLevel };\r\n          });\r\n\r\n          for (let i = 0; i < firstLevelMenu.length; i++) {\r\n            const el = firstLevelMenu[i];\r\n            el.children = el.children.map((i) => {\r\n              const thirdLevel = notFirstLevelMenu.filter(\r\n                (item) => i.operation === item.parent_operation\r\n              );\r\n              return { ...i, children: thirdLevel };\r\n            });\r\n          }\r\n          return firstLevelMenu;\r\n        }\r\n        return res;\r\n      } catch (e) {\r\n        throw new Error(e);\r\n      }\r\n    }, []);\r\n    return [mappedUserConfig];\r\n  };\r\n\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    for (let i = 0; i < operationArr.length; i++) {\r\n      const item = operationArr[i];\r\n      if (item.operation === operation) {\r\n        res = item.name;\r\n      }\r\n    }\r\n    return res;\r\n  };\r\n\r\n  menuRender = (obj) => {\r\n    for (let key in obj) {\r\n      let li = (objItem) => {\r\n        return objItem.map((item, index) => {\r\n          if (!item.parent_operation) {\r\n            let subMenu = (objItem) => {\r\n              if (objItem != 0) {\r\n                return (\r\n                  <Accordion.Body>\r\n                    {objItem.map((item, indexTwo) => {\r\n                      if (item.children.length !== 0) {\r\n                        return (\r\n                          <Accordion>\r\n                            <Accordion.Item eventKey={indexTwo}>\r\n                              <Accordion.Header>{item.name}</Accordion.Header>\r\n                              <Accordion.Body>\r\n                                {item.children.map((i) => {\r\n                                  return (\r\n                                    <div\r\n                                      className={`dropdownMenuItemLink ${\r\n                                        this.props.store.location.pathname.substr(\r\n                                          11\r\n                                        ) === i.operation\r\n                                          ? \"itemAct\"\r\n                                          : \"\"\r\n                                      }`}\r\n                                      name={i.name}\r\n                                      operation={i.operation}\r\n                                      onClick={this.itemLink}\r\n                                    >\r\n                                      <span>{i.name}</span>\r\n                                    </div>\r\n                                  );\r\n                                })}\r\n                              </Accordion.Body>\r\n                            </Accordion.Item>\r\n                          </Accordion>\r\n                        );\r\n                      }\r\n                      return (\r\n                        <div\r\n                          className={`dropdownMenuItemLink ${\r\n                            this.props.store.location.pathname.substr(11) ===\r\n                            item.operation\r\n                              ? \"itemAct\"\r\n                              : \"\"\r\n                          }`}\r\n                          name={item.name}\r\n                          operation={item.operation}\r\n                          onClick={this.itemLink}\r\n                        >\r\n                          <span>{item.name}</span>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </Accordion.Body>\r\n                );\r\n              }\r\n            };\r\n            if (item.children != 0) {\r\n              return (\r\n                <Accordion.Item eventKey={index}>\r\n                  <Accordion.Header style={{fontWeight: \"500\"}}>{item.name}</Accordion.Header>\r\n                  {subMenu(item.children)}\r\n                </Accordion.Item>\r\n              );\r\n            } else {\r\n              return (\r\n                <div className=\"accordion-item\">\r\n                  <h5 className=\"accordion-header\">\r\n                    <button\r\n                      type=\"button\"\r\n                      aria-expanded=\"false\"\r\n                      className=\"accordionWithOutChildren collapsed\"\r\n                    >\r\n                      {item.name}\r\n                    </button>\r\n                  </h5>\r\n                </div>\r\n              );\r\n            }\r\n          }\r\n        });\r\n      };\r\n      return <Accordion>{li(obj[key])}</Accordion>;\r\n    }\r\n  };\r\n\r\n  itemLink = (e) => {\r\n    e.stopPropagation();\r\n    let operation = e.currentTarget.getAttribute(\"operation\");\r\n    this.props.store.history.push(`/dashboard/${operation}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"menu\">\r\n        <div className=\"coverList\">\r\n          {this.menuRender(\r\n            this.generateUserRoutingMenu(this.props.store.userState.OPERATIONS)\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport cellEditFactory from \"react-bootstrap-table2-editor\";\r\nimport * as axios from \"axios\";\r\n\r\nclass TableBootstrapDICT extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT(this.props.store.userState.token, this.params);\r\n  }\r\n  async requestDICT(token, operation) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/${operation}`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.addTableData(true, response.data.Table);\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  columnsData = (data) => {\r\n    let res = [];\r\n    Object.keys(data).map((a) => res.push({ dataField: a, text: data[a] }));\r\n    return res;\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    for (let i = 0; i < operationArr.length; i++) {\r\n      const item = operationArr[i];\r\n      if (item.operation === operation) {\r\n        res = item.name;\r\n      }\r\n    }\r\n    return res;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"innerTable\">\r\n          <div className=\"Table\">\r\n            <BootstrapTable\r\n              keyField=\"id\"\r\n              data={this.props.store.menuState.tableData.TableRows}\r\n              columns={this.columnsData(\r\n                this.props.store.menuState.tableData.TableHeaders\r\n              )}\r\n              cellEdit={cellEditFactory({ mode: \"click\", blurToSave: true })}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TableBootstrapDICT;\r\n","import Button from \"@restart/ui/esm/Button\";\r\nimport axios from \"axios\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\r\n\r\nexport default function NETWORK_REPORT({ store }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [brand, setBrand] = useState(null);\r\n  const [contact, setContact] = useState();\r\n  const [nameBrand, setNameBrand] = useState([]);\r\n  const [isLoadingStatus, setIsLoadingStatus] = useState(false);\r\n  const [optionsStatus, setOptionsStatus] = useState([]);\r\n  const [brandStatus, setBrandStatus] = useState(null);\r\n\r\n  const [isLoadingNameManager, setIsLoadingNameManager] = useState(false);\r\n  const [optionsNameManager, setOptionsNameManager] = useState([]);\r\n  const [nameManager, setNameManager] = useState(null);\r\n\r\n  const [isLoadingRUManager, setIsLoadingRUManager] = useState(false);\r\n  const [optionsRUManager, setOptionsRUManager] = useState([]);\r\n  const [ruManager, setRUManager] = useState(null);\r\n\r\n  const [isLoadingSecondLvl, setIsLoadingSecondLvl] = useState(false);\r\n  const [optionsSecondLvl, setOptionsSecondLvl] = useState([]);\r\n  const [secondLvl, setSecondLvl] = useState(null);\r\n\r\n  const [isLoadingSecondLvlRU, setIsLoadingSecondLvlRU] = useState(false);\r\n  const [optionsSecondLvlRU, setOptionsSecondLvlRU] = useState([]);\r\n  const [secondLvlRU, setSecondLvlRU] = useState(null);\r\n\r\n  const [isLoadingManager, setIsLoadingManager] = useState(false);\r\n  const [optionsManager, setOptionsManager] = useState([]);\r\n  const [manager, setManager] = useState(null);\r\n\r\n  const [isLoadingTSP, setIsLoadingTSP] = useState(false);\r\n  const [optionsTSP, setOptionsTSP] = useState([]);\r\n  const [tsp, setTSP] = useState(null);\r\n\r\n  const [form, setForm] = useState({\r\n    brand_id: 0,\r\n    brand_name: 1,\r\n    // brand_status_code: 1,\r\n    brand_status_name: 1,\r\n    brand_manager_id: 1,\r\n    brand_manager_institution_id: 1,\r\n    brand_contact_name: 1,\r\n    brand_contact_position: 1,\r\n    brand_contact_phone: 1,\r\n    brand_contact_email: 1,\r\n    level2_ident_code: 1,\r\n    level2_id: 1,\r\n    level2_name: 1,\r\n    level2_manager_id: 1,\r\n    level2_manager_institution_id: 1,\r\n    client_name: 1,\r\n    ident_code: 1,\r\n    client_manager_id: 1,\r\n    client_manager_institution_id: 1,\r\n    client_institution_id: 1\r\n  });\r\n  const handleSearchBrandName = async (query) => {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_NET_BRAND?name=brand_name&param1=${query}`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options =\r\n          res.data.record_count > 0 ? res.data.Table.TableRows : [];\r\n        setOptions(options);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleSearchNameManager = async () => {\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_NETWORK_MANAGERS?name=manager_name`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options = res.data.Table.TableRows.map((i) => ({\r\n          id: i.manager_id,\r\n          value: i.manager_name,\r\n        }));\r\n        setOptionsNameManager(options);\r\n        setIsLoadingNameManager(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // handleSearchBrandStatus();\r\n    handleSearchNameManager();\r\n    // handleSearchRUManager();\r\n    // handleSearchBrandNameSecondLvl();\r\n    // handleSearchBrandNameSecondLvlRU();\r\n    // handleSearchManager();\r\n  }, []);\r\n\r\n  const handleContactInput = (e) => {\r\n    setContact((prevState) => ({\r\n      ...prevState,\r\n      [e.target.getAttribute(\"name\")]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const confirm = async () => {\r\n    store.changeLoading(true);\r\n    console.log(nameBrand);\r\n    await axios\r\n      .post(\r\n        `/api/Dictionary/GetNetworkClientsReport`,\r\n        { ...form, brand_id: nameBrand.length !== 0 ? brand.brand_id : 0 },\r\n        {\r\n          headers: {\r\n            token: store.userState.token,\r\n          },\r\n          responseType: \"blob\",\r\n        }\r\n      )\r\n      .then((response) => {\r\n        store.changeLoading(false);\r\n\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        let fileTitle = decodeURI(\r\n          response.headers[\"content-disposition\"].split(\"filename*=UTF-8''\")[1]\r\n        );\r\n        link.href = url;\r\n        link.setAttribute(\"download\", fileTitle);\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      });\r\n  };\r\n\r\n  const handleForm = (e) => {\r\n    if (!e.target.name) return;\r\n    let name = e.target.name;\r\n    let val = e.target.checked;\r\n    setForm((i) => {\r\n      return { ...i, [name]: val ? 1 : 0 };\r\n    });\r\n  };\r\nconst activeOperation = (operationArr, operation) => {\r\n  let res;\r\n  operationArr.map((item, index) => {\r\n    if (item.operation == operation) {\r\n      console.log(item.name);\r\n      res = item.name;\r\n    }\r\n  });\r\n  return res;\r\n};\r\n  return (\r\n    <div className=\"coverTable DICT_NET_BRAND\">\r\n      <div className=\"headerTable\">\r\n        <div className=\"titleTable\">\r\n          {activeOperation(\r\n            store.userState.OPERATIONS,\r\n            store.location.pathname.substr(11)\r\n          )}\r\n        </div>\r\n        <div className=\"optionBlock\"></div>\r\n      </div>\r\n      <div className=\"addbBlock\" onChange={handleForm}>\r\n        <div className=\"row col-4\">\r\n          <div className=\"row col-8\">\r\n            <AsyncTypeahead\r\n              filterBy={() => true}\r\n              id=\"async-brand\"\r\n              isLoading={isLoading}\r\n              labelKey={(option) => {\r\n                setBrand(option);\r\n                return option.brand_name;\r\n              }}\r\n              minLength={3}\r\n              onSearch={handleSearchBrandName}\r\n              options={options}\r\n              searchText=\"Пошук...\"\r\n              placeholder=\"Назва мережі...\"\r\n              onChange={setNameBrand}\r\n              renderMenuItemChildren={(option, props) => (\r\n                <option value={option.brand_id}>{option.brand_name}</option>\r\n              )}\r\n            />\r\n          </div>\r\n          <div>\r\n            {/* <label>Назва статуса мережі</label> */}\r\n            {/* <Form.Select\r\n              onChange={(e) => {\r\n                setBrandStatus({\r\n                  brand_status_name:\r\n                    e.target.options[e.target.selectedIndex].text,\r\n                  brand_status_code: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingStatus\r\n                ? optionsStatus.map((option) => (\r\n                    <option value={option.id}>{option.value}</option>\r\n                  ))\r\n                : null}\r\n            </Form.Select> */}\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              name={`brand_status_name`}\r\n              label={`Назва статуса мережі`}\r\n            />\r\n          </div>\r\n          <div>\r\n            {/* <label>ПІБ менеджера мережі</label>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                setNameManager({\r\n                  brand_manager_id: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingNameManager\r\n                ? optionsNameManager.map((option) => (\r\n                    <option value={option.id}>{option.value}</option>\r\n                  ))\r\n                : null}\r\n            </Form.Select> */}\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              name={`brand_manager_id`}\r\n              label={`ПІБ менеджера мережі`}\r\n            />\r\n          </div>\r\n          <div>\r\n            {/* <label>РУ менеджера мережі</label>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                setRUManager({\r\n                  brand_manager_institution_id: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingRUManager\r\n                ? optionsRUManager.map((option) => (\r\n                    <option value={option.id}>{option.value}</option>\r\n                  ))\r\n                : null}\r\n            </Form.Select> */}\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              name={`brand_manager_institution_id`}\r\n              label={`РУ менеджера мережі`}\r\n            />\r\n       \r\n          </div>\r\n\r\n          <h5 className=\"mt-4\">Контактна особа мережі</h5>\r\n\r\n          {/* <div className=\"form\" onChange={handleContactInput}>\r\n            <label>ПІБ</label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"brand_contact_name\"\r\n              name=\"brand_contact_name\"\r\n            />\r\n            <label>Посада</label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"brand_contact_position\"\r\n              name=\"brand_contact_position\"\r\n            />\r\n            <label>Телефон</label>\r\n            <Form.Control\r\n              type=\"phone\"\r\n              name=\"brand_contact_phone\"\r\n              name=\"brand_contact_phone\"\r\n            />\r\n            <label>Email</label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"brand_contact_email\"\r\n              name=\"brand_contact_email\"\r\n            />\r\n          </div>*/}\r\n          <div>\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"10px\" }}\r\n              type={\"checkbox\"}\r\n              name={`brand_contact_name`}\r\n              label={`ПІБ`}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              name={`brand_contact_position`}\r\n              label={`Посада`}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              name={`brand_contact_phone`}\r\n              label={`Телефон`}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              name={`brand_contact_email`}\r\n              label={`Email`}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n          <div>\r\n            <h5>2 рівень</h5>\r\n          </div>\r\n          {/* <div className=\"form\" onChange={handleContactInput}>\r\n            <label>ЄДРПОУ 2 рівень</label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              name=\"level2_ident_code\"\r\n              name=\"level2_ident_code\"\r\n            />\r\n          </div> */}\r\n\r\n          <Form.Check\r\n            defaultChecked={true}\r\n            style={{ marginTop: \"20px\" }}\r\n            type={\"checkbox\"}\r\n            name={`level2_manager_id`}\r\n            label={`ПІБ менеджера 2го рівня`}\r\n          />\r\n\r\n          <div>\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              name={`level2_ident_code`}\r\n              label={`ЄДРПОУ 2 рівень`}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            {/* <label>Назва 2 рівня: </label>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                console.log();\r\n                setSecondLvl({\r\n                  level2_id: e.target.value,\r\n                  level2_name: e.target.options[e.target.selectedIndex].text,\r\n                  level2_manager_id:\r\n                    e.target.options[e.target.selectedIndex].getAttribute(\r\n                      \"manager\"\r\n                    ),\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingSecondLvl\r\n                ? optionsSecondLvl.map((option) => (\r\n                    <option value={option.id} manager={option.manager_name}>\r\n                      {option.value}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Form.Select>\r\n            <label>ID 2 рівня: </label>\r\n            <Form.Select>\r\n              <option>{secondLvl ? secondLvl.level2_id : null}</option>\r\n            </Form.Select>\r\n            <label>Менеджер 2 рівня: </label>\r\n            <Form.Select>\r\n              <option>{secondLvl ? secondLvl.level2_manager_id : null}</option>\r\n            </Form.Select>\r\n            <label>РУ менеджера 2 рівня: </label>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                console.log();\r\n                setSecondLvlRU({\r\n                  level2_manager_institution_id: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingSecondLvlRU\r\n                ? optionsSecondLvlRU.map((option) => (\r\n                    <option value={option.id}>{option.value}</option>\r\n                  ))\r\n                : null}\r\n            </Form.Select> */}\r\n\r\n            <div>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                name={`level2_name`}\r\n                label={`Назва 2 рівня`}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                name={`level2_id`}\r\n                label={`ID 2 рівня`}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                name={`level2_manager_id`}\r\n                label={`Менеджер 2 рівня`}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                name={`level2_manager_institution_id`}\r\n                label={`РУ менеджера 2 рівня`}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"col-4\">\r\n          <div className=\"row\">\r\n            <h5>ТСП</h5>\r\n          </div>\r\n          {/* \r\n          <div\r\n            style={{ height: \"120px\" }}\r\n            className=\"form\"\r\n            onChange={handleContactInput}\r\n            onBlur={handleSearchTSP}\r\n          >\r\n            <label>ІНН/ЄДРПОУ</label>\r\n            <Form.Control type=\"number\" name=\"ident_code\" name=\"ident_code\" />\r\n          </div> */}\r\n\r\n          <div>\r\n            <Form.Check\r\n              defaultChecked={true}\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              name={`ident_code`}\r\n              label={`ІНН/ЄДРПОУ`}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            {/* <div>\r\n              <label>Назва ТСП: </label>\r\n              <Form.Select\r\n                onChange={(e) => {\r\n                  setTSP({\r\n                    client_id: e.target.value,\r\n                  });\r\n                }}\r\n              >\r\n                <option></option>\r\n                {isLoadingTSP\r\n                  ? optionsTSP.map((option) => (\r\n                      <option value={option.id}>{option.value}</option>\r\n                    ))\r\n                  : null}\r\n              </Form.Select>\r\n            </div>\r\n\r\n            <div>\r\n              <label>Менеджер ТСП: </label>\r\n              <Form.Select\r\n                onChange={(e) => {\r\n                  setManager({\r\n                    client_manager_id: e.target.value,\r\n                    client_manager_institution_id:\r\n                      e.target.options[e.target.selectedIndex].getAttribute(\r\n                        \"institution-id\"\r\n                      ),\r\n                    client_manager_institution_name:\r\n                      e.target.options[e.target.selectedIndex].getAttribute(\r\n                        \"institution-name\"\r\n                      ),\r\n                  });\r\n                }}\r\n              >\r\n                <option></option>\r\n                {isLoadingManager\r\n                  ? optionsManager.map((option) => (\r\n                      <option\r\n                        value={option.id}\r\n                        institution-name={option.institution_id}\r\n                        institution-name={option.institution_name}\r\n                      >\r\n                        {option.value}\r\n                      </option>\r\n                    ))\r\n                  : null}\r\n              </Form.Select>\r\n            </div>\r\n            <div>\r\n              <label>РУ менеджера ТСП: </label>\r\n              <Form.Select>\r\n                <option>\r\n                  {manager ? manager.client_manager_institution_name : null}\r\n                </option>\r\n              </Form.Select>\r\n            </div>\r\n           */}\r\n\r\n            <div>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                name={`client_name`}\r\n                label={`Назва ТСП`}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                name={`client_manager_id`}\r\n                label={`Менеджер ТСП`}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                name={`client_manager_institution_id`}\r\n                label={`РУ менеджера ТСП`}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Form.Check\r\n                defaultChecked={true}\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                name={`client_institution_id`}\r\n                label={`РУ рахунка ТСП`}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"btnBlock\" style={{ background: \"white\", padding: \"10px\" }}>\r\n        <button class=\"btn btn-success\" onClick={confirm}>\r\n          Сформувати\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Alert, Form } from \"react-bootstrap\";\n\nexport default function DICT_BIN_TABLE({ store }) {\n  const textError = \"Заповніть будь ласка поле!\";\n\n  const [data, setData] = useState({});\n  const [isErrorBin, setIsErrorBin] = useState(false);\n  const [isErrorBankName, setIsErrorBankName] = useState(false);\n  const [isShowAlert, setIsShowAlert] = useState(false);\n  const [alertType, setAlertType] = useState(\"\");\n  const [alertText, setAlertText] = useState(\"\");\n\n  function handleForm(e) {\n    if (e.target.value === null) return;\n    const item = { [e.target.name]: e.target.value };\n    setData((data) => (data !== null ? { ...data, ...item } : item));\n  }\n\n  function validateForm() {\n    setIsErrorBin(false);\n    setIsErrorBankName(false);\n    if (!data.bin) {\n      setIsErrorBin(true);\n    }\n    if (!data.bankname) {\n      setIsErrorBankName(true);\n    }\n    if (isErrorBin || isErrorBankName) return;\n\n    submit();\n  }\n\n  async function submit() {\n    const baseURL = `/api/Dictionary/DICT_BIN_TABLE`;\n    await axios\n      .post(baseURL, data, {\n        headers: { token: `${store.userState.token}` },\n      })\n      .then((res) => {\n        if (res.data.ErrorStatus.ErrorCode === 0) {\n          setAlertType(\"success\");\n          setAlertText(`${res.data.ErrorStatus.ErrorMessage}`);\n        } else {\n          setAlertType(\"danger\");\n          setAlertText(\n            `${res.data.ErrorStatus.ErrorCode}: ${res.data.ErrorStatus.ErrorMessage}`\n          );\n        }\n      });\n    setIsShowAlert(true);\n    setData({});\n    setTimeout(() => {\n      setIsShowAlert(false);\n    }, 3000);\n  }\n\n  return (\n    <div className=\"coverTable DICT_BIN_TABLE\">\n      {isShowAlert ? (\n        <Alert key={1} variant={alertType}>\n          {alertText}\n        </Alert>\n      ) : null}\n      <div class=\"headerTable\">\n        <div class=\"titleTable\">BIN таблиця</div>\n        <div class=\"optionBlock\"></div>\n      </div>\n\n      <div className=\"filter row\">\n        <div className=\"col-4\">\n          <Form onChange={handleForm}>\n            <Form.Group className=\"form-input\">\n              <Form.Label>BIN</Form.Label>\n              <Form.Control\n                className={isErrorBin ? \"error\" : null}\n                name=\"bin\"\n                value={data.bin ?? \"\"}\n                type=\"text\"\n                placeholder=\"Впишіть bin\"\n              />\n              {isErrorBin ? <p className=\"error-text\">{textError}</p> : null}\n            </Form.Group>\n            <Form.Group className=\"form-input\">\n              <Form.Label>Назва банку</Form.Label>\n              <Form.Control\n                className={isErrorBankName ? \"error\" : null}\n                name=\"bankname\"\n                value={data.bankname ?? \"\"}\n                type=\"text\"\n                placeholder=\"ОщадБанк\"\n              />\n              {isErrorBankName ? (\n                <p className=\"error-text\">{textError}</p>\n              ) : null}\n            </Form.Group>\n            <Form.Group className=\"form-input\">\n              <Form.Label>Локальна назва банку </Form.Label>\n              <Form.Control\n                name=\"banknameloc\"\n                type=\"text\"\n                value={data.banknameloc ?? \"\"}\n                placeholder=\"Впишіть bin\"\n              />\n            </Form.Group>\n          </Form>\n        </div>\n        <div className=\"col-4\">\n          <Form onChange={handleForm}>\n            <Form.Group className=\"form-input\">\n              <Form.Label>Ember id</Form.Label>\n              <Form.Control\n                name=\"emberid\"\n                type=\"text\"\n                value={data.emberid ?? \"\"}\n                placeholder=\"Впишіть ember id\"\n              />\n            </Form.Group>\n            <Form.Group className=\"form-input\">\n              <Form.Label>Назва типу картки </Form.Label>\n              <Form.Control\n                name=\"cardtypename\"\n                type=\"text\"\n                value={data.cardtypename ?? \"\"}\n                placeholder=\"Впишіть тип картки\"\n              />\n            </Form.Group>\n            <Form.Group className=\"form-input\">\n              <Form.Label>Назва держави</Form.Label>\n              <Form.Control\n                name=\"country\"\n                type=\"text\"\n                value={data.country ?? \"\"}\n                placeholder=\"Впишіть назву держави\"\n              />\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n\n      <div class=\"btnBlock\">\n        <button class=\"search btn btn-primary\" onClick={validateForm}>\n          Створити\n        </button>\n      </div>\n    </div>\n  );\n}\n","import axios from \"axios\";\nimport { useState } from \"react\";\nimport { Alert, Form } from \"react-bootstrap\";\n\nexport default function DICT_BANK_RANGE({ store }) {\n  const textError = \"Заповніть будь ласка поле!\";\n\n  const [data, setData] = useState({});\n  const [isErrorBin, setIsErrorBin] = useState(false);\n  const [isErrorBankName, setIsErrorBankName] = useState(false);\n  const [isErrorMinNum, setIsErrorMinNum] = useState(false);\n  const [isErrorMaxNum, setIsErrorMaxNum] = useState(false);\n\n  const [isShowAlert, setIsShowAlert] = useState(false);\n  const [alertType, setAlertType] = useState(\"\");\n  const [alertText, setAlertText] = useState(\"\");\n\n  function handleForm(e) {\n    if (e.target.value === null) return;\n    const item = { [e.target.name]: e.target.value };\n\n    setData((data) => (data !== null ? { ...data, ...item } : item));\n  }\n\n  function validateForm() {\n    setIsErrorBin(false);\n    setIsErrorBankName(false);\n    setIsErrorMinNum(false);\n    setIsErrorMaxNum(false);\n    if (!data.bin) {\n      setIsErrorBin(true);\n    }\n    if (!data.bank_range_name) {\n      setIsErrorBankName(true);\n    }\n    if (!data.min_number) {\n      setIsErrorMinNum(true);\n    }\n    if (!data.max_number) {\n      setIsErrorMaxNum(true);\n    }\n    if (isErrorBin || isErrorBankName || isErrorMinNum || isErrorMaxNum) return;\n\n    submit();\n  }\n\n  async function submit() {\n    const baseURL = `/api/Dictionary/DICT_BANK_RANGE`;\n    await axios\n      .post(baseURL, data, {\n        headers: { token: `${store.userState.token}` },\n      })\n      .then((res) => {\n        if (res.data.ErrorStatus.ErrorCode === 0) {\n          setAlertType(\"success\");\n          setAlertText(`${res.data.ErrorStatus.ErrorMessage}`);\n          setTimeout(() => {\n            setIsShowAlert(false);\n          }, 3000);\n        } else {\n          setAlertType(\"danger\");\n          setAlertText(\n            `${res.data.ErrorStatus.ErrorCode}: ${res.data.ErrorStatus.ErrorMessage}`\n          );\n        }\n      });\n    setIsShowAlert(true);\n    setData({});\n  }\n\n  return (\n    <div className=\"coverTable DICT_BIN_TABLE\">\n      {isShowAlert ? (\n        <Alert key={1} variant={alertType}>\n          {alertText}\n        </Alert>\n      ) : null}\n      <div class=\"headerTable\">\n        <div class=\"titleTable\">Діапазон карткових продуктів банку</div>\n        <div class=\"optionBlock\"></div>\n      </div>\n\n      <div className=\"filter row\">\n        <div className=\"col-4\">\n          <Form onChange={handleForm}>\n            <Form.Group className=\"form-input\">\n              <Form.Label>BIN</Form.Label>\n              <Form.Control\n                className={isErrorBin ? \"error\" : null}\n                name=\"bin\"\n                value={data.bin ?? \"\"}\n                type=\"text\"\n                placeholder=\"Впишіть bin\"\n              />\n              {isErrorBin ? <p className=\"error-text\">{textError}</p> : null}\n            </Form.Group>\n\n            <Form.Group className=\"form-input\">\n              <Form.Label>Назва банку</Form.Label>\n              <Form.Control\n                className={isErrorBankName ? \"error\" : null}\n                name=\"bank_range_name\"\n                value={data.bank_range_name ?? \"\"}\n                type=\"text\"\n                placeholder=\"Ощадбанк\"\n              />\n              {isErrorBankName ? (\n                <p className=\"error-text\">{textError}</p>\n              ) : null}\n            </Form.Group>\n\n            <Form.Group className=\"form-input\">\n              <Form.Label>Мінімальне число</Form.Label>\n              <Form.Control\n                className={isErrorMinNum ? \"error\" : null}\n                name=\"min_number\"\n                value={data.min_number ?? \"\"}\n                type=\"text\"\n                placeholder=\"Введіть число...\"\n              />\n              {isErrorMinNum ? <p className=\"error-text\">{textError}</p> : null}\n            </Form.Group>\n\n            <Form.Group className=\"form-input\">\n              <Form.Label>Максимальне число</Form.Label>\n              <Form.Control\n                className={isErrorMaxNum ? \"error\" : null}\n                name=\"max_number\"\n                value={data.max_number ?? \"\"}\n                type=\"text\"\n                placeholder=\"Введіть число...\"\n              />\n              {isErrorMaxNum ? <p className=\"error-text\">{textError}</p> : null}\n            </Form.Group>\n          </Form>\n        </div>\n      </div>\n\n      <div class=\"btnBlock\">\n        <button class=\"search btn btn-primary\" onClick={validateForm}>\n          Створити\n        </button>\n      </div>\n    </div>\n  );\n}\n","import * as axios from \"axios\";\n\nfunction activeOperation(operationArr, operation) {\n  let res;\n  operationArr.map((item) => {\n    if (item.operation === operation) {\n      res = item.name;\n    }\n  });\n  return res;\n}\n\nfunction editColumn(e, row, _this) {\n  let nameRole = e.currentTarget.getAttribute(\"name\");\n  let inputValue = e.target.checked;\n  row[nameRole] = inputValue;\n  let obj = {\n    role_id: `${_this.state.isSelected}`,\n    operations: [row],\n  };\n\n  requestADMIN_ROLE_OPERATIONS_edit(_this.props.store.userState.token, obj, _this);\n}\n\nasync function requestADMIN_ROLE_OPERATIONS_edit(token, obj, _this) {\n  _this.props.store.changeLoading(true);\n  const baseUrl = `/api/UserOperations`;\n\n  await axios\n    .put(baseUrl, obj, {\n      headers: {\n        Token: `${token}`,\n      },\n    })\n    .then(() => {\n      _this.requestADMIN_ROLE_OPERATIONS(\n        _this.props.store.userState.token,\n        _this.state.isSelected\n      );\n      _this.props.store.changeLoading(false);\n    })\n    .catch((error) => {\n      throw new Error(error)\n    });\n}\n\nasync function requestADMIN_ROLE_OPERATIONS(_this) {\n  const token = _this.props.store.userState.token;\n  const roleID = _this.state.isSelected;\n\n  _this.props.store.changeLoading(true);\n  const baseUrl = `/api/UserOperations/${roleID}`;\n  await axios\n    .get(baseUrl, {\n      headers: {\n        Token: `${token}`,\n      },\n    })\n    .then((response) => {\n      _this.setState({\n        operations: response.data.operations,\n        isShowTable: true,\n      });\n      _this.props.store.changeLoading(false);\n    })\n    .catch((error) => {\n      console.log(error);\n    });\n}\n\nfunction selectRoleID(e, _this) {\n  let roleID = e.target.value;\n  if (!roleID) return;\n  _this.setState({\n    isSelected: roleID,\n  });\n  requestADMIN_ROLE_OPERATIONS(_this);\n}\n\nfunction checkbox(row, cell, name, _this) {\n  return (\n    <input\n      onChange={(e) => editColumn(e, row, _this)}\n      checked={cell}\n      name={name}\n      type=\"checkbox\"\n    />\n  );\n}\n\nconst editEnableColumn = (cell, row, _this) => checkbox(row, cell, \"enabled\",_this);\nconst editCancelColumn = (cell, row, _this) => checkbox(row, cell, \"cancel\", _this);\nconst editCreateColumn = (cell, row, _this) => checkbox(row, cell, \"create\", _this);\nconst editDeleteColumn = (cell, row, _this) => checkbox(row, cell, \"delete\", _this);\nconst editModifyColumn = (cell, row, _this) => checkbox(row, cell, \"modify\", _this);\n\nconst OptionItem = (props) => {\n  return (\n    <option\n      selected={\n        props.state.isSelected === props.optionItem.user_code ? \"selected\" : \"\"\n      }\n      value={props.optionItem.user_code}\n    >\n      {props.optionItem.user_name}\n    </option>\n  );\n};\n\nasync function requestADMIN_ROLES(_this) {\n  const token = _this.props.store.userState.token;\n  _this.props.store.changeLoading(true);\n  const body = {\n    user_code: \"\",\n    user_name: \"\",\n    bank_branch_id: 0,\n    only_active: true,\n  };\n  const baseUrl = `/api/User`;\n  await axios\n    .post(baseUrl, body, {\n      headers: {\n        Token: `${token}`,\n      },\n    })\n    .then((response) => {\n      _this.setState({\n        roles: response.data.users,\n        isShowSelectRoles: true,\n      });\n      _this.props.store.changeLoading(false);\n    })\n    .catch((error) => {\n      console.log(error.response);\n    });\n}\n\nexport {\n  requestADMIN_ROLES,\n  activeOperation,\n  selectRoleID,\n  requestADMIN_ROLE_OPERATIONS,\n  OptionItem,\n  editEnableColumn, \n  editCancelColumn, \n  editCreateColumn, \n  editDeleteColumn, \n  editModifyColumn\n};\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { activeOperation } from \"../ADMIN/helpers\";\r\n\r\nconst OptionItemDICT_NET_BRAND = (props) => {\r\n  return (\r\n    <option value={props.optionItem.brand_id}>\r\n      {props.optionItem.brand_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_NET_ENTITY = (props) => {\r\n  return (\r\n    <option value={props.optionItem.entity_id}>\r\n      {props.optionItem.entity_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_NETWORK_MANAGERS = (props) => {\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.manager_id == props.manager_id ? \"selected\" : \"\"\r\n      }\r\n      value={props.optionItem.manager_id}\r\n    >\r\n      {props.optionItem.manager_name}\r\n    </option>\r\n  );\r\n};\r\n\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  return (\r\n    <option\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      name={props.item.client_name}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.ident_code}\r\n    </option>\r\n  );\r\n};\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  // componentWillUnmount() {\r\n  //   window.addEventListener(\"mousedown\", null);\r\n  // }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.props.addIdentCode(Number(0), \"\", false);\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param !== \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    e.stopPropagation();\r\n    if (!e) return;\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    if (val !== \"\") {\r\n      this.props.addIdentCode(currentVal.ident_code, currentVal.client_name, true);\r\n      this.setState({\r\n        inputRequest: currentVal.ident_code,\r\n        inputResult: currentVal.ident_code,\r\n        isShowBlockSelect: false,\r\n        selected: true,\r\n      });\r\n      if (val.toString() !== this.state.inputRequest.toString()) {\r\n        this.request(this.props.token, val, false);\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          id=\"inputmask\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть перші три цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : null\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect\r\n            ? this.state.data != null\r\n              ? this.state.data.map((item, index) => {\r\n                  return (\r\n                    <BlockSelectItemIdentCode\r\n                      key={index}\r\n                      item={item}\r\n                      onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                    />\r\n                  );\r\n                })\r\n              : null\r\n            : null}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass NETWORK_ADD_CLIENT extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isContact_emailError: false,\r\n      isDisabledSaveBtn: false,\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n      isDisableButton: false,\r\n      selectRow: null,\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n      TSPReportSettingsSearchObj: {},\r\n      settings: null,\r\n      tsp_list: null,\r\n      isShowTsp: false,\r\n      currentTsp: null,\r\n      isShowTypeAcquiring: false,\r\n      isShowReport: false,\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowREPORT_FORMAT: false,\r\n      DICT_REPORT_PERIOD_TYPE: null,\r\n      isShowDICT_REPORT_PERIOD_TYPE: false,\r\n      DICT_REPORT_CHANNEL_TYPE: null,\r\n      isShowDICT_REPORT_CHANNEL_TYPE: false,\r\n      isShowTableTSPReportSettingsSTD: false,\r\n      TSPReportSettingsSTD: null,\r\n      DICT_NET_CLIENT_STATUS: null,\r\n      isShowDICT_NET_CLIENT_STATUS: false,\r\n      isShowPopupError: false,\r\n      isShowPopupErrorSave: false,\r\n      currentAcquiring_type_id: null,\r\n      type_acquiring: 1,\r\n      tsp_id: null,\r\n      report_format_id: null,\r\n      report_period_type_id: null,\r\n      channel_type_id: null,\r\n      file_name_mask: null,\r\n      isShowOrder_numberError: false,\r\n      isShowBootstrapTable: true,\r\n      options: [\r\n        {\r\n          client_id: 6595650,\r\n          client_name: \"МП Октан1\",\r\n          entity_id: 0,\r\n          entity_name: null,\r\n          ident_code: \"13351072\",\r\n        },\r\n        {\r\n          client_id: 6595651,\r\n          client_name: \"МП Октан2\",\r\n          entity_id: 1,\r\n          entity_name: null,\r\n          ident_code: \"13351073\",\r\n        },\r\n      ],\r\n      value: \"\",\r\n      DICT_NET_BRAND_QueryTSP: [],\r\n      isShowDICT_NET_BRAND_QueryTSP: false,\r\n      isDisableInputDICT_NETWORK_MANAGERS: true,\r\n      DICT_NETWORK_MANAGERS: null,\r\n      isShowSelectDICT_NETWORK_MANAGERS: false,\r\n      isDisableInputDICT_NET_BRAND: true,\r\n      isShowSelectDICT_NET_BRAND: false,\r\n      DICT_NET_BRAND: null,\r\n      isDisableInputDICT_NET_ENTITY: true,\r\n      isShowSelectDICT_NET_ENTITY: false,\r\n      DICT_NET_ENTITY: null,\r\n      isDisableBtnSave: true,\r\n      isDisableIdent_code: true,\r\n      isDisableInput: true,\r\n      ident_code: null,\r\n      client_name: null,\r\n      client_id: null,\r\n      manager_id: null,\r\n      brand_id: null,\r\n      entity_id: null,\r\n      isDICT_NET_BRAND_QueryTSPEmpty: false,\r\n    };\r\n  }\r\n  async requestDICT_NETWORK_MANAGERS(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_NETWORK_MANAGERS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_NETWORK_MANAGERS: response.data.Table.TableRows,\r\n          isShowSelectDICT_NETWORK_MANAGERS: true,\r\n          isDisableInputDICT_NETWORK_MANAGERS: false,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestDICT_NET_CLIENT(token, body) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_CLIENT`;\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestDICT_NET_BRAND_QueryTSP(token, val) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND/QueryTSP`;\r\n    let ident_code = {\r\n      ident_code: val,\r\n    };\r\n    await axios\r\n      .post(baseUrl, ident_code, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count == 0) {\r\n          this.setState({\r\n            isDICT_NET_BRAND_QueryTSPEmpty: true,\r\n            isDisableIdent_code: true,\r\n            isShowDICT_NET_BRAND_QueryTSP: false,\r\n            DICT_NET_BRAND_QueryTSP: [],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_NET_BRAND_QueryTSP: response.data.tsp_list,\r\n            isDisableIdent_code: false,\r\n            isShowDICT_NET_BRAND_QueryTSP: true,\r\n            isDICT_NET_BRAND_QueryTSPEmpty: false,\r\n          });\r\n        }\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n\r\n  async requestDICT_NET_BRAND(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          isDisableInputDICT_NET_BRAND: false,\r\n          isShowSelectDICT_NET_BRAND: true,\r\n          DICT_NET_BRAND: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestDICT_NET_ENTITY(token, brand_id) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_ENTITY/?param1=${brand_id}`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows) {\r\n          this.setState({\r\n            isShowSelectDICT_NET_ENTITY: true,\r\n            DICT_NET_ENTITY: response.data.Table.TableRows,\r\n          });\r\n        }\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  changeSelect = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    if (name_input === \"physical_acquiring_type_id\")\r\n      this.setState({ [name_input]: Number(inputValue) });\r\n  };\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n\r\n  closePopupOrder_numberError = () => {\r\n    this.setState({\r\n      isShowOrder_numberError: false,\r\n      isShowBootstrapTable: true,\r\n    });\r\n  };\r\n\r\n  renderItem = (item, highlighted) => {\r\n    return (\r\n      <div\r\n        id={item.ident_code}\r\n        key={item.ident_code}\r\n        style={{ backgroundColor: highlighted ? \"#eee\" : \"transparent\" }}\r\n      >\r\n        {item.ident_code}\r\n      </div>\r\n    );\r\n  };\r\n  shouldItemRender = (item, value) =>\r\n    item.ident_code.toLowerCase().indexOf(value.toLowerCase()) > -1;\r\n\r\n  autocompleteSelect = (value) => {\r\n    this.setState({ value });\r\n  };\r\n\r\n  ident_code = (e) => {\r\n    let val = e.target.value;\r\n    if (val != \"\") {\r\n      this.requestDICT_NET_BRAND_QueryTSP(\r\n        this.props.store.userState.token,\r\n        val\r\n      );\r\n    } else {\r\n      this.setState({ isDisableInput: true });\r\n    }\r\n  };\r\n  changeSelectDICT_NET_BRAND_QueryTSP = (e) => {\r\n    let inputValue = e.target.value;\r\n    let client_name, client_id;\r\n    this.state.DICT_NET_BRAND_QueryTSP.filter(function (\r\n      currentElement,\r\n      index,\r\n      array\r\n    ) {\r\n      if (currentElement.ident_code == inputValue) {\r\n        client_name = currentElement.client_name;\r\n        client_id = currentElement.client_id;\r\n      }\r\n    });\r\n    this.setState({\r\n      ident_code: inputValue,\r\n      client_name: client_name,\r\n      client_id: client_id,\r\n    });\r\n  };\r\n  changeInputDICT_NETWORK_MANAGERS = (e) => {\r\n    let inputValue = e.target.value;\r\n    this.setState({ manager_id: inputValue });\r\n    this.requestDICT_NET_BRAND(this.props.store.userState.token);\r\n  };\r\n  changeInputDICT_NET_BRAND = (e) => {\r\n    let inputValue = e.target.value;\r\n    const client = this.state.DICT_NET_BRAND.filter(\r\n      (i) => +i.brand_id === +inputValue\r\n    )[0];\r\n\r\n    if (client.second_level_flag === 1) {\r\n      this.setState({\r\n        isDisableInputDICT_NET_ENTITY: false,\r\n      });\r\n    }else{\r\n      this.setState({\r\n        isDisableInputDICT_NET_ENTITY: true,\r\n        entity_id: 0\r\n      });\r\n    }\r\n\r\n    this.setState({ brand_id: inputValue });\r\n    this.requestDICT_NET_ENTITY(this.props.store.userState.token, inputValue);\r\n  };\r\n  changeInputDICT_NET_ENTITY = (e) => {\r\n    let inputValue = e.target.value;\r\n\r\n    const client = this.state.DICT_NET_ENTITY.filter(\r\n      (i) => +i.entity_id === +inputValue\r\n    )[0];\r\n\r\n    this.setState({\r\n      entity_id: inputValue,\r\n      isDisableBtnSave: false,\r\n      manager_id: client.manager_id,\r\n      manager_name: client.manager_name,\r\n    });\r\n  };\r\n  save = () => {\r\n    let body = {\r\n      ident_code: this.state.ident_code,\r\n      client_id: Number(this.state.client_id),\r\n      manager_id: Number(this.state.manager_id),\r\n      brand_id: Number(this.state.brand_id),\r\n      entity_id: Number(this.state.entity_id),\r\n      client_name: this.state.client_name,\r\n    };\r\n    this.requestDICT_NET_CLIENT(this.props.store.userState.token, body);\r\n  };\r\n  addIdentCode = (val, name, nextInput) => {\r\n\r\n    console.log(\"value: \", val)\r\n    if (nextInput) {\r\n      this.requestDICT_NETWORK_MANAGERS(this.props.store.userState.token);\r\n      this.setState({\r\n        ident_code: val,\r\n        client_name: name,\r\n        isDisableInputDICT_NETWORK_MANAGERS: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ident_code: val,\r\n        client_name: name,\r\n        isDisableInputDICT_NETWORK_MANAGERS: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.requestDICT_NET_BRAND(this.props.store.userState.token);\r\n    this.requestDICT_NETWORK_MANAGERS(this.props.store.userState.token);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable DICT_NET_BRAND\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"addbBlock\">\r\n          <div className=\"coverInputs col-4\">\r\n            <label htmlFor=\"brand_region\">Мережа</label>\r\n            <select\r\n              onChange={this.changeInputDICT_NET_BRAND}\r\n              api_name=\"brand_region\"\r\n              id=\"brand_region\"\r\n              className=\"form-select\"\r\n              title=\"Регіональні управління\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectDICT_NET_BRAND\r\n                ? this.state.DICT_NET_BRAND.map((item, index) => {\r\n                    return (\r\n                      <OptionItemDICT_NET_BRAND\r\n                        key={index}\r\n                        optionItem={item}\r\n                        institution_id={this.state.brand_region}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n            <label htmlFor=\"brand_region\">2 рівень</label>\r\n            <select\r\n              disabled={\r\n                this.state.isDisableInputDICT_NET_ENTITY ? \"disabled\" : \"\"\r\n              }\r\n              onChange={this.changeInputDICT_NET_ENTITY}\r\n              api_name=\"brand_region\"\r\n              id=\"brand_region\"\r\n              className=\"form-select\"\r\n              title=\"Регіональні управління\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectDICT_NET_ENTITY\r\n                ? this.state.DICT_NET_ENTITY.map((item, index) => {\r\n                    return (\r\n                      <OptionItemDICT_NET_ENTITY\r\n                        key={index}\r\n                        optionItem={item}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n\r\n            <label htmlFor=\"DICT_NETWORK_MANAGERS\">Менеджер ТСП</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInputDICT_NETWORK_MANAGERS}\r\n              api_name=\"manager_name\"\r\n              className=\"form-select\"\r\n              title=\"ТВБВ\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectDICT_NETWORK_MANAGERS\r\n                ? this.state.DICT_NETWORK_MANAGERS.map((item, index) => {\r\n                    return (\r\n                      <OptionItemDICT_NETWORK_MANAGERS\r\n                        key={index}\r\n                        optionItem={item}\r\n                        manager_id={this.state.manager_id}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n          </div>\r\n\r\n          <div className=\"coverInputs col-4\">\r\n            <label htmlFor=\"name_netWork\">ІНН/ЄДРПОУ</label>\r\n            <AutocompleteInputIdentCode\r\n              token={this.props.store.userState.token}\r\n              institution_id={0}\r\n              branch_id={0}\r\n              addIdentCode={this.addIdentCode}\r\n              ident_code={this.state.ident_code}\r\n              client_name={this.state.client_name}\r\n            />\r\n            <label htmlFor=\"status\">Назва ТСП</label>\r\n            <input\r\n              className=\"form-control\"\r\n              disabled\r\n              value={this.state.client_name}\r\n              type=\"text\"\r\n            />\r\n            <label htmlFor=\"status\">РУ менеджера</label>\r\n            <input\r\n              disabled\r\n              value={this.state.manager_id}\r\n              api_name=\"brand_name\"\r\n              id=\"name_netWork\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"coverBtn\">\r\n          <button\r\n            className=\"btn btn-success\"\r\n            // disabled={this.state.isDisableBtnSave ? \"disabled\" : \"\"}\r\n            onClick={this.save}\r\n          >\r\n            Зберегти мережу\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <div className=\"coverPopupError\">\r\n            <div className=\"innerBlock\">\r\n              <div className=\"title alert alert-primary\">\r\n                Немає результату по даному пошуку\r\n              </div>\r\n              <div className=\"msg\">Спробуйте ввести інші дані для пошуку</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.closePopupError}\r\n              >\r\n                Закрити\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <div className=\"coverPopupError\">\r\n            <div className=\"innerBlock\">\r\n              <div className=\"title alert alert-primary\">\r\n                Помилка при зберіганні\r\n              </div>\r\n              <div className=\"msg\">:(</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.closePopupErrorSave}\r\n              >\r\n                Закрити\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.state.isShowOrder_numberError ? (\r\n          <div className=\"coverOrder_numberError\">\r\n            <div className=\"innerBlock\">\r\n              <div className=\"title alert alert-primary\">\r\n                Такий порядковий номер вже вибрано\r\n              </div>\r\n              <div className=\"msg\">Введіть інший порядковий номер поля</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.closePopupOrder_numberError}\r\n              >\r\n                Закрити\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default NETWORK_ADD_CLIENT;\r\n","import { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\n// class MyClickableComponent extends React.PureComponent {\r\n//     constructor(props) {\r\n//         super(props)\r\n//\r\n//         this.state = {\r\n//             isOpen: false,\r\n//         }\r\n//     }\r\n//\r\n//     handleClick = e => {\r\n//         this.setState({ isOpen: true })\r\n//     }\r\n//\r\n//     render() {\r\n//         const { isOpen } = this.state\r\n//\r\n//         return (\r\n//             <div>\r\n//                 <div onClick={this.handleClick }>click on me</div>\r\n//                 {isOpen && (\r\n//                     <b>opened!</b>\r\n//                 )}\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\nconst SampleComponent = (props) => {\r\n  //console.log( props )\r\n  const OptionItemDICT_NETWORK_MANAGERS = (props) => {\r\n    //console.log( props )\r\n    return (\r\n      <option\r\n        selected={\r\n          props.optionItem.manager_id == props.manager_name ? \"selected\" : \"\"\r\n        }\r\n        value={props.optionItem.manager_id}\r\n      >\r\n        {props.optionItem.manager_name}\r\n      </option>\r\n      // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    );\r\n  };\r\n  // const changeInput = () => {\r\n  //\r\n  // }\r\n  return (\r\n    <div className=\"twoLevel\">\r\n      <div className=\"innerBlock\">\r\n        <label htmlFor=\"ident_code\">ЄДРПОУ</label>\r\n        <input\r\n          api_name=\"ident_code\"\r\n          entity_id={props.data.entity_id}\r\n          onChange={(e) => props.changeInputSC(e)}\r\n          value={props.data.ident_code}\r\n          id=\"ident_code\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n        />\r\n        <label htmlFor=\"entity_name\">Назва 2-го рівня</label>\r\n        <input\r\n          api_name=\"entity_name\"\r\n          entity_id={props.data.entity_id}\r\n          onChange={(e) => props.changeInputSC(e)}\r\n          value={props.data.entity_name}\r\n          id=\"entity_name\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n        />\r\n        <label htmlFor=\"brand_id\">Менеджер</label>\r\n        <select\r\n          id=\"dropdown-basic-button\"\r\n          entity_id={props.data.entity_id}\r\n          onChange={(e) => {\r\n            props.changeInputSC(e);\r\n          }}\r\n          api_name=\"manager_name\"\r\n          className=\"form-select\"\r\n          title=\"ТВБВ\"\r\n        >\r\n          <option>-</option>\r\n          {props.DICT_NETWORK_MANAGERS.map((item, index) => {\r\n            return (\r\n              <OptionItemDICT_NETWORK_MANAGERS\r\n                key={index}\r\n                optionItem={item}\r\n                manager_name={props.data.manager_name}\r\n              />\r\n            );\r\n          })}\r\n        </select>\r\n      </div>\r\n      <div className=\"innerBlock\">\r\n        <label htmlFor=\"brand_id\">ID 2-го рівня</label>\r\n        <input\r\n          api_name=\"brand_id\"\r\n          value={props.data.entity_id}\r\n          id=\"brand_id\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          disabled\r\n        />\r\n        <label htmlFor=\"brand_region\">РУ менеджера</label>\r\n        <input\r\n          api_name=\"brand_region\"\r\n          value={props.data.brand_manager_name}\r\n          id=\"brand_region\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          disabled\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.institution_id == props.institution_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.institution_id}\r\n    >\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_NET_CLIENT_STATUS = (props) => {\r\n  // console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.status_code == props.status_code ? \"selected\" : \"\"\r\n      }\r\n      value={props.optionItem.status_code}\r\n    >\r\n      {props.optionItem.status_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_NETWORK_MANAGERS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.manager_id == props.manager_id ? \"selected\" : \"\"\r\n      }\r\n      data-brandid={props.optionItem.institution_id}\r\n      data-brandname={props.optionItem.institution_name}\r\n      value={props.optionItem.manager_id}\r\n    >\r\n      {props.optionItem.manager_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\n\r\nclass NETWORK_CREATE extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isContact_emailError: false,\r\n      isDisabledSaveBtn: false,\r\n\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_NETWORK_MANAGERS: null,\r\n      isShowSelectDICT_NETWORK_MANAGERS: false,\r\n\r\n      isDisableInput: true,\r\n\r\n      brand_name: null,\r\n      brand_id: null,\r\n\r\n      contact_person: \"\",\r\n      contact_phone: \"\",\r\n      contact_position: \"\",\r\n      contact_email: \"\",\r\n      brand_status_code: null,\r\n      brand_region: null,\r\n      brand_id: null,\r\n      manager_name: null,\r\n      manager_id: null,\r\n\r\n      moreTwoLevel: false,\r\n      showTwoLevel: false,\r\n\r\n      levelBlockNumber: 1,\r\n\r\n      twoLevelArr: [],\r\n\r\n      isDisableButton: false,\r\n      selectRow: null,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      TSPReportSettingsSearchObj: {},\r\n\r\n      settings: null,\r\n      tsp_list: null,\r\n\r\n      isShowTsp: false,\r\n\r\n      currentTsp: null,\r\n\r\n      isShowTypeAcquiring: false,\r\n\r\n      //type_acquiring: 1, 1-фізичний 2-інтернет\r\n      isShowReport: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowREPORT_FORMAT: false,\r\n\r\n      DICT_REPORT_PERIOD_TYPE: null,\r\n      isShowDICT_REPORT_PERIOD_TYPE: false,\r\n\r\n      DICT_REPORT_CHANNEL_TYPE: null,\r\n      isShowDICT_REPORT_CHANNEL_TYPE: false,\r\n\r\n      isShowTableTSPReportSettingsSTD: false,\r\n      TSPReportSettingsSTD: null,\r\n\r\n      DICT_NET_CLIENT_STATUS: null,\r\n      isShowDICT_NET_CLIENT_STATUS: false,\r\n\r\n      isShowPopupError: false,\r\n      isShowPopupErrorSave: false,\r\n\r\n      currentAcquiring_type_id: null,\r\n\r\n      type_acquiring: 1,\r\n      tsp_id: null,\r\n      report_format_id: null,\r\n      report_period_type_id: null,\r\n      channel_type_id: null,\r\n      file_name_mask: null,\r\n\r\n      physical_acquiring_type_id: 1,\r\n      physical_channel_address: \"\",\r\n      physical_channel_type_id: 1,\r\n      physical_extended_report: false,\r\n      physical_file_name_mask: \"\",\r\n      physical_installment_report: false,\r\n      physical_report_format_id: 1,\r\n      physical_report_period_type_id: 1,\r\n      physical_standard_report: true,\r\n\r\n      internet_acquiring_type_id: 2,\r\n      internet_channel_address: \"\",\r\n      internet_channel_type_id: 1,\r\n      internet_extended_report: false,\r\n      internet_file_name_mask: \"\",\r\n      internet_installment_report: false,\r\n      internet_report_format_id: 1,\r\n      internet_report_period_type_id: 1,\r\n      internet_standard_report: true,\r\n\r\n      isShowOrder_numberError: false,\r\n      isShowBootstrapTable: true,\r\n\r\n      errorBrand: false,\r\n      errorStatus: false,\r\n      errorManager: false,\r\n      errorId: false,\r\n      errorRu: false,\r\n\r\n      showError: false,\r\n\r\n      test: [\r\n        {\r\n          entity_id: 545454,\r\n          ident_code: null,\r\n          manager_name: null,\r\n          entity_name: \"frf\",\r\n        },\r\n        {\r\n          entity_id: 567789,\r\n          ident_code: null,\r\n          manager_name: null,\r\n          entity_name: \"gfg\",\r\n        },\r\n      ],\r\n    };\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    //console.log('test');\r\n  }\r\n  selectDICT_INSTITUTION = (e) => {\r\n    console.log(e.target.value);\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      isShowSelectTVBV: false,\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(this.state.TSPReportSettingsSearchObj);\r\n\r\n    this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n  };\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestGetNewBrandId(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/GetNewBrandId`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n\r\n        this.requestDICT_NET_CLIENT_STATUS(this.props.store.userState.token);\r\n        this.requestDICT_NETWORK_MANAGERS(this.props.store.userState.token);\r\n        this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n        this.setState({\r\n          brand_id: response.data.brand_id,\r\n          isDisableInput: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestGetNewEntityId(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/GetNewEntityId`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n        let newObj = {\r\n          brand_id: this.state.brand_id,\r\n          entity_id: response.data.entity_id,\r\n          ident_code: null,\r\n          manager_name: null,\r\n          entity_name: \"\",\r\n        };\r\n        let cloneArr = this.state.twoLevelArr.map((a) => Object.assign({}, a));\r\n        cloneArr.push(newObj);\r\n\r\n        this.setState({\r\n          twoLevelArr: cloneArr,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_NETWORK_MANAGERS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_NETWORK_MANAGERS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_NETWORK_MANAGERS: response.data.Table.TableRows,\r\n          isShowSelectDICT_NETWORK_MANAGERS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowREPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_CHANNEL_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_CHANNEL_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_CHANNEL_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_CHANNEL_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_NET_CLIENT_STATUS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_CLIENT_STATUS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_NET_CLIENT_STATUS: response.data.Table.TableRows,\r\n          isShowDICT_NET_CLIENT_STATUS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestTSPReportSettings(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/TSPReportSettings`;\r\n\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        if (response.data.record_count >= 1) {\r\n          this.setState({\r\n            settings: response.data.settings,\r\n            tsp_list: response.data.tsp_list,\r\n            //tsp_id: response.data.tsp_list[0].tsp_id,\r\n            isShowTsp: true,\r\n          });\r\n        } else if (response.data.record_count < 1) {\r\n          this.setState({\r\n            isShowPopupError: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestTSPReportSettings_test(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/TSPReportSettings`;\r\n    let userBody = {\r\n      date_from: \"2018081\",\r\n      date_to: \"2021081\",\r\n      institution_id: \"824\",\r\n      tsp_name: \"Тзов\",\r\n    };\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        if (response.data.record_count >= 1) {\r\n          this.setState({\r\n            settings: response.data.settings,\r\n            tsp_list: response.data.tsp_list,\r\n            //tsp_id: response.data.tsp_list[0].tsp_id,\r\n            isShowTsp: true,\r\n          });\r\n        } else if (response.data.record_count < 1) {\r\n          this.setState({\r\n            isShowPopupError: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_NET_BRAND(token, body) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND`;\r\n\r\n    console.log(body);\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n\r\n        let cover = (item) => {\r\n          console.log(item);\r\n          this.requestDICT_NET_ENTITY(this.props.store.userState.token, item);\r\n        };\r\n        if (this.state.twoLevelArr.length != 0) {\r\n          this.state.twoLevelArr.forEach(function (item, i, arr) {\r\n            // console.log( i + \": \" + item + \" (массив:\" + arr + \")\" );\r\n            console.log(item);\r\n            cover(item);\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_NET_ENTITY(token, body) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_ENTITY`;\r\n\r\n    console.log(body);\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          brand_name: null,\r\n          brand_id: \"\",\r\n          contact_person: \"\",\r\n          contact_phone: \"\",\r\n          contact_position: \"\",\r\n          contact_email: \"\",\r\n          brand_status_code: null,\r\n          brand_region: null,\r\n          manager_name: null,\r\n          manager_id: null,\r\n\r\n          isDisableInput: true,\r\n          showTwoLevel: false,\r\n          moreTwoLevel: false,\r\n\r\n          twoLevelArr: [],\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestTSPReportSettingsSTD_SAVE(token, dody) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/TSPReportSettings`;\r\n\r\n    console.log(dody);\r\n    await axios\r\n      .put(baseUrl, dody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // this.setState({\r\n        //     TSPReportSettingsSTD: response.data.standard_settings,\r\n        //     isShowTableTSPReportSettingsSTD: true\r\n        // });\r\n        this.setState({\r\n          isShowTsp: false,\r\n          isShowTypeAcquiring: false,\r\n        });\r\n        this.search();\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n        this.setState({\r\n          isShowPopupErrorSave: true,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      });\r\n  }\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  save = () => {\r\n    let body = {\r\n      brand_name: this.state.brand_name,\r\n      brand_id: this.state.brand_id,\r\n      contact_person: this.state.contact_person,\r\n      contact_phone: this.state.contact_phone,\r\n      contact_position: this.state.contact_position,\r\n      contact_email: this.state.contact_email,\r\n      brand_status_code: this.state.brand_status_code,\r\n      brand_region: this.state.brand_region,\r\n      manager_name: this.state.manager_name,\r\n      manager_id: this.state.manager_id,\r\n      institution_id: this.state.institution_id,\r\n    };\r\n    this.setState({showError: false, errorBrand: false, errorStatus: false, errorManager: false})\r\n    if(!body.brand_name||!this.state.brand_status_code||!body.manager_id||!body.brand_id){\r\n      this.setState({\r\n        errorBrand: body.brand_name===\"\" || body.brand_name===null,\r\n        errorStatus: this.state.brand_status_code===\"\" || body.brand_status_code===null,\r\n        errorManager: body.manager_id===\"\" || body.manager_id===null,\r\n        showError: true\r\n      })\r\n     return \r\n    }\r\n\r\n\r\n    this.requestDICT_NET_BRAND(this.props.store.userState.token, body);\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeSelect = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n    if (name_input == \"physical_acquiring_type_id\")\r\n      this.setState({ physical_acquiring_type_id: Number(inputValue) });\r\n    if (name_input == \"physical_channel_type_id\")\r\n      this.setState({ physical_channel_type_id: Number(inputValue) });\r\n    if (name_input == \"physical_report_format_id\")\r\n      this.setState({ physical_report_format_id: Number(inputValue) });\r\n    if (name_input == \"physical_report_period_type_id\")\r\n      this.setState({ physical_report_period_type_id: Number(inputValue) });\r\n\r\n    if (name_input == \"internet_acquiring_type_id\")\r\n      this.setState({ internet_acquiring_type_id: Number(inputValue) });\r\n    if (name_input == \"internet_channel_type_id\")\r\n      this.setState({ internet_channel_type_id: Number(inputValue) });\r\n    if (name_input == \"internet_report_format_id\")\r\n      this.setState({ internet_report_format_id: Number(inputValue) });\r\n    if (name_input == \"internet_report_period_type_id\")\r\n      this.setState({ internet_report_period_type_id: Number(inputValue) });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n    this.setState({\r\n      name_input: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n\r\n  saveReport = () => {\r\n    let dody = {\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: [\r\n        {\r\n          acquiring_type_id: 1, //type_acquiring\r\n          // \"standard_report\": true,\r\n          // \"extended_report\": true,\r\n          // \"installment_report\": true,\r\n          report_format_id: this.state.physical_report_format_id, //report_format_id\r\n          // \"report_format_name\": \"string\",\r\n          report_period_type_id: this.state.physical_report_period_type_id, //report_period_type_id\r\n          // \"report_period_type_name\": \"string\",\r\n          channel_type_id: this.state.physical_channel_type_id, //channel_type_id\r\n          // \"channel_type_name\": \"string\",\r\n          file_name_mask: this.state.physical_file_name_mask, //file_name_mask\r\n          // \"file_path\": \"string\"\r\n          channel_address: this.state.physical_channel_address, //file_name_mask\r\n        },\r\n        {\r\n          acquiring_type_id: 1, //type_acquiring\r\n          // \"standard_report\": true,\r\n          // \"extended_report\": true,\r\n          // \"installment_report\": true,\r\n          report_format_id: this.state.internet_report_format_id, //report_format_id\r\n          // \"report_format_name\": \"string\",\r\n          report_period_type_id: this.state.internet_report_period_type_id, //report_period_type_id\r\n          // \"report_period_type_name\": \"string\",\r\n          channel_type_id: this.state.internet_channel_type_id, //channel_type_id\r\n          // \"channel_type_name\": \"string\",\r\n          file_name_mask: this.state.internet_file_name_mask, //file_name_mask\r\n          // \"file_path\": \"string\"\r\n          channel_address: this.state.internet_channel_address, //file_name_mask\r\n        },\r\n      ],\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    console.log(dody);\r\n    //this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token, dody);\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  closePopupOrder_numberError = () => {\r\n    this.setState({\r\n      isShowOrder_numberError: false,\r\n      isShowBootstrapTable: true,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  nameNetWork = (e) => {\r\n    let val = e.target.value;\r\n    console.log(val);\r\n    console.log(val != \"\");\r\n    if (val != \"\") {\r\n      this.requestGetNewBrandId(this.props.store.userState.token, val);\r\n      this.setState({ brand_name: val });\r\n    } else {\r\n      this.setState({ isDisableInput: true });\r\n    }\r\n  };\r\n  hendleNnameNetWork = (e) => {\r\n    if (e.keyCode === 13) {\r\n      //console.log('enter');\r\n      this.nameNetWork(e);\r\n    }\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"api_name\");\r\n    let inputValue = e.currentTarget.value;\r\n\r\n    if (apiName == \"contact_person\") {\r\n      this.setState({\r\n        contact_person: inputValue,\r\n      });\r\n    } else if (apiName == \"contact_phone\") {\r\n      console.log(\"contact_phone\");\r\n      this.setState({\r\n        contact_phone: inputValue,\r\n      });\r\n    } else if (apiName == \"contact_position\") {\r\n      this.setState({\r\n        contact_position: inputValue,\r\n      });\r\n    } else if (apiName == \"contact_email\") {\r\n      console.log(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(inputValue));\r\n\r\n      if (/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(inputValue)) {\r\n        console.log(\"email валідний все ок\");\r\n        this.setState({\r\n          isContact_emailError: false,\r\n          isDisabledSaveBtn: false,\r\n          contact_email: inputValue,\r\n        });\r\n      } else if (inputValue == \"\") {\r\n        this.setState({\r\n          isContact_emailError: false,\r\n          isDisabledSaveBtn: false,\r\n          contact_email: inputValue,\r\n        });\r\n      } else {\r\n        console.log(\"email не валідний!\");\r\n        this.setState({\r\n          isContact_emailError: true,\r\n          isDisabledSaveBtn: true,\r\n          contact_email: inputValue,\r\n        });\r\n      }\r\n    } else if (apiName == \"brand_status_code\") {\r\n      this.setState({\r\n        brand_status_code: inputValue,\r\n      });\r\n    } else if (apiName == \"brand_region\") {\r\n      this.setState({\r\n        brand_region: inputValue,\r\n      });\r\n    } else if (apiName === \"manager_name\") {\r\n      let brand = this.state.DICT_NETWORK_MANAGERS.filter(\r\n        (i) => i.manager_id === +inputValue\r\n      )[0];\r\n\r\n      let rr, manager_name;\r\n      rr = (arr, number) => {\r\n        arr.filter(function (currentElement, index, array) {\r\n          if (currentElement.manager_id == number) {\r\n            manager_name = currentElement.manager_name;\r\n          }\r\n        });\r\n      };\r\n      this.setState({\r\n        manager_name: manager_name,\r\n        manager_id: Number(inputValue),\r\n        institution_id: brand.institution_id,\r\n        brand_region: brand.institution_id,\r\n        brand_manager_name: brand.institution_name,\r\n      });\r\n    }\r\n  };\r\n  more = () => {\r\n    this.requestGetNewEntityId(this.props.store.userState.token);\r\n\r\n    // this.setState({\r\n    //     //moreTwoLevel: true\r\n    //     twoLevelArr: true\r\n    // });\r\n\r\n    // let newObj = {\r\n    //     entity_id: 578210,\r\n    //     ident_code: 1,\r\n    //     manager_name: null\r\n    //\r\n    // }\r\n    //\r\n    //\r\n    // let stateArr = this.state.twoLevelArr;\r\n    // console.log(stateArr);\r\n    // stateArr.push(newObj);\r\n    //\r\n    // console.log(stateArr);\r\n    // this.setState({\r\n    //     twoLevelArr: stateArr\r\n    // });\r\n  };\r\n\r\n  showTwoLevelYes = () => {\r\n    this.setState({\r\n      showTwoLevel: true,\r\n      moreTwoLevel: true,\r\n    });\r\n    this.more();\r\n  };\r\n  showTwoLevelNo = () => {\r\n    this.setState({\r\n      showTwoLevel: false,\r\n      moreTwoLevel: false,\r\n\r\n      twoLevelArr: [],\r\n    });\r\n  };\r\n\r\n  changeInputSC = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    let api_name = e.currentTarget.getAttribute(\"api_name\");\r\n    console.log(api_name);\r\n    let get_entity_id = e.currentTarget.getAttribute(\"entity_id\");\r\n    console.log(get_entity_id);\r\n\r\n    if (api_name === \"manager_name\") {\r\n    }\r\n\r\n    // let newObj = {\r\n    //     GetNewEntityId: 578210,\r\n    //     edrpou: \"1\",\r\n    //\r\n    // }\r\n\r\n    let stateArr = this.state.twoLevelArr;\r\n    let cloneArr = stateArr.map((a) => Object.assign({}, a));\r\n    console.log(cloneArr);\r\n\r\n    let indexItem = cloneArr.findIndex((el) => el.entity_id == get_entity_id);\r\n    console.log(indexItem);\r\n\r\n    if (api_name === \"manager_name\") {\r\n      const manager_name = this.state.DICT_NETWORK_MANAGERS.filter(\r\n        (item) => +item.manager_id === +e.target.value\r\n      )[0];\r\n      cloneArr[indexItem][\"brand_manager_name\"] = manager_name.institution_name;\r\n      cloneArr[indexItem][\"manager_id\"] = manager_name.manager_id;\r\n      cloneArr[indexItem][\"brand_region\"] = manager_name.institution_id;\r\n    }\r\n\r\n    cloneArr[indexItem][api_name] = param;\r\n    // stateArr.push(newObj);\r\n    console.log(cloneArr); \r\n\r\n    this.setState({\r\n      twoLevelArr: cloneArr,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state);\r\n    console.log(\"test2\");\r\n\r\n    return (\r\n      <div className=\"coverTable DICT_NET_BRAND\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"addbBlock\">\r\n          <div className=\"coverInputs justify-content-end\">\r\n            <label htmlFor=\"name_netWork\">Найменування мережі</label>\r\n            <input\r\n              //onChange={this.nameNetWork}\r\n              onBlur={this.nameNetWork}\r\n              onKeyDown={this.hendleNnameNetWork}\r\n              //value={this.state.brand_name}\r\n              api_name=\"brand_name\"\r\n              id=\"name_netWork\"\r\n              type=\"text\"\r\n              className={`form-control ${\r\n                this.state.errorBrand ? \"validError \" : \"\"\r\n              }`}\r\n            />\r\n            <label htmlFor=\"status\">Статус</label>\r\n            <select\r\n              disabled={this.state.isDisableInput ? \"disabled\" : \"\"}\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              api_name=\"brand_status_code\"\r\n              className={`form-select ${\r\n                this.state.errorStatus ? \"validError \" : \"\"\r\n              }`}\r\n              title=\"ТВБВ\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowDICT_NET_CLIENT_STATUS ? (\r\n                this.state.DICT_NET_CLIENT_STATUS.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_NET_CLIENT_STATUS\r\n                      key={index}\r\n                      optionItem={item}\r\n                      status_code={this.state.brand_status_code}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <label htmlFor=\"DICT_NETWORK_MANAGERS\">Менеджер мережі</label>\r\n            <select\r\n              disabled={this.state.isDisableInput ? \"disabled\" : \"\"}\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              api_name=\"manager_name\"\r\n              className={`form-select ${\r\n                this.state.errorManager ? \"validError \" : \"\"\r\n              }`}\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectDICT_NETWORK_MANAGERS ? (\r\n                this.state.DICT_NETWORK_MANAGERS.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_NETWORK_MANAGERS\r\n                      key={index}\r\n                      optionItem={item}\r\n                      manager_id={this.state.manager_id}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n\r\n            {this.state.showError ? (\r\n            <p class=\"error\">Заповніть, будь ласка, значення</p>\r\n          ) : null}\r\n          </div>\r\n        \r\n          <div className=\"coverInputs justify-content-end\">\r\n            <label htmlFor=\"brand_id\">ID мережі</label>\r\n            <input\r\n              disabled={this.state.isDisableTVBV ? \"disabled\" : \"\"}\r\n              value={this.state.brand_id}\r\n              api_name=\"brand_id\"\r\n              id=\"brand_id\"\r\n              type=\"text\"\r\n              className={`form-control ${\r\n                this.state.errorId ? \"validError \" : \"\"\r\n              }`}\r\n            />\r\n            <label htmlFor=\"brand_name\">РУ менеджера</label>\r\n            <input\r\n              disabled={true}\r\n              value={this.state.brand_manager_name}\r\n              api_name=\"brand_name\"\r\n              id=\"brand_name\"\r\n              type=\"text\"\r\n              className={`form-control ${\r\n                this.state.errorRu ? \"validError \" : \"\"\r\n              }`}\r\n            />\r\n          {this.state.showError ? (\r\n            <p class=\"error\" style={{opacity: 0}}>Заповніть, будь ласка, одне з 5-и значень</p>\r\n          ) : null}\r\n          </div>\r\n          \r\n          <div className=\"coverInputs contactPerson\">\r\n            <span>Контактна особа</span>\r\n            <div className=\"innerBlock\">\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"date_from\">ПІБ</label>\r\n                <input\r\n                  disabled={this.state.isDisableInput ? \"disabled\" : \"\"}\r\n                  onChange={this.changeInput}\r\n                  api_name=\"contact_person\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"date_from\"\r\n                  type=\"text\"\r\n                  value={this.state.contact_person}\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"date_to\">Посада</label>\r\n                <input\r\n                  disabled={this.state.isDisableInput ? \"disabled\" : \"\"}\r\n                  onChange={this.changeInput}\r\n                  api_name=\"contact_position\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"date_to\"\r\n                  type=\"text\"\r\n                  value={this.state.contact_position}\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"date_to\">Телефон</label>\r\n                {/*<input*/}\r\n                {/*    disabled={this.state.isDisableInput ? 'disabled' : ''}*/}\r\n                {/*    onChange={this.changeInput}*/}\r\n                {/*    api_name=\"contact_phone\"*/}\r\n                {/*    className=\"customInput form-control\"*/}\r\n                {/*    id=\"date_to\"*/}\r\n                {/*    type=\"text\"*/}\r\n                {/*/>*/}\r\n                <InputMask\r\n                  mask=\"999999999999\"\r\n                  type=\"phone\"\r\n                  maskChar=\"\"\r\n                  alwaysShowMask=\"false\"\r\n                  pattern=\"[0-9]\"\r\n                  name=\"phone\"\r\n                  id=\"phoneInput\"\r\n                  api_name=\"contact_phone\"\r\n                  disabled={this.state.isDisableInput ? \"disabled\" : \"\"}\r\n                  onChange={this.changeInput}\r\n                  className=\"customInput form-control\"\r\n                  value={this.state.contact_phone}\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"email\">Email</label>\r\n                {/*<InputMask*/}\r\n                {/*    mask=\"999999999999\"*/}\r\n                {/*    type=\"email\"*/}\r\n                {/*    maskChar=\"\"*/}\r\n                {/*    alwaysShowMask=\"false\"*/}\r\n                {/*    name=\"email\"*/}\r\n                {/*    id=\"date_to\"*/}\r\n                {/*    api_name=\"contact_email\"*/}\r\n                {/*    disabled={this.state.isDisableInput ? 'disabled' : ''}*/}\r\n                {/*    onChange={this.changeInput}*/}\r\n                {/*    className=\"customInput form-control\"*/}\r\n                {/*/>*/}\r\n                <input\r\n                  disabled={this.state.isDisableInput ? \"disabled\" : \"\"}\r\n                  onChange={this.changeInput}\r\n                  api_name=\"contact_email\"\r\n                  className={`${\r\n                    this.state.isContact_emailError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  id=\"email\"\r\n                  type=\"text\"\r\n                  value={this.state.contact_email}\r\n                />\r\n                {/*{*/}\r\n                {/*    this.state.isContact_emailError*/}\r\n                {/*        ? <p>Невалідний ftp</p>*/}\r\n                {/*        : <></>*/}\r\n                {/*}*/}\r\n              </div>\r\n            </div>\r\n          </div>\r\n       \r\n        </div>\r\n        <div className=\"addBlockRadio\">\r\n          <div className=\"title\">Додати 2-й рівень мережі</div>\r\n          <div className=\"coverRadioBtn\">\r\n            <label htmlFor=\"yes\">Так</label>\r\n            <input\r\n              name=\"is_two_level\"\r\n              onClick={this.showTwoLevelYes}\r\n              disabled={this.state.isDisableInput ? \"disabled\" : \"\"}\r\n              type=\"radio\"\r\n              id=\"yes\"\r\n            />\r\n\r\n            <label htmlFor=\"no\">Ні</label>\r\n            <input\r\n              name=\"is_two_level\"\r\n              onClick={this.showTwoLevelNo}\r\n              disabled={this.state.isDisableInput ? \"disabled\" : \"\"}\r\n              type=\"radio\"\r\n              id=\"no\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"coverTwoLevel\">\r\n          {/*<MyClickableComponent  />*/}\r\n\r\n          {this.state.showTwoLevel ? (\r\n            <>\r\n              {/*<div className=\"twoLevel\">*/}\r\n              {/*    <div className=\"innerBlock\">*/}\r\n              {/*        <label htmlFor=\"edrpou\">ЄДРПОУ</label>*/}\r\n              {/*        <input  api_name=\"brand_id\" id=\"edrpou\" type=\"text\" className=\"form-control\"/>*/}\r\n              {/*        <label htmlFor=\"brand_id\">Назва 2-го рівня</label>*/}\r\n              {/*        <input api_name=\"brand_id\" id=\"brand_id\" type=\"text\" className=\"form-control\"/>*/}\r\n              {/*        <label htmlFor=\"brand_id\">Менеджер</label>*/}\r\n              {/*        <select disabled={this.state.isDisableInput ? 'disabled' : ''}  id=\"dropdown-basic-button\" onChange={this.changeInput} api_name=\"manager_name\" className=\"form-select\" title=\"ТВБВ\">*/}\r\n              {/*            <option>-</option>*/}\r\n              {/*            {*/}\r\n              {/*                this.state.isShowSelectDICT_NETWORK_MANAGERS*/}\r\n              {/*                    ? this.state.DICT_NETWORK_MANAGERS.map((item, index) => {*/}\r\n              {/*                        return < OptionItemDICT_NETWORK_MANAGERS key={index} optionItem={item}/>*/}\r\n              {/*                    })*/}\r\n              {/*                    : <></>*/}\r\n              {/*            }*/}\r\n              {/*        </select>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"innerBlock\">*/}\r\n              {/*        <label htmlFor=\"brand_id\">ID 2-го рівня</label>*/}\r\n              {/*        <input api_name=\"brand_id\" id=\"brand_id\" type=\"text\" className=\"form-control\"/>*/}\r\n              {/*        <label htmlFor=\"brand_id\">ID РУ</label>*/}\r\n              {/*        <input api_name=\"brand_id\" id=\"brand_id\" type=\"text\" className=\"form-control\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*</div>*/}\r\n              {/*{*/}\r\n              {/*    this.state.moreTwoLevel*/}\r\n              {/*        ? this.retMoreHtml(this.state.levelBlockNumber)*/}\r\n              {/*        : <></>*/}\r\n              {/*}*/}\r\n              {\r\n                // здесь будет отрисовано необходимое кол-во компонентов\r\n                this.state.twoLevelArr.map((item, index) => (\r\n                  <SampleComponent\r\n                    key={index}\r\n                    data={item}\r\n                    brand_region={this.state.brand_region}\r\n                    DICT_NETWORK_MANAGERS={this.state.DICT_NETWORK_MANAGERS}\r\n                    changeInputSC={this.changeInputSC}\r\n                  />\r\n                ))\r\n              }\r\n              <button className=\"btn btn-secondary\" onClick={this.more}>\r\n                Додати ще\r\n              </button>\r\n            </>\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        <div className=\"coverBtn\">\r\n          <button\r\n            className=\"btn btn-success\"\r\n            disabled={this.state.isDisabledSaveBtn ? \"disabled\" : \"\"}\r\n            onClick={this.save}\r\n          >\r\n            Зберегти мережу\r\n          </button>\r\n        </div>\r\n        {/*<div className=\"coverResult\">*/}\r\n        {/*    <div className=\"resultSearch border\">*/}\r\n        {/*        {*/}\r\n        {/*            this.state.isShowTsp*/}\r\n        {/*                ? <>*/}\r\n        {/*                    <div className=\"title\">Результат пошуку</div>*/}\r\n        {/*                    <ul className=\"blockTsp_list\">*/}\r\n        {/*                        {*/}\r\n        {/*                            this.Tsp_list(this.state.tsp_list)*/}\r\n        {/*                        }*/}\r\n        {/*                    </ul>*/}\r\n        {/*                </>*/}\r\n        {/*                :<>Не вибрано даних пошуку</>*/}\r\n        {/*        }*/}\r\n        {/*    </div>*/}\r\n        {/*    <div className=\"typeAcquiring\">*/}\r\n        {/*        {*/}\r\n        {/*            this.state.isShowTypeAcquiring*/}\r\n        {/*                ? <>*/}\r\n\r\n        {/*                    /!*<div className=\"coverBtn border\">*!/*/}\r\n        {/*                    /!*    <div className=\"title\">Вид екварингу</div>*!/*/}\r\n        {/*                    /!*    <button*!/*/}\r\n        {/*                    /!*        className=\"btn btn-secondary\"*!/*/}\r\n        {/*                    /!*        disabled={this.state.type_acquiring == 1 ? 'disabled' : ''}*!/*/}\r\n        {/*                    /!*        onClick={this.changeTypeAcquiringPhysical}*!/*/}\r\n        {/*                    /!*        type_acquiring={1}>Фізичний</button>*!/*/}\r\n        {/*                    /!*    <button*!/*/}\r\n        {/*                    /!*        className=\"btn btn-secondary\"*!/*/}\r\n        {/*                    /!*        disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*!/*/}\r\n        {/*                    /!*        onClick={this.changeTypeAcquiringInternet}*!/*/}\r\n        {/*                    /!*        type_acquiring={2}>Інтернет</button>*!/*/}\r\n        {/*                    /!*</div>*!/*/}\r\n\r\n        {/*                    /!*{this.showReport(this.state.currentTsp)}*!/*/}\r\n        {/*                    {this.showHtmlReport()}*/}\r\n        {/*                </>*/}\r\n\r\n        {/*                : <></>*/}\r\n        {/*        }*/}\r\n        {/*    </div>*/}\r\n        {/*</div>*/}\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">Спробуйте ввести інші дані для пошуку</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowOrder_numberError ? (\r\n          <>\r\n            <div className=\"coverOrder_numberError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Такий порядковий номер вже вибрано\r\n                </div>\r\n                <div className=\"msg\">Введіть інший порядковий номер поля</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupOrder_numberError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NETWORK_CREATE;\r\n","import React from \"react\";\r\nimport Button from \"@restart/ui/esm/Button\";\r\nimport axios from \"axios\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\r\nimport AsyncSelect from \"react-select/async\";\r\n\r\nconst BlockSelectItemBrandName = (props) => {\r\n  return (\r\n    <option\r\n      className=\"blockSelectItem\"\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      value={props.item.brand_id}\r\n      name={props.item.brand_name}\r\n    >\r\n      {props.item.brand_name}\r\n    </option>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputBrandName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      data: null,\r\n      brand_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param.length > 2) {\r\n      this.search(param);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    if (val !== \"\") {\r\n      this.props.addBrandName(\r\n        this.state.data.filter((item) => item.brand_id === +val)[0]\r\n      );\r\n      if (val !== this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async request(token, param) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND?name=brand_name`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows === null) {\r\n          this.setState({\r\n            brand_arr: [],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n            brand_arr: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowBlockSelect: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.data !== null\r\n        ? this.state.data.filter((item) => {\r\n            const itemString = item.brand_name.toString();\r\n            return itemString\r\n              .toLowerCase()\r\n              .includes(param.toString().toLowerCase());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        brand_arr: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        brand_arr: data,\r\n      });\r\n    }\r\n  }\r\n\r\n   componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if(prevProps.update !== this.props.update) {\r\n      this.setState({inputRequest: \"\"});\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть назву мережі...\"\r\n          type=\"text\"\r\n          id=\"brand_name_val\"\r\n          onBlur={this.props.onBlur}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.brand_arr != null ? (\r\n              this.state.brand_arr.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemBrandName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function NETWORK_EDIT({ store }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [brand, setBrand] = useState(null);\r\n  const [contact, setContact] = useState();\r\n  const [updateVal, setUpdateVal] = useState(false)\r\n  const [firstLevel, setFirstLevel] = useState(false);\r\n  const [secondLevel, setSecondLevel] = useState(false);\r\n  const [thirdLevel, setThirdLevel] = useState(false);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [clientArr, setClientArr] = useState([]);\r\n\r\n  const [isShowFirstLvl, setIsShowFirstLvl] = useState(false);\r\n  const [isShowSecondLvl, setIsShowSecondLvl] = useState(false);\r\n  const [isShowThirdLvl, setIsShowThirdLvl] = useState(false);\r\n\r\n  const [brandName, setBrandName] = useState(null);\r\n\r\n  const [formFirstLevel, setFormFirstLevel] = useState({});\r\n\r\n  const [isLoadingStatus, setIsLoadingStatus] = useState(false);\r\n  const [optionsStatus, setOptionsStatus] = useState([]);\r\n  const [brandStatus, setBrandStatus] = useState(null);\r\n\r\n  const [isLoadingNameManager, setIsLoadingNameManager] = useState(false);\r\n  const [optionsNameManager, setOptionsNameManager] = useState([]);\r\n  const [nameManager, setNameManager] = useState(null);\r\n\r\n  const [isLoadingRUManager, setIsLoadingRUManager] = useState(false);\r\n  const [optionsRUManager, setOptionsRUManager] = useState([]);\r\n  const [ruManager, setRUManager] = useState(null);\r\n\r\n  const [isLoadingSecondLvl, setIsLoadingSecondLvl] = useState(false);\r\n  const [optionsSecondLvl, setOptionsSecondLvl] = useState(null);\r\n  const [optionsThirdLvl, setOptionsThirdLvl] = useState(null);\r\n  const [secondLvl, setSecondLvl] = useState(null);\r\n\r\n  const [isLoadingSecondLvlRU, setIsLoadingSecondLvlRU] = useState(false);\r\n  const [optionsSecondLvlRU, setOptionsSecondLvlRU] = useState([]);\r\n  const [secondLvlRU, setSecondLvlRU] = useState(null);\r\n  const [test, setTest] = useState(null);\r\n\r\n  const [isLoadingManager, setIsLoadingManager] = useState(false);\r\n  const [optionsManager, setOptionsManager] = useState([]);\r\n  const [manager, setManager] = useState(null);\r\n\r\n  const [isLoadingTSP, setIsLoadingTSP] = useState(false);\r\n  const [optionsTSP, setOptionsTSP] = useState([]);\r\n  const [tsp, setTSP] = useState(null);\r\n\r\n  const handleSearchBrandName = async (query = \"\") => {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_NET_BRAND?name=brand_name&param1=${query}`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options =\r\n          res.data.record_count > 0 ? res.data.Table.TableRows : [];\r\n        setOptions(options);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const handleSearchBrandNameSecondLvl = async (param) => {\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_NET_ENTITY?param1=${param}`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        let index = 0;\r\n        if (res.data.ErrorStatus.ErrorCode !== 0) return;\r\n        const hasData = res.data.Table.TableRows !== null;\r\n        if (hasData) {\r\n          setOptionsSecondLvl(\r\n            res.data.Table.TableRows.map((i) => {\r\n              return { ...i, index: index++ };\r\n            })\r\n          );\r\n          setIsShowSecondLvl(true);\r\n        } else {\r\n          setIsShowSecondLvl(false);\r\n        }\r\n        setIsLoadingSecondLvl(true);\r\n      });\r\n  };\r\n\r\n  const handleSearchBrandNameSecondLvlRU = async () => {\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_INSTITUTION?name=institution_name`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options = res.data.Table.TableRows\r\n          ? res.data.Table.TableRows.map((i) => ({\r\n              id: i.institution_id,\r\n              value: i.institution_name,\r\n            }))\r\n          : null;\r\n        setOptionsSecondLvlRU(options);\r\n        setIsLoadingSecondLvlRU(true);\r\n      });\r\n  };\r\n\r\n  const handleSearchManager = async () => {\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_NETWORK_MANAGERS?name=manager_name`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options = res.data.Table.TableRows.map((i) => ({\r\n          id: i.manager_id,\r\n          value: i.manager_name,\r\n          institution_id: i.institution_id,\r\n          institution_name: i.institution_name,\r\n        }));\r\n        setOptionsManager(options);\r\n        setIsLoadingManager(true);\r\n      });\r\n  };\r\n\r\n  const handleSearchBrandStatus = async (param) => {\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_NET_CLIENT?param1=${param}`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.ErrorStatus.ErrorCode !== 0) return;\r\n        const hasData = res.data.Table.TableRows !== null;\r\n\r\n        if (hasData) {\r\n          setOptionsThirdLvl(res.data.Table.TableRows);\r\n          setIsShowThirdLvl(true);\r\n        } else {\r\n          setIsShowThirdLvl(false);\r\n        }\r\n        // setOptionsStatus(res.data.Table.TableRows);\r\n        setIsLoadingStatus(true);\r\n      });\r\n  };\r\n\r\n  const handleSearchNameManager = async () => {\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_NETWORK_MANAGERS?name=manager_name`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options = res.data.Table.TableRows.map((i) => ({\r\n          id: i.manager_id,\r\n          value: i.manager_name,\r\n        }));\r\n        setOptionsNameManager(options);\r\n        setIsLoadingNameManager(true);\r\n      });\r\n  };\r\n\r\n  const handleSearchRUManager = async () => {\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_INSTITUTION?name=institution_name`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options = res.data.Table.TableRows.map((i) => ({\r\n          id: i.institution_id,\r\n          value: i.institution_name,\r\n        }));\r\n        setOptionsRUManager(options);\r\n        setIsLoadingRUManager(true);\r\n      });\r\n  };\r\n\r\n  const handleSearchTSP = async () => {\r\n    const data = {\r\n      institution_id: +secondLvlRU.level2_manager_institution_id,\r\n      branch_id: +brand.id,\r\n      ident_code: contact.ident_code,\r\n      network_brand_id: brand.id,\r\n    };\r\n\r\n    await axios\r\n      .post(`/api/Dictionary/QueryTSP`, data, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options =\r\n          res.data.record_count > 0\r\n            ? res.data.tsp_list.TableRows.map((i) => ({\r\n                id: i.ident_code,\r\n                value: i.client_name,\r\n              }))\r\n            : [];\r\n        setOptionsTSP(options);\r\n        setIsLoadingTSP(true);\r\n      });\r\n  };\r\n\r\n  const handleContactInput = (e) => {\r\n    setContact((prevState) => ({\r\n      ...prevState,\r\n      [e.target.getAttribute(\"name\")]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleSearchNameManager();\r\n    handleSearchManager();\r\n    handleSearchBrandName();\r\n  }, []);\r\n\r\n  const confirm = async () => {\r\n    store.changeLoading(true);\r\n    if (firstLevel) {\r\n      await axios.post(\r\n        `/api/Dictionary/DICT_NET_BRAND`,\r\n        { ...formFirstLevel },\r\n        {\r\n          headers: {\r\n            token: store.userState.token,\r\n          },\r\n        }\r\n      );\r\n    }\r\n    if (secondLevel) {\r\n      await axios.post(\r\n        `/api/Dictionary/DICT_NET_ENTITY`,\r\n        { ...optionsSecondLvl },\r\n        {\r\n          headers: {\r\n            token: store.userState.token,\r\n          },\r\n        }\r\n      );\r\n    }\r\n\r\n    if (clientArr.lenght !== 0) {\r\n      for (let i = 0; i < clientArr.length; i++) {\r\n        const el = clientArr[i];\r\n        await axios.delete(`/api/Dictionary/DICT_NET_CLIENT/${el}`, {\r\n          headers: {\r\n            token: store.userState.token,\r\n          },\r\n        });\r\n      }\r\n    }\r\n    setFirstLevel(false);\r\n    setSecondLevel(false);\r\n    setThirdLevel(false);\r\n    setUpdateVal(!updateVal)\r\n    store.changeLoading(false);\r\n  };\r\n\r\n  const handleFirstLevel = () => {\r\n    setFirstLevel(!firstLevel);\r\n  };\r\n  const handleSecondLevel = () => {\r\n    setSecondLevel(!secondLevel);\r\n  };\r\n  const handleThirdLevel = () => {\r\n    setThirdLevel(!thirdLevel);\r\n  };\r\n\r\n  function handleForm(e, type) {\r\n    const handleLevel = (param) => {\r\n      return { ...param, [e.target.dataset.id]: e.target.value };\r\n    };\r\n    switch (type) {\r\n      case \"firstLevel\":\r\n        setFormFirstLevel(handleLevel);\r\n        break;\r\n      case \"secondLevel\":\r\n        const selectedArr = optionsSecondLvl[+e.target.dataset.index];\r\n        const otherArr = optionsSecondLvl.filter(\r\n          (i) => i.index !== selectedArr.index\r\n        );\r\n        console.log(e);\r\n        const arr = [handleLevel(selectedArr), ...otherArr];\r\n        console.log(handleLevel(selectedArr));\r\n\r\n        setOptionsSecondLvl(arr.sort((a, b) => (a.index < b.index ? -1 : 1)));\r\n        break;\r\n      default:\r\n        throw new Error(\"this type no exist!\");\r\n    }\r\n  }\r\n\r\n  const handlePIB = (e, type = \"firstLevel\") => {\r\n    e.stopPropagation();\r\n    const eventManagerID = {\r\n      target: {\r\n        value: e.target.value,\r\n        dataset: { id: \"manager_id\", index: e.target.dataset.index },\r\n      },\r\n    };\r\n    const manager = optionsManager.filter((i) => +i.id === +e.target.value)[0];\r\n    const eventManagerName = {\r\n      target: {\r\n        value: manager.value,\r\n        dataset: { id: \"manager_name\", index: e.target.dataset.index },\r\n      },\r\n    };\r\n    // const eventBrandID = {\r\n    //   target: {\r\n    //     value: manager.institution_id,\r\n    //     dataset: { id: \"brand_id\", index: e.target.dataset.index },\r\n    //   },\r\n    // };\r\n    const eventBrandRegion = {\r\n      target: {\r\n        value: manager.institution_name,\r\n        dataset: { id: \"brand_region\", index: e.target.dataset.index },\r\n      },\r\n    };\r\n    handleForm(eventManagerID, type);\r\n    handleForm(eventManagerName, type);\r\n    // handleForm(eventBrandID, type);\r\n    handleForm(eventBrandRegion, type);\r\n  };\r\n\r\n  const handleInputChange = (newValue) => {\r\n    return newValue;\r\n  };\r\n  const handleAddBrandName = (option) => {\r\n    setBrand(option);\r\n    setFormFirstLevel(option);\r\n    setBrandName(option.brand_name);\r\n    setIsShowFirstLvl(true);\r\n    handleSearchBrandNameSecondLvl(option.brand_id);\r\n    handleSearchBrandStatus(option.brand_id);\r\n  };\r\n\r\n  const handleRemove = (id) => {\r\n    setOptionsThirdLvl(optionsThirdLvl.filter((i) => i.client_id !== id));\r\n    setClientArr([...clientArr, id]);\r\n  };\r\n  return (\r\n    <div className=\"coverTable NETWORK_EDIT\">\r\n      {/* <div className=\"headerTable\">\r\n        <h3 className=\"titleTable\">Звіт по мережевим клієнтам</h3>\r\n      </div> */}\r\n      <div className=\"addbBlock \">\r\n        <div className=\"container\">\r\n          <div className=\"row col-12\">\r\n            <div className=\"row col-12\">\r\n              <div>Редагування інформації по мережі:</div>\r\n              {/* <AsyncTypeahead\r\n                className=\"col-6\"\r\n                filterBy={() => true}\r\n                id=\"async-brand-edit\"\r\n                isLoading={isLoading}\r\n                labelKey={(option) => {\r\n                  setBrand(option);\r\n                  setFormFirstLevel(option);\r\n                  setBrandName(option.brand_name);\r\n                  return option.brand_name;\r\n                }}\r\n                minLength={3}\r\n                onSearch={handleSearchBrandName}\r\n                options={options}\r\n                searchText=\"Пошук...\"\r\n                placeholder=\"Назва мережі...\"\r\n                onBlur={handleSearchSubmit}\r\n                value={query}\r\n                // onChange={setQuery}\r\n                renderMenuItemChildren={(option, props) => (\r\n                  <option value={option.brand_id}>{option.brand_name}</option>\r\n                )}\r\n              /> */}\r\n              <AutocompleteInputBrandName\r\n                token={store.userState.token}\r\n                addBrandName={handleAddBrandName}\r\n                update={updateVal}\r\n              />\r\n              {/* <AsyncSelect\r\n                cacheOptions\r\n                loadOptions={loadOptions}\r\n                defaultOptions\r\n                onInputChange={handleInputChange}\r\n              /> */}\r\n            </div>\r\n            <div>\r\n              {/* <label>Назва статуса мережі</label> */}\r\n              {/* <Form.Select\r\n              onChange={(e) => {\r\n                setBrandStatus({\r\n                  brand_status_name:\r\n                    e.target.options[e.target.selectedIndex].text,\r\n                  brand_status_code: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingStatus\r\n                ? optionsStatus.map((option) => (\r\n                    <option value={option.id}>{option.value}</option>\r\n                  ))\r\n                : null}\r\n            </Form.Select> */}\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`brand_name_checkbox`}\r\n                label={`I Рівень`}\r\n                checked={firstLevel}\r\n                onChange={handleFirstLevel}\r\n                className={!isShowFirstLvl ? \"d-none\" : null}\r\n              />\r\n            </div>\r\n            <div>\r\n              {/* <label>ПІБ менеджера мережі</label> */}\r\n              {/* <Form.Select\r\n              onChange={(e) => {\r\n                setNameManager({\r\n                  brand_manager_id: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingNameManager\r\n                ? optionsNameManager.map((option) => (\r\n                    <option value={option.id}>{option.value}</option>\r\n                  ))\r\n                : null}\r\n            </Form.Select> */}\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`brand_contact_name`}\r\n                label={`II Рівень`}\r\n                checked={secondLevel}\r\n                onChange={handleSecondLevel}\r\n                className={!isShowSecondLvl ? \"d-none\" : null}\r\n              />\r\n            </div>\r\n            <div>\r\n              {/* <label>РУ менеджера мережі</label>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                setRUManager({\r\n                  brand_manager_institution_id: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingRUManager\r\n                ? optionsRUManager.map((option) => (\r\n                    <option value={option.id}>{option.value}</option>\r\n                  ))\r\n                : null}\r\n            </Form.Select> */}\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`brand_manager_id`}\r\n                label={`III Рівень`}\r\n                checked={thirdLevel}\r\n                onChange={handleThirdLevel}\r\n                className={!isShowThirdLvl ? \"d-none\" : null}\r\n              />\r\n            </div>\r\n\r\n            {/* <h5 className=\"mt-4\">Контактна особа мережі</h5>\r\n\r\n          <div className=\"form\" onChange={handleContactInput}>\r\n            <label>ПІБ</label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"brand_contact_name\"\r\n              id=\"brand_contact_name\"\r\n            />\r\n            <label>Посада</label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              name=\"brand_contact_position\"\r\n              id=\"brand_contact_position\"\r\n            />\r\n            <label>Телефон</label>\r\n            <Form.Control\r\n              type=\"phone\"\r\n              name=\"brand_contact_phone\"\r\n              id=\"brand_contact_phone\"\r\n            />\r\n            <label>Email</label>\r\n            <Form.Control\r\n              type=\"email\"\r\n              name=\"brand_contact_email\"\r\n              id=\"brand_contact_email\"\r\n            />\r\n          </div>\r\n          <div>\r\n            <Form.Check\r\n              style={{ marginTop: \"10px\" }}\r\n              type={\"checkbox\"}\r\n              id={`brand_contact_name`}\r\n              label={`ПІБ`}\r\n              checked={true}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Form.Check\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              id={`brand_contact_position`}\r\n              label={`Посада`}\r\n              checked={true}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Form.Check\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              id={`brand_contact_phone`}\r\n              label={`Телефон`}\r\n              checked={true}\r\n            />\r\n          </div>\r\n          <div>\r\n            <Form.Check\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              id={`brand_contact_email`}\r\n              label={`Email`}\r\n              checked={true}\r\n            />\r\n          </div> */}\r\n          </div>\r\n          {firstLevel ? (\r\n            <div\r\n              className=\"row col-12 mt-5\"\r\n              onChange={(e) => handleForm(e, \"firstLevel\")}\r\n            >\r\n              <h2>I Рівень </h2>\r\n              <div className=\"container row  d-flex  justify-content-between\">\r\n                <div className=\"col-5 mt-2\">\r\n                  <label>Назва мережі</label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    data-id=\"brand_name\"\r\n                    value={formFirstLevel.brand_name}\r\n                  />\r\n                </div>\r\n                <div className=\"col-5 mt-2\">\r\n                  <label>Контактна особа</label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    data-id=\"contact_person\"\r\n                    value={formFirstLevel.contact_person}\r\n                  />\r\n                </div>\r\n                <div className=\"col-5 mt-2\">\r\n                  <label>Назва статусу</label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    data-id=\"brand_status_name\"\r\n                    value={formFirstLevel.brand_status_name}\r\n                  />\r\n                </div>\r\n                <div className=\"col-5 mt-2\">\r\n                  <label> Посада конт. особи </label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    data-id=\"contact_position\"\r\n                    value={formFirstLevel.contact_position}\r\n                  />\r\n                </div>\r\n                <div className=\"col-5 mt-2\">\r\n                  <label>ПІБ менеджера мережі</label>\r\n                  <Form.Select onChange={handlePIB} data-id=\"manager_id\">\r\n                    <option>{brand.manager_name}</option>\r\n                    {isLoadingNameManager\r\n                      ? optionsNameManager.map((option) => (\r\n                          <option value={option.id}>{option.value}</option>\r\n                        ))\r\n                      : null}\r\n                  </Form.Select>\r\n                </div>\r\n                <div className=\"col-5 mt-2\">\r\n                  <label> Телефон конт. особи </label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    data-id=\"contact_phone\"\r\n                    value={formFirstLevel.contact_phone}\r\n                  />\r\n                </div>\r\n                <div className=\"col-5 mt-2\">\r\n                  <label>РУ менеджера</label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    data-id=\"brand_region\"\r\n                    disabled={true}\r\n                    value={formFirstLevel.brand_region}\r\n                  />\r\n                </div>\r\n                <div className=\"col-5 mt-2\">\r\n                  <label>Email конт. особи </label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    data-id=\"contact_email\"\r\n                    value={formFirstLevel.contact_email}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n          {secondLevel ? (\r\n            <div\r\n              className=\"row col-12 mt-5\"\r\n              onChange={(e) => handleForm(e, \"secondLevel\")}\r\n            >\r\n              <h2>II Рівень </h2>\r\n\r\n              {optionsSecondLvl\r\n                ? optionsSecondLvl.map((item) => {\r\n                    return (\r\n                      <div style={{ margin: \"20px 0\" }}>\r\n                        <div className=\"col-5 mt-2\">\r\n                          <label>Назва мережі</label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            data-id=\"brand_name\"\r\n                            data-index={item.index}\r\n                            value={item.brand_name}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-5 mt-2\">\r\n                          <label>ID мережі</label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            data-id=\"brand_id\"\r\n                            data-index={item.index}\r\n                            value={item.brand_id}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-5 mt-2\">\r\n                          <label>ПІБ менеджера мережі</label>\r\n                          <Form.Select\r\n                            onChange={(e) => handlePIB(e, \"secondLevel\")}\r\n                            data-id=\"manager_id\"\r\n                            data-index={item.index}\r\n                          >\r\n                            <option>{item.manager_name}</option>\r\n                            {isLoadingNameManager\r\n                              ? optionsNameManager.map((option) => (\r\n                                  <option value={option.id}>\r\n                                    {option.value}\r\n                                  </option>\r\n                                ))\r\n                              : null}\r\n                          </Form.Select>\r\n                        </div>\r\n                        <div className=\"col-5 mt-2\">\r\n                          <label>РУ менеджера</label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            data-id=\"brand_region\"\r\n                            disabled={true}\r\n                            data-index={item.index}\r\n                            value={item.brand_region}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-5 mt-2\">\r\n                          <label>ІНН/ЄДРПОУ</label>\r\n                          <Form.Control\r\n                            type=\"text\"\r\n                            data-id=\"ident_code\"\r\n                            data-index={item.index}\r\n                            value={item.ident_code}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })\r\n                : null}\r\n            </div>\r\n          ) : null}\r\n          {thirdLevel ? (\r\n            <div className=\"row col-12 mt-5\">\r\n              <h2>III Рівень </h2>\r\n\r\n              <div class=\"container\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-12\">\r\n                    <table class=\"table table-bordered\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th scope=\"col\">Клієнт</th>\r\n                          <th scope=\"col\">ЄДРПОУ</th>\r\n                          <th scope=\"col\">Менеджер</th>\r\n                          <th scope=\"col\"></th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {optionsThirdLvl\r\n                          ? optionsThirdLvl.map((i) => {\r\n                              return (\r\n                                <tr>\r\n                                  <td>{i.entity_name}</td>\r\n                                  <td>{i.ident_code}</td>\r\n                                  <td>{i.manager_name}</td>\r\n                                  <td>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-danger\"\r\n                                      onClick={() => handleRemove(i.client_id)}\r\n                                    >\r\n                                      Видалити\r\n                                    </button>\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })\r\n                          : null}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n        {/* <div className=\"col-4\">\r\n          <div>\r\n            <h5>2 рівень</h5>\r\n          </div>\r\n          <div className=\"form\" onChange={handleContactInput}>\r\n            <label>ЄДРПОУ 2 рівень</label>\r\n            <Form.Control\r\n              type=\"number\"\r\n              name=\"level2_ident_code\"\r\n              id=\"level2_ident_code\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <Form.Check\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              id={`level2_ident_code`}\r\n              label={`ЄДРПОУ 2 рівень`}\r\n              checked={true}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label>Назва 2 рівня: </label>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                console.log();\r\n                setSecondLvl({\r\n                  level2_id: e.target.value,\r\n                  level2_name: e.target.options[e.target.selectedIndex].text,\r\n                  level2_manager_id:\r\n                    e.target.options[e.target.selectedIndex].getAttribute(\r\n                      \"manager\"\r\n                    ),\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingSecondLvl\r\n                ? optionsSecondLvl.map((option) => (\r\n                    <option value={option.id} manager={option.manager_name}>\r\n                      {option.value}\r\n                    </option>\r\n                  ))\r\n                : null}\r\n            </Form.Select>\r\n            <label>ID 2 рівня: </label>\r\n            <Form.Select>\r\n              <option>{secondLvl ? secondLvl.level2_id : null}</option>\r\n            </Form.Select>\r\n            <label>Менеджер 2 рівня: </label>\r\n            <Form.Select>\r\n              <option>{secondLvl ? secondLvl.level2_manager_id : null}</option>\r\n            </Form.Select>\r\n            <label>РУ менеджера 2 рівня: </label>\r\n            <Form.Select\r\n              onChange={(e) => {\r\n                console.log();\r\n                setSecondLvlRU({\r\n                  level2_manager_institution_id: e.target.value,\r\n                });\r\n              }}\r\n            >\r\n              <option></option>\r\n              {isLoadingSecondLvlRU\r\n                ? optionsSecondLvlRU.map((option) => (\r\n                    <option value={option.id}>{option.value}</option>\r\n                  ))\r\n                : null}\r\n            </Form.Select>\r\n\r\n            <div>\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`level2_name`}\r\n                label={`Назва 2 рівня:`}\r\n                checked={true}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`level2_id`}\r\n                label={`ID 2 рівня:`}\r\n                checked={true}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`level2_manager_id`}\r\n                label={`Менеджер 2 рівня:`}\r\n                checked={true}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`level2_manager_institution_id`}\r\n                label={`РУ менеджера 2 рівня:`}\r\n                checked={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n\r\n        {/* <div className=\"col-4\">\r\n          <div className=\"row\">\r\n            <h5>ТСП</h5>\r\n          </div>\r\n\r\n          <div\r\n            style={{ height: \"120px\" }}\r\n            className=\"form\"\r\n            onChange={handleContactInput}\r\n            onBlur={handleSearchTSP}\r\n          >\r\n            <label>ІНН/ЄДРПОУ</label>\r\n            <Form.Control type=\"number\" name=\"ident_code\" id=\"ident_code\" />\r\n          </div>\r\n\r\n          <div>\r\n            <Form.Check\r\n              style={{ marginTop: \"20px\" }}\r\n              type={\"checkbox\"}\r\n              id={`inn`}\r\n              label={`ІНН/ЄДРПОУ`}\r\n              checked={true}\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <div>\r\n              <label>Назва ТСП: </label>\r\n              <Form.Select\r\n                onChange={(e) => {\r\n                  setTSP({\r\n                    client_id: e.target.value,\r\n                  });\r\n                }}\r\n              >\r\n                <option></option>\r\n                {isLoadingTSP\r\n                  ? optionsTSP.map((option) => (\r\n                      <option value={option.id}>{option.value}</option>\r\n                    ))\r\n                  : null}\r\n              </Form.Select>\r\n            </div>\r\n\r\n            <div>\r\n              <label>Менеджер ТСП: </label>\r\n              <Form.Select\r\n                onChange={(e) => {\r\n                  setManager({\r\n                    client_manager_id: e.target.value,\r\n                    client_manager_institution_id:\r\n                      e.target.options[e.target.selectedIndex].getAttribute(\r\n                        \"institution-id\"\r\n                      ),\r\n                    client_manager_institution_name:\r\n                      e.target.options[e.target.selectedIndex].getAttribute(\r\n                        \"institution-name\"\r\n                      ),\r\n                  });\r\n                }}\r\n              >\r\n                <option></option>\r\n                {isLoadingManager\r\n                  ? optionsManager.map((option) => (\r\n                      <option\r\n                        value={option.id}\r\n                        institution-id={option.institution_id}\r\n                        institution-name={option.institution_name}\r\n                      >\r\n                        {option.value}\r\n                      </option>\r\n                    ))\r\n                  : null}\r\n              </Form.Select>\r\n            </div>\r\n            <div>\r\n              <label>РУ менеджера ТСП: </label>\r\n              <Form.Select>\r\n                <option>\r\n                  {manager ? manager.client_manager_institution_name : null}\r\n                </option>\r\n              </Form.Select>\r\n            </div>\r\n\r\n            <div>\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`name_tsp`}\r\n                label={`Назва ТСП:`}\r\n                checked={true}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`manager_tsp`}\r\n                label={`Менеджер ТСП:`}\r\n                checked={true}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Form.Check\r\n                style={{ marginTop: \"20px\" }}\r\n                type={\"checkbox\"}\r\n                id={`ru_tsp`}\r\n                label={`РУ менеджера ТСП:`}\r\n                checked={true}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n\r\n      <div class=\"btnBlock\" style={{ background: \"white\", padding: \"10px\" }}>\r\n        <button class=\"btn btn-success\" onClick={confirm}>\r\n          Зберегти\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Button from \"@restart/ui/esm/Button\";\r\nimport axios from \"axios\";\r\nimport { Fragment, useEffect, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\";\r\n\r\nexport default function NETWORK_AUDIT({ store }) {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n  const [brand, setBrand] = useState(null);\r\n  const [contact, setContact] = useState();\r\n  const [dateFrom, setDateFrom] = useState(new Date());\r\n  const [dateTo, setDateTo] = useState(new Date());\r\n  const [formFirstLevel, setFormFirstLevel] = useState(null);\r\n\r\n  const handleSearchBrandName = async (query) => {\r\n    setIsLoading(true);\r\n    await axios\r\n      .get(`/api/Dictionary/DICT_NET_BRAND?name=brand_name&param1=${query}`, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        const options =\r\n          res.data.record_count > 0 ? res.data.Table.TableRows : [];\r\n        setOptions(options);\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  const confirm = async () => {\r\n    store.changeLoading(true);\r\n    let date_from = dateFrom.split(\"-\");\r\n    let date_to = dateTo.split(\"-\");\r\n    const body = {\r\n      brand_id: brand.brand_id,\r\n      date_from: `${date_from[0]}${date_from[1]}${date_from[2]}`,\r\n      date_to: `${date_to[0]}${date_to[1]}${date_to[2]}`,\r\n    };\r\n    await axios\r\n      .post(`/api/Dictionary/GetNetworkAuditReport`, body, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        store.changeLoading(false);\r\n\r\n        let fileTitle = decodeURI(\r\n          response.headers[\"content-disposition\"].split(\"filename*=UTF-8''\")[1]\r\n        );\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\r\n          \"download\",\r\n          `${fileTitle.slice(0, fileTitle.length - 5)}.${fileTitle.slice(-4)}`\r\n        );\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      });\r\n  };\r\n\r\n  const handleDateFrom = (e) => {\r\n    setDateFrom(e.target.value);\r\n  };\r\n  const handleDateTo = (e) => {\r\n    setDateTo(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"coverTable DICT_NET_BRAND\">\r\n      <div className=\"addbBlock \">\r\n        <div className=\"container\">\r\n          <div className=\"row col-12\">\r\n            <div className=\"row col-12\">\r\n              <div className=\"mb-1\">Зміни інформації по мережі:</div>\r\n              <AsyncTypeahead\r\n                className=\"col-6\"\r\n                filterBy={() => true}\r\n                id=\"async-brand-audit\"\r\n                isLoading={isLoading}\r\n                labelKey={(option) => {\r\n                  setBrand(option);\r\n                  setFormFirstLevel(option);\r\n                  return option.brand_name;\r\n                }}\r\n                minLength={3}\r\n                onSearch={handleSearchBrandName}\r\n                options={options}\r\n                searchText=\"Пошук...\"\r\n                placeholder=\"Назва мережі...\"\r\n                promptText=\"\"\r\n                renderMenuItemChildren={(option, props) => (\r\n                  <option value={option.brand_id}>{option.brand_name}</option>\r\n                )}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"coverInput mt-3\">\r\n                <span className=\"mb-1\">Період звіту</span>\r\n                <div className=\"row container\">\r\n                  <div className=\"d-flex align-items-center col-3\">\r\n                    <label htmlFor=\"date_report_from\">З</label>\r\n                    <Form.Control\r\n                      onChange={handleDateFrom}\r\n                      type=\"date\"\r\n                      style={{ marginLeft: \"10px\", minWidth: \"150px\" }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"d-flex align-items-center  col-3\">\r\n                    <label htmlFor=\"date_report_to\">По</label>\r\n                    <Form.Control\r\n                      onChange={handleDateTo}\r\n                      type=\"date\"\r\n                      style={{ marginLeft: \"10px\", minWidth: \"150px\" }}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"btnBlock\" style={{ background: \"white\", padding: \"10px\" }}>\r\n        <button class=\"btn btn-success\" onClick={confirm}>\r\n          Завантажити\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport { activeOperation } from \"./helpers\";\r\n\r\nclass TableADMIN_USERS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      columns: [\r\n        { id: \"id\", text: \"Id\" },\r\n        { id: \"name\", text: \"Name\" },\r\n        { id: \"animal\", text: \"Animal\" },\r\n      ],\r\n      data: [\r\n        { id: 1, name: \"George\", animal: \"Monkey\" },\r\n        { id: 2, name: \"Jeffrey\", animal: \"Giraffe\" },\r\n        { id: 3, name: \"Alice\", animal: \"Giraffe\" },\r\n        { id: 4, name: \"Alice\", animal: \"Tiger\" },\r\n      ],\r\n      user_code: \"\",\r\n      user_name: \"\",\r\n      only_active: false,\r\n      isShowTable: false,\r\n      isShowDeleteBlock: false,\r\n      dateBlock: null,\r\n\r\n      role: null,\r\n\r\n      selectRow: null,\r\n      addRow: {},\r\n      isDisableButton: true,\r\n      isShowEditBlock: false,\r\n      isShowAddBlock: false,\r\n\r\n      value: {\r\n        user_code: \"TEST22\",\r\n      },\r\n      initialValues: {\r\n        account: null,\r\n        bank_branch_id: 0,\r\n        branch_name: \"Тут буде банк бренч\",\r\n        date_registered: \"04/08/2021\",\r\n        department: null,\r\n        division: null,\r\n        ipphone: null,\r\n        language_code: \"UK\",\r\n        language_name: \"Українська\",\r\n        last_logon_date: null,\r\n        middle_name: null,\r\n        mobile: null,\r\n        name: null,\r\n        office: null,\r\n        phone: null,\r\n        region: null,\r\n        role_name: \"Розробник\",\r\n        status: \"Активний\",\r\n        status_code: \"ACTIVE\",\r\n        surname: null,\r\n        tvbv: \"no_data\",\r\n        user_code: \"TEST22\",\r\n        user_email: null,\r\n        user_name: \"Test\",\r\n        user_position: \"tester\",\r\n        user_role: \"DEV\",\r\n      },\r\n    };\r\n  }\r\n  async requestADMIN_USERS(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/User`;\r\n    const userBody = {\r\n      user_code: this.state.user_code,\r\n      user_name: this.state.user_name,\r\n      bank_branch_id: 0,\r\n      only_active: this.state.only_active,\r\n    };\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.addTableData(true, response.data.users);\r\n        this.setState({ isShowTable: true });\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestADMIN_USERS_delete(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/User/${this.state.selectRow.user_code}/0/${this.state.dateBlock}`;\r\n    await axios\r\n      .delete(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.closeEditForm();\r\n        this.requestADMIN_USERS(this.props.store.userState.token);\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestADMIN_USERS_add(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/User`;\r\n    await axios\r\n      .put(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then(() => {\r\n        this.closeEditForm();\r\n        this.requestADMIN_USERS(this.props.store.userState.token);\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestADMIN_ROLES(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Role`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          isShowEditBlock: true,\r\n          role: response.data.roles,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n\r\n  changeUserCode = (e) => {\r\n    let inputValue = e.target.value;\r\n    this.setState({\r\n      user_code: inputValue,\r\n    });\r\n  };\r\n  changeUserName = (e) => {\r\n    let inputValue = e.target.value;\r\n    this.setState({\r\n      user_name: inputValue,\r\n    });\r\n  };\r\n  changeOnlyActive = (e) => {\r\n    let inputValue = e.target.checked;\r\n    this.setState({\r\n      only_active: inputValue,\r\n    });\r\n  };\r\n\r\n  search = () => {\r\n    this.requestADMIN_USERS(this.props.store.userState.token);\r\n  };\r\n  requestDeleteUser = () => {\r\n    this.requestADMIN_USERS_delete(this.props.store.userState.token);\r\n  };\r\n  changeDate = (e) => {\r\n    let inputValue = e.target.value;\r\n    this.setState({\r\n      dateBlock: this.formatDate(new Date(inputValue)),\r\n    });\r\n  };\r\n  formatDate = (date) => {\r\n    return `${date.getFullYear()}${(\"0\" + (date.getMonth() + 1)).slice(-2)}${date.getDate()}`;\r\n  };\r\n\r\n  editHandle = () => {\r\n    this.requestADMIN_ROLES(this.props.store.userState.token);\r\n  };\r\n  addHandle = () => {\r\n    this.setState({\r\n      isShowAddBlock: true,\r\n    });\r\n  };\r\n  deleteHandle = () => {\r\n    this.setState({\r\n      isShowDeleteBlock: true,\r\n    });\r\n  };\r\n  closeEditForm = () => {\r\n    this.setState({\r\n      selectRow: {},\r\n      isShowEditBlock: false,\r\n      isShowAddBlock: false,\r\n      isShowDeleteBlock: false,\r\n    });\r\n  };\r\n\r\n  changeInputSelect = (e) => {\r\n    let keyName = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.selectRow;\r\n    inputDataObj[keyName] = inputValue;\r\n    this.setState({\r\n      selectRow: inputDataObj,\r\n    });\r\n  };\r\n  changeInput = (e, isEdit = true) => {\r\n    let keyName = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    let inputRow = isEdit ? \"selectRow\" : \"addRow\";\r\n    let inputDataObj = this.state[inputRow];\r\n    inputDataObj[keyName] = inputValue;\r\n    this.setState({\r\n      [inputRow]: inputDataObj,\r\n    });\r\n  };\r\n  saveUser = () => {\r\n    this.requestADMIN_USERS_add(\r\n      this.props.store.userState.token,\r\n      this.state.selectRow\r\n    );\r\n  };\r\n  addUser = () => {\r\n    this.requestADMIN_USERS_add(\r\n      this.props.store.userState.token,\r\n      this.state.addRow\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const selectRowProp = {\r\n      mode: \"radio\",\r\n      onSelect: (row) => {\r\n        this.setState({\r\n          selectRow: row,\r\n          isDisableButton: false,\r\n        });\r\n      },\r\n    };\r\n    const OptionItem = (props) => {\r\n      return (\r\n        <option\r\n          selected={\r\n            props.optionItem.role_id === this.state.selectRow.user_role\r\n              ? \"selected\"\r\n              : \"\"\r\n          }\r\n          value={props.optionItem.role_id}\r\n        >\r\n          {props.optionItem.role_name}\r\n        </option>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"coverTable TableADMIN_USERS\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"filter\">\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"user_code\">Код користувача</label>\r\n            <input\r\n              onChange={this.changeUserCode}\r\n              defaultValue={this.state.user_code}\r\n              className=\"customInput\"\r\n              id=\"user_code\"\r\n              type=\"text\"\r\n            />\r\n\r\n            <label htmlFor=\"user_name\">Імя користувача</label>\r\n            <input\r\n              onChange={this.changeUserName}\r\n              defaultValue={this.state.user_name}\r\n              className=\"customInput\"\r\n              id=\"user_name\"\r\n              type=\"text\"\r\n            />\r\n          </div>\r\n          <div className=\"coverCheckbox\">\r\n            <label htmlFor=\"status_code\">Тільки активні користувачі</label>\r\n            <input\r\n              onChange={this.changeOnlyActive}\r\n              id=\"status_code\"\r\n              type=\"checkbox\"\r\n            />\r\n          </div>\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Пошук\r\n          </button>\r\n        </div>\r\n        {this.state.isShowDeleteBlock ? (\r\n          <div className=\"coverDeleteBlock\">\r\n            <div className=\"innerBlock\">\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"user_code\">Код користувача</label>\r\n                <input\r\n                  defaultValue={this.state.selectRow.user_code}\r\n                  className=\"customInput\"\r\n                  id=\"user_code\"\r\n                  type=\"text\"\r\n                  disabled\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"user_date\">\r\n                  Дата до якої призупинити користувача\r\n                </label>\r\n                <input\r\n                  onChange={this.changeDate}\r\n                  className=\"customInput\"\r\n                  id=\"user_date\"\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={this.requestDeleteUser}\r\n              >\r\n                Видалити користувача\r\n              </button>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.closeEditForm}\r\n              >\r\n                Скасувати\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.state.isShowEditBlock ? (\r\n          <div className=\"coverEditBlock\">\r\n            <div className=\"innerBlock\">\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"user_code\"\r\n                type=\"text\"\r\n                placeholder=\"Код користувача\"\r\n                defaultValue={this.state.selectRow.user_code}\r\n                disabled\r\n              />\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"user_name\"\r\n                type=\"text\"\r\n                placeholder=\"Ім'я користувача\"\r\n                defaultValue={this.state.selectRow.user_name}\r\n              />\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"user_position\"\r\n                type=\"text\"\r\n                placeholder=\"Посада користувача\"\r\n                defaultValue={this.state.selectRow.user_position}\r\n              />\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"mobile\"\r\n                type=\"text\"\r\n                placeholder=\"Телефон\"\r\n                defaultValue={this.state.selectRow.mobile}\r\n              />\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"user_email\"\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n                defaultValue={this.state.selectRow.user_email}\r\n              />\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"division\"\r\n                type=\"text\"\r\n                placeholder=\"Відділ\"\r\n                defaultValue={this.state.selectRow.division}\r\n              />\r\n              <select\r\n                onChange={this.changeInputSelect}\r\n                name=\"user_role\"\r\n                id=\"dropdown-basic-button\"\r\n                className=\"form-select\"\r\n                title=\"Виберіть роль\"\r\n              >\r\n                {this.state.role.map((item, index) => {\r\n                  return <OptionItem key={index} optionItem={item} />;\r\n                })}\r\n              </select>\r\n\r\n              <div className=\"coverBtn\">\r\n                <button onClick={this.saveUser} className=\"btn btn-success\">\r\n                  Зберегти\r\n                </button>\r\n                <button\r\n                  onClick={this.closeEditForm}\r\n                  className=\"btn btn-secondary\"\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.state.isShowAddBlock ? (\r\n          <div className=\"coverAddBlock\">\r\n            <div className=\"innerBlock\">\r\n              <input\r\n                onChange={(e) => this.changeInput(e, false)}\r\n                name=\"user_code\"\r\n                type=\"text\"\r\n                placeholder=\"Код користувача\"\r\n              />\r\n              <input\r\n                onChange={(e) => this.changeInput(e, false)}\r\n                name=\"user_name\"\r\n                type=\"text\"\r\n                placeholder=\"Ім'я користувача\"\r\n              />\r\n              <input\r\n                onChange={(e) => this.changeInput(e, false)}\r\n                name=\"user_position\"\r\n                type=\"text\"\r\n                placeholder=\"Посада користувача\"\r\n              />\r\n              <input\r\n                onChange={(e) => this.changeInput(e, false)}\r\n                name=\"mobile\"\r\n                type=\"text\"\r\n                placeholder=\"Телефон\"\r\n              />\r\n              <input\r\n                onChange={(e) => this.changeInput(e, false)}\r\n                name=\"user_email\"\r\n                type=\"text\"\r\n                placeholder=\"Email\"\r\n              />\r\n              <input\r\n                onChange={(e) => this.changeInput(e, false)}\r\n                name=\"division\"\r\n                type=\"text\"\r\n                placeholder=\"Відділ\"\r\n              />\r\n              <input\r\n                onChange={(e) => this.changeInput(e, false)}\r\n                name=\"user_role\"\r\n                type=\"text\"\r\n                placeholder=\"Роль\"\r\n              />\r\n              <div className=\"coverBtn\">\r\n                <button onClick={this.addUser} className=\"btn btn-success\">\r\n                  Зберегти\r\n                </button>\r\n                <button\r\n                  onClick={this.closeEditForm}\r\n                  className=\"btn btn-secondary\"\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        <div className=\"innerTable\">\r\n          <div className=\"Table\">\r\n            {this.state.isShowTable ? (\r\n              <>\r\n                <div className=\"controlBlock\">\r\n                  <button\r\n                    onClick={this.editHandle}\r\n                    disabled={this.state.isDisableButton ? \"disabled\" : \"\"}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    Редагування\r\n                  </button>\r\n                  <button onClick={this.addHandle} className=\"btn btn-info\">\r\n                    Додавання\r\n                  </button>\r\n                  <button\r\n                    onClick={this.deleteHandle}\r\n                    disabled={this.state.isDisableButton ? \"disabled\" : \"\"}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Видалення\r\n                  </button>\r\n                </div>\r\n                <BootstrapTable\r\n                  data={this.props.store.menuState.tableData}\r\n                  selectRow={selectRowProp}\r\n                >\r\n                  <TableHeaderColumn\r\n                    isKey\r\n                    dataField=\"user_code\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Код користувача\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"status_code\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Статус користувача\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"user_name\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Ім'я користувача\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"user_position\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Посада користувача\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"mobile\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Телефон\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"user_email\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Email\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"division\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Відділ\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"user_role\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Роль\r\n                  </TableHeaderColumn>\r\n                </BootstrapTable>\r\n              </>\r\n            ) : (\r\n              <span>Скористайтеся пошуком</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TableADMIN_USERS;\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport {activeOperation} from './helpers'\r\nclass TableADMIN_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tableData: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.requestADMIN_OPERATIONS(this.props.store.userState.token);\r\n  }\r\n  async requestADMIN_OPERATIONS(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Operations`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          tableData: response.data.operations,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error)\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable ADMIN_OPERATIONS\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"innerTable\">\r\n          <div className=\"Table\">\r\n            <BootstrapTable data={this.state.tableData}>\r\n              <TableHeaderColumn\r\n                isKey\r\n                dataField=\"name\"\r\n                filter={{ type: \"TextFilter\", delay: 1000 }}\r\n              >\r\n                Ім'я операції\r\n              </TableHeaderColumn>\r\n              <TableHeaderColumn\r\n                dataField=\"operation\"\r\n                filter={{ type: \"TextFilter\", delay: 1000 }}\r\n              >\r\n                Операція\r\n              </TableHeaderColumn>\r\n              <TableHeaderColumn\r\n                dataField=\"parent_operation\"\r\n                filter={{ type: \"TextFilter\", delay: 1000 }}\r\n              >\r\n                Відноситься до\r\n              </TableHeaderColumn>\r\n            </BootstrapTable>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TableADMIN_OPERATIONS;","import { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\n\r\nclass TableADMIN_ROLE_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      roles: null,\r\n      isShowSelectRoles: false,\r\n      operations: null,\r\n      isShowTable: false,\r\n      isSelected: null,\r\n      isDisableButton: true,\r\n      selectRow: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.requestADMIN_ROLES(this.props.store.userState.token);\r\n  }\r\n  async requestADMIN_ROLES(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Role`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          roles: response.data.roles,\r\n          isShowSelectRoles: true,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestADMIN_ROLE_OPERATIONS(token, roleID) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/RoleOperations/${roleID}`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          operations: response.data.operations,\r\n          isShowTable: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestADMIN_ROLE_OPERATIONS_edit(token, obj) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/RoleOperations`;\r\n\r\n    await axios\r\n      .put(baseUrl, obj, {\r\n        headers: {\r\n          Token: `${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.requestADMIN_ROLE_OPERATIONS(\r\n          this.props.store.userState.token,\r\n          this.state.isSelected\r\n        );\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  selectRoleID = (e) => {\r\n    let roleID = e.target.value;\r\n    this.setState({\r\n      isSelected: roleID,\r\n    });\r\n    this.requestADMIN_ROLE_OPERATIONS(this.props.store.userState.token, roleID);\r\n  };\r\n\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation === operation) {\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  editColumn(e, row) {\r\n    let nameRole = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.checked;\r\n    row[nameRole] = inputValue;\r\n    let obj = {\r\n      role_id: `${this.state.isSelected}`,\r\n      operations: [row],\r\n    };\r\n\r\n    this.requestADMIN_ROLE_OPERATIONS_edit(this.props.store.userState.token, obj);\r\n  }\r\n\r\n  checkbox(row, cell, name) {\r\n    return (\r\n      <input\r\n        onChange={(e) => this.editColumn(e, row)}\r\n        checked={cell}\r\n        name={name}\r\n        type=\"checkbox\"\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const OptionItem = (props) => {\r\n      return (\r\n        <option\r\n          selected={\r\n            this.state.isSelected == props.optionItem.role_id ? \"selected\" : \"\"\r\n          }\r\n          value={props.optionItem.role_id}\r\n        >\r\n          {props.optionItem.role_name}\r\n        </option>\r\n      );\r\n    };\r\n\r\n    const editEnableColumn = (cell, row) => this.checkbox(row, cell, \"enabled\");\r\n    const editCancelColumn = (cell, row) => this.checkbox(row, cell, \"cancel\");\r\n    const editCreateColumn = (cell, row) => this.checkbox(row, cell, \"create\");\r\n    const editDeleteColumn = (cell, row) => this.checkbox(row, cell, \"delete\");\r\n    const editModifyColumn = (cell, row) => this.checkbox(row, cell, \"modify\");\r\n\r\n    return (\r\n      <div className=\"coverTable ADMIN_ROLE_OPERATIONS\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\">\r\n            <span htmlFor=\"dropdown-basic-button\">Виберіть роль</span>\r\n            <select\r\n              onChange={this.selectRoleID}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className=\"form-select\"\r\n              title=\"Виберіть роль\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectRoles\r\n                ? this.state.roles.map((item, index) => {\r\n                    return <OptionItem key={index} optionItem={item} />;\r\n                  })\r\n                : null}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"innerTable\">\r\n          <div className=\"Table\">\r\n            {this.state.isShowTable ? (\r\n              <>\r\n                <BootstrapTable data={this.state.operations}>\r\n                  <TableHeaderColumn\r\n                    isKey\r\n                    dataField=\"operation_desc\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    ID операції\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"parent_operation_id\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Відноситься до\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"cancel\"\r\n                    dataFormat={editCancelColumn}\r\n                  >\r\n                    Скасування\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"enabled\"\r\n                    dataFormat={editCreateColumn}\r\n                  >\r\n                    Створення\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"delete\"\r\n                    dataFormat={editDeleteColumn}\r\n                  >\r\n                    Видалення\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"modify\"\r\n                    dataFormat={editModifyColumn}\r\n                  >\r\n                    Редагування\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"enabled\"\r\n                    dataFormat={editEnableColumn}\r\n                  >\r\n                    Активно\r\n                  </TableHeaderColumn>\r\n                </BootstrapTable>\r\n              </>\r\n            ) : (\r\n              <span>Виберіть роль</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableADMIN_ROLE_OPERATIONS;","import React from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport {\r\n  activeOperation,\r\n  selectRoleID,\r\n  requestADMIN_ROLES,\r\n  OptionItem,\r\n  editEnableColumn,\r\n  editCancelColumn,\r\n  editCreateColumn,\r\n  editDeleteColumn,\r\n  editModifyColumn,\r\n} from \"./helpers\";\r\n\r\nclass TableADMIN_USER_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      roles: null,\r\n      isShowSelectRoles: false,\r\n      operations: null,\r\n      isShowTable: false,\r\n      isSelected: null,\r\n      isDisableButton: true,\r\n      selectRow: null,\r\n    };\r\n  }\r\n  componentDidMount() { requestADMIN_ROLES(this); }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable ADMIN_USER_OPERATIONS\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\">\r\n            <span htmlFor=\"dropdown-basic-button\">Виберіть юзера</span>\r\n            <select\r\n              onChange={(e) => selectRoleID(e, this)}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className=\"form-select\"\r\n              title=\"Виберіть роль\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectRoles\r\n                ? this.state.roles.map((item, index) => {\r\n                    return (\r\n                      <OptionItem\r\n                        key={index}\r\n                        optionItem={item}\r\n                        state={this.state}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"innerTable\">\r\n          <div className=\"Table\">\r\n            {this.state.isShowTable ? (\r\n              <BootstrapTable data={this.state.operations}>\r\n                <TableHeaderColumn\r\n                  isKey\r\n                  dataField=\"operation_desc\"\r\n                  filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                >\r\n                  ID операції\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn\r\n                  dataField=\"parent_operation_id\"\r\n                  filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                >\r\n                  Відноситься до\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn\r\n                  dataField=\"cancel\"\r\n                  dataFormat={(cell, row) => editCancelColumn(cell, row, this)}\r\n                >\r\n                  Скасування\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn\r\n                  dataField=\"enabled\"\r\n                  dataFormat={(cell, row) => editCreateColumn(cell, row, this)}\r\n                >\r\n                  Створення\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn\r\n                  dataField=\"delete\"\r\n                  dataFormat={(cell, row) => editDeleteColumn(cell, row, this)}\r\n                >\r\n                  Видалення\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn\r\n                  dataField=\"modify\"\r\n                  dataFormat={(cell, row) => editModifyColumn(cell, row, this)}\r\n                >\r\n                  Редагування\r\n                </TableHeaderColumn>\r\n                <TableHeaderColumn\r\n                  dataField=\"enabled\"\r\n                  dataFormat={(cell, row) => editEnableColumn(cell, row, this)}\r\n                >\r\n                  Активно\r\n                </TableHeaderColumn>\r\n              </BootstrapTable>\r\n            ) : (\r\n              <span>Виберіть роль</span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TableADMIN_USER_OPERATIONS;\r\n","import React, { Component } from \"react\";\r\nimport { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport * as axios from \"axios\";\r\nimport {activeOperation} from './helpers'\r\n\r\nclass TableADMIN_ROLES extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      addRow: {},\r\n      roles: null,\r\n      isShowTable: true,\r\n      selectRow: null,\r\n      isDisableButton: true,\r\n      isShowEditBlock: false,\r\n      isShowAddBlock: false,\r\n      isShowDeleteBlock: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.requestADMIN_ROLES(this.props.store.userState.token);\r\n  }\r\n  async requestADMIN_ROLES(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Role`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          roles: response.data.roles,\r\n          isShowTable: true,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestADMIN_ROLE_add(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Role`;\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then(() => {\r\n        this.closeEditForm();\r\n        this.requestADMIN_ROLES(this.props.store.userState.token);\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestADMIN_ROLE_edit(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Role`;\r\n    await axios\r\n      .put(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then(() => {\r\n        this.closeEditForm();\r\n        this.requestADMIN_ROLES(this.props.store.userState.token);\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  async requestADMIN_ROLE_delete(token, role_id) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Role/${role_id}`;\r\n    await axios\r\n      .delete(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then(() => {\r\n        this.setState({\r\n          isDisableButton: true,\r\n        });\r\n        this.closeEditForm();\r\n        this.requestADMIN_ROLES(this.props.store.userState.token);\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  }\r\n  editHandle = () => {\r\n    this.setState({\r\n      isShowEditBlock: true,\r\n    });\r\n  };\r\n  addHandle = () => {\r\n    this.setState({\r\n      isShowAddBlock: true,\r\n    });\r\n  };\r\n  deleteHandle = () => {\r\n    this.setState({\r\n      isShowDeleteBlock: true,\r\n    });\r\n  };\r\n  closeEditForm = () => {\r\n    this.setState({\r\n      selectRow: {},\r\n      isShowEditBlock: false,\r\n      isShowAddBlock: false,\r\n      isShowDeleteBlock: false,\r\n    });\r\n  };\r\n  changeInput = (e, isEdit = true) => {\r\n    let keyName = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    let inputRow = isEdit ? \"selectRow\" : \"addRow\";\r\n    let inputDataObj = this.state[inputRow];\r\n    inputDataObj[keyName] = inputValue;\r\n    this.setState({\r\n      [inputRow]: inputDataObj,\r\n    });\r\n  };\r\n  saveUser = () => {\r\n    this.requestADMIN_ROLE_edit(\r\n      this.props.store.userState.token,\r\n      this.state.selectRow\r\n    );\r\n  };\r\n  addRole = () => {\r\n    this.requestADMIN_ROLE_add(\r\n      this.props.store.userState.token,\r\n      this.state.addRow\r\n    );\r\n  };\r\n  deleteRole = () => {\r\n    this.requestADMIN_ROLE_delete(\r\n      this.props.store.userState.token,\r\n      this.state.selectRow.role_id\r\n    );\r\n  };\r\n  render() {\r\n    const selectRowProp = {\r\n      mode: \"radio\",\r\n      onSelect: (row) => {\r\n        this.setState({\r\n          selectRow: row,\r\n          isDisableButton: false,\r\n        });\r\n      },\r\n    };\r\n    return (\r\n      <div className=\"coverTable TableADMIN_ROLES\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        {this.state.isShowDeleteBlock ? (\r\n          <div className=\"coverDeleteBlock\">\r\n            <div className=\"innerBlock\">\r\n              <div>\r\n                Ви впевнені, видалити цю роль:\r\n                <span>{this.state.selectRow.role_id}</span>?\r\n              </div>\r\n              <br />\r\n              <div className=\"coverBtn\">\r\n                <button className=\"btn btn-danger\" onClick={this.deleteRole}>\r\n                  Видалити\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closeEditForm}\r\n                >\r\n                  Скасувати\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.state.isShowEditBlock ? (\r\n          <div className=\"coverEditBlock\">\r\n            <div className=\"innerBlock\">\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"role_id\"\r\n                type=\"text\"\r\n                placeholder=\"ID ролі\"\r\n                defaultValue={this.state.selectRow.role_id}\r\n                disabled\r\n              />\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"role_name\"\r\n                type=\"text\"\r\n                placeholder=\"Ім'я ролі\"\r\n                defaultValue={this.state.selectRow.role_name}\r\n              />\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"role_desc\"\r\n                type=\"text\"\r\n                placeholder=\"Опис\"\r\n                defaultValue={this.state.selectRow.role_desc}\r\n              />\r\n              <input\r\n                onChange={this.changeInput}\r\n                name=\"ad_role\"\r\n                type=\"text\"\r\n                placeholder=\"Ідентифікатор AD ролі\"\r\n                defaultValue={this.state.selectRow.ad_role}\r\n              />\r\n              <div className=\"coverBtn\">\r\n                <button onClick={this.saveUser} className=\"btn btn-success\">\r\n                  Зберегти\r\n                </button>\r\n                <button\r\n                  onClick={this.closeEditForm}\r\n                  className=\"btn btn-secondary\"\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        {this.state.isShowAddBlock ? (\r\n          <div className=\"coverAddBlock\">\r\n            <div className=\"innerBlock\">\r\n              <input\r\n                onChange={(e)=>this.changeInput(e, false)}\r\n                name=\"role_id\"\r\n                type=\"text\"\r\n                placeholder=\"ID ролі\"\r\n              />\r\n              <input\r\n                onChange={(e)=>this.changeInput(e, false)}\r\n                name=\"role_name\"\r\n                type=\"text\"\r\n                placeholder=\"Ім'я ролі\"\r\n              />\r\n              <input\r\n                onChange={(e)=>this.changeInput(e, false)}\r\n                name=\"role_desc\"\r\n                type=\"text\"\r\n                placeholder=\"Опис\"\r\n              />\r\n              <input\r\n                onChange={(e)=>this.changeInput(e, false)}\r\n                name=\"ad_role\"\r\n                type=\"text\"\r\n                placeholder=\"Ідентифікатор AD ролі\"\r\n              />\r\n              <div className=\"coverBtn\">\r\n                <button onClick={this.addRole} className=\"btn btn-success\">\r\n                  Зберегти\r\n                </button>\r\n                <button\r\n                  onClick={this.closeEditForm}\r\n                  className=\"btn btn-secondary\"\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <div className=\"innerTable\">\r\n          <div className=\"Table\">\r\n            {this.state.isShowTable ? (\r\n              <>\r\n                <div className=\"controlBlock\">\r\n                  <button\r\n                    onClick={this.editHandle}\r\n                    disabled={this.state.isDisableButton ? \"disabled\" : \"\"}\r\n                    className=\"btn btn-secondary\"\r\n                  >\r\n                    Редагування\r\n                  </button>\r\n                  <button onClick={this.addHandle} className=\"btn btn-info\">\r\n                    Додавання\r\n                  </button>\r\n                  <button\r\n                    onClick={this.deleteHandle}\r\n                    disabled={this.state.isDisableButton ? \"disabled\" : \"\"}\r\n                    className=\"btn btn-warning\"\r\n                  >\r\n                    Видалення\r\n                  </button>\r\n                </div>\r\n                <BootstrapTable\r\n                  data={this.state.roles}\r\n                  selectRow={selectRowProp}\r\n                >\r\n                  <TableHeaderColumn\r\n                    isKey\r\n                    dataField=\"role_id\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    ID ролі\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"role_name\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Ім'я ролі\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"ad_role\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Ідентифікатор AD ролі\r\n                  </TableHeaderColumn>\r\n                </BootstrapTable>\r\n              </>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TableADMIN_ROLES;","import { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  console.log(\"props.report_period_type_id: \", props.report_period_type_id);\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={\r\n          props.report_period_type_id !== null\r\n            ? props.report_period_type_id.includes(\r\n                props.optionItem.report_period_type_id\r\n              )\r\n            : false\r\n        }\r\n        value={props.optionItem.report_period_type_id}\r\n        style={{ margin: \"10px 0\" }}\r\n      />{\" \"}\r\n      {props.optionItem.report_period_type_name}\r\n      <br />\r\n    </>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name}\r\n    </div>\r\n  );\r\n};\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"mousedown\", this.clickTest);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    if (this.myRef.current != null) {\r\n      if (this.myRef.current.className != e.target.parentElement.className) {\r\n        this.setState({\r\n          isShowBlockSelect: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть перші три букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTspName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.ident_code}\r\n    </div>\r\n  );\r\n};\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"mousedown\", this.clickTest);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addIdentCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    if (this.myRef.current != null) {\r\n      if (this.myRef.current.className != e.target.parentElement.className) {\r\n        this.setState({\r\n          isShowBlockSelect: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть перші три цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_SETTINGS_TSP extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      isDisableButton: false,\r\n      selectRow: null,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      TSPReportSettingsSearchObj: {},\r\n\r\n      settings: null,\r\n      tsp_list: null,\r\n\r\n      isShowTsp: false,\r\n\r\n      currentTsp: null,\r\n\r\n      isShowTypeAcquiring: false,\r\n\r\n      //type_acquiring: 1, 1-фізичний 2-інтернет\r\n      isShowReport: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowREPORT_FORMAT: false,\r\n\r\n      DICT_REPORT_PERIOD_TYPE: null,\r\n      isShowDICT_REPORT_PERIOD_TYPE: false,\r\n\r\n      DICT_REPORT_CHANNEL_TYPE: null,\r\n      isShowDICT_REPORT_CHANNEL_TYPE: false,\r\n\r\n      isShowTableTSPReportSettingsSTD: false,\r\n      TSPReportSettingsSTD: null,\r\n\r\n      errorRU: false,\r\n      error_text: \"Заповніть поле!\",\r\n\r\n      responseTSPReportSettings: {\r\n        tsp_list: [\r\n          {\r\n            tsp_id: 595999,\r\n            tsp_name: \"ТзОВ АПТЕКА-ЖОВТНЕВЕ ЛТД\",\r\n            bank_branch_name: \"Волинське ОУ /303398/\",\r\n            ident_code: \"30297548\",\r\n            merchant_id: 0,\r\n            creation_date: \"2012-05-24T18:55:58\",\r\n          },\r\n          {\r\n            tsp_id: 595998,\r\n            tsp_name: \"ТзОВ Нововолинський м'ясокомбіна\",\r\n            bank_branch_name: \"Волинськеfrfr ОУ /303398/\",\r\n            ident_code: \"30297548\",\r\n            merchant_id: 0,\r\n            creation_date: \"2012-05-24T18:55:58\",\r\n          },\r\n          {\r\n            tsp_id: 595997,\r\n            tsp_name: \"Тов березка на\",\r\n            bank_branch_name: \"Волинськеfrfr ОУ /303398/\",\r\n            ident_code: \"30297548\",\r\n            merchant_id: 0,\r\n            creation_date: \"2012-05-24T18:55:58\",\r\n          },\r\n        ],\r\n        settings: [\r\n          {\r\n            tsp_id: 595999,\r\n            main_settings: [\r\n              {\r\n                acquiring_type_id: 1,\r\n                standard_report: true,\r\n                extended_report: false,\r\n                installment_report: false,\r\n                report_format_id: 2,\r\n                report_format_name: \"csv\",\r\n                report_period_type_ids: null,\r\n                channel_type_id: 2,\r\n                channel_type_name: \"email\",\r\n                channel_address: \"rere@gmail.com\",\r\n                file_name_mask: \"Statement_ЄДРПОУ_період\",\r\n                file_path: \"\",\r\n                report_setting_id: 0,\r\n              },\r\n              {\r\n                report_setting_id: 0,\r\n                acquiring_type_id: 2,\r\n                standard_report: true,\r\n                extended_report: false,\r\n                installment_report: true,\r\n                report_format_id: 1,\r\n                report_format_name: \"xls\",\r\n                report_period_type_ids: null,\r\n                channel_type_id: 2,\r\n                channel_type_name: null,\r\n                channel_address: \"re3re@gmail.com\",\r\n                file_name_mask: \"Statement_ЄДРПОУ_період\",\r\n                file_path: \"\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n\r\n      isShowPopupError: false,\r\n      isShowPopupErrorSave: false,\r\n      isShowPopupDone: false,\r\n\r\n      currentAcquiring_type_id: null,\r\n\r\n      type_acquiring: 1,\r\n      tsp_id: null,\r\n      report_format_id: null,\r\n      report_period_type_id: null,\r\n      channel_type_id: null,\r\n      file_name_mask: null,\r\n\r\n      physical_acquiring_type_id: 1,\r\n      physical_channel_address: \"\",\r\n      physical_channel_type_id: 1,\r\n      physical_extended_report: false,\r\n      physical_file_name_mask: \"\",\r\n      physical_installment_report: false,\r\n      physical_report_format_id: 1,\r\n      physical_report_period_type_id: 1,\r\n      physical_standard_report: true,\r\n\r\n      internet_acquiring_type_id: 2,\r\n      internet_channel_address: \"\",\r\n      internet_channel_type_id: 1,\r\n      internet_extended_report: false,\r\n      internet_file_name_mask: \"\",\r\n      internet_installment_report: false,\r\n      internet_report_format_id: 1,\r\n      internet_report_period_type_id: 1,\r\n      internet_standard_report: true,\r\n\r\n      internetEmailMaskError: false,\r\n      physicalEmailMaskError: false,\r\n      isDisabledSaveBtn: true,\r\n\r\n      isShowOrder_numberError: false,\r\n      isShowBootstrapTable: true,\r\n    };\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n  }\r\n  selectDICT_INSTITUTION = (e) => {\r\n    console.log(e.target.value);\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      isShowSelectTVBV: false,\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(this.state.TSPReportSettingsSearchObj);\r\n\r\n    this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n  };\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowREPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n      });\r\n  }\r\n  async requestDICT_REPORT_CHANNEL_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_CHANNEL_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_CHANNEL_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_CHANNEL_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestTSPReportSettings(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/TSPReportSettings`;\r\n\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        if (response.data.record_count >= 1) {\r\n          if (response.data.tsp_list[0].main_settings === null) {\r\n            response.data.tsp_list[0].main_settings =\r\n              this.state.responseTSPReportSettings.settings[0].main_settings;\r\n          } else if (response.data.tsp_list[0].main_settings.length === 1) {\r\n            const count =\r\n              response.data.tsp_list[0].main_settings[0].acquiring_type_id === 1\r\n                ? 1\r\n                : 0;\r\n            response.data.tsp_list[0].main_settings.push(\r\n              this.state.responseTSPReportSettings.settings[0].main_settings[\r\n                count\r\n              ]\r\n            );\r\n          }\r\n          console.log(\"response.data.tsp_list[0]: \", response.data.tsp_list[0]);\r\n          this.setState({\r\n            tsp_list: response.data.tsp_list,\r\n            settings: response.data.tsp_list[0].main_settings,\r\n            //tsp_id: response.data.tsp_list[0].tsp_id,\r\n            isShowTsp: true,\r\n          });\r\n        } else if (response.data.record_count < 1) {\r\n          this.setState({\r\n            isShowPopupError: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestTSPReportSettingsSTD(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/TSPReportSettings/STD`;\r\n\r\n    let userBody = {\r\n      acquiring_type_id: this.state.type_acquiring,\r\n    };\r\n    userBody.report_setting_id =\r\n      +this.state.type_acquiring === 1\r\n        ? this.state.physical_report_settings_id\r\n        : this.state.internet_report_settings_id;\r\n\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          TSPReportSettingsSTD: response.data.standard_settings,\r\n          isShowTableTSPReportSettingsSTD: true,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  async requestTSPReportSettingsSTD_SAVE(token, dody) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/TSPReportSettings`;\r\n\r\n    console.log(dody);\r\n    await axios\r\n      .put(baseUrl, dody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // this.setState({\r\n        //     TSPReportSettingsSTD: response.data.standard_settings,\r\n        //     isShowTableTSPReportSettingsSTD: true\r\n        // });\r\n        this.setState({\r\n          isShowTsp: false,\r\n          isShowTypeAcquiring: false,\r\n        });\r\n        this.search();\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n\r\n        this.setState({ isShowPopupDone: true });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n        this.setState({\r\n          isShowPopupErrorSave: true,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      });\r\n  }\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n\r\n    if (apiName == \"date_from\" || apiName == \"date_to\") {\r\n      inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    } else {\r\n      inputDataObj[apiName] = inputValue;\r\n    }\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(this.state.TSPReportSettingsSearchObj);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.setState({\r\n      errorRU: false,\r\n    });\r\n    if (this.state.isDisableTVBV) {\r\n      this.setState({\r\n        errorRU: true,\r\n      });\r\n      return;\r\n    }\r\n    // main\r\n    console.log(this.state.TSPReportSettingsSearchObj);\r\n    this.requestTSPReportSettings(\r\n      this.props.store.userState.token,\r\n      this.state.TSPReportSettingsSearchObj\r\n    );\r\n\r\n    // let obj = {\r\n    //     date_from: \"20210622\",\r\n    //     date_to: \"20210630\",\r\n    //     institution_id: \"824\"\r\n    // }\r\n    // this.requestTSPReportSettings(this.props.store.userState.token, obj);\r\n\r\n    //this.requestTSPReportSettings_test(this.props.store.userState.token, this.state.TSPReportSettingsSearchObj);\r\n\r\n    // this.setState({\r\n    //     settings: this.state.responseTSPReportSettings.settings,\r\n    //     tsp_list: this.state.responseTSPReportSettings.tsp_list,\r\n    //     isShowTsp: true\r\n    // });\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    //console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      //console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    //console.log(this.state);\r\n    this.state.tsp_list.map((item, index) => {\r\n      if (+item.tsp_id === +currentTsp) {\r\n        this.setState({\r\n          physical_acquiring_type_id: 1,\r\n          physical_channel_address: \"\",\r\n          physical_channel_type_id: 1,\r\n          physical_extended_report: false,\r\n          physical_file_name_mask: \"\",\r\n          physical_installment_report: false,\r\n          physical_report_format_id: 1,\r\n          physical_report_period_type_id: null,\r\n          physical_standard_report: true,\r\n\r\n          internet_acquiring_type_id: 2,\r\n          internet_channel_address: \"\",\r\n          internet_channel_type_id: 1,\r\n          internet_extended_report: false,\r\n          internet_file_name_mask: \"\",\r\n          internet_installment_report: false,\r\n          internet_report_format_id: 1,\r\n          internet_report_period_type_id: null,\r\n          internet_standard_report: true,\r\n\r\n          currentTsp: Number(currentTsp),\r\n          TSPReportSettingsSTD: null,\r\n          isShowTypeAcquiring: true,\r\n        });\r\n        console.log(this.state);\r\n        if (!item.main_settings) {\r\n          this.setState({\r\n            isShowTypeAcquiring: true,\r\n          });\r\n        } else if (item.main_settings) {\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == 1) {\r\n              console.log(\"item.acquiring_type_id == 1\");\r\n              //console.log(item.file_name_mask);\r\n              this.setState({\r\n                physical_acquiring_type_id: item.acquiring_type_id,\r\n                physical_channel_address: item.channel_address,\r\n                physical_channel_type_id: item.channel_type_id,\r\n                //physical_extended_report: item.extended_report,\r\n                physical_file_name_mask: item.file_name_mask,\r\n                physical_file_name: item.file_path,\r\n                //physical_installment_report: item.installment_report,\r\n                physical_report_format_id: item.report_format_id,\r\n                physical_report_period_type_id: item.report_period_type_ids,\r\n                physical_report_settings_id: item.report_setting_id,\r\n                //physical_standard_report: item.standard_report,\r\n\r\n                currentTsp: Number(currentTsp),\r\n                TSPReportSettingsSTD: null,\r\n                isShowTypeAcquiring: true,\r\n              });\r\n            } else if (item.acquiring_type_id == 2) {\r\n              console.log(\"item.acquiring_type_id == 2\");\r\n              this.setState({\r\n                internet_acquiring_type_id: item.acquiring_type_id,\r\n                internet_channel_address: item.channel_address,\r\n                internet_channel_type_id: item.channel_type_id,\r\n                internet_file_name: item.file_path,\r\n                //internet_extended_report: item.extended_report,\r\n                internet_file_name_mask: item.file_name_mask,\r\n                //internet_installment_report: item.installment_report,\r\n                internet_report_format_id: item.report_format_id,\r\n                internet_report_period_type_id: item.report_period_type_ids,\r\n                internet_report_settings_id: item.report_setting_id,\r\n                //internet_standard_report: item.standard_report,\r\n\r\n                currentTsp: Number(currentTsp),\r\n                TSPReportSettingsSTD: null,\r\n                isShowTypeAcquiring: true,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n    console.log(\"-----------state---------------\");\r\n    console.log(this.state);\r\n\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    this.setState({\r\n      type_acquiring: Number(typeAcquiring),\r\n    });\r\n  };\r\n  changeTypeAcquiringInternet = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    this.setState({\r\n      report_period_type_id: this.state.settings[0].report_period_type_id,\r\n      report_format_id: this.state.settings[0].report_format_id,\r\n      channel_type_id: this.state.settings[0].channel_type_id,\r\n      file_name_mask: this.state.settings[0].file_name_mask,\r\n\r\n      type_acquiring: Number(typeAcquiring),\r\n      isShowReport: true,\r\n      isDisabledSaveBtn: true,\r\n      physicalEmailMaskError: false,\r\n      internetEmailMaskError: false,\r\n    });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n      TSPReportSettingsSTD: null,\r\n    });\r\n  };\r\n  seveTSPReportSettingsSTD = () => {\r\n    const isDuplicates = () => {\r\n      const numbers = this.state.TSPReportSettingsSTD.map(\r\n        (item) => item.order_number\r\n      ).filter((item) => item !== 0);\r\n      const toFindDuplicates = (arry) =>\r\n        arry.filter((item, index) => arry.indexOf(item) !== index);\r\n      const duplicateElements = toFindDuplicates(numbers);\r\n      return duplicateElements.length > 0;\r\n    };\r\n\r\n    if (isDuplicates()) {\r\n      this.setState({\r\n        isShowOrder_numberError: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowTableTSPReportSettingsSTD: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeSelect = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n    if (name_input == \"physical_acquiring_type_id\")\r\n      this.setState({ physical_acquiring_type_id: Number(inputValue) });\r\n    if (name_input == \"physical_channel_type_id\") {\r\n      this.setState({\r\n        physical_channel_type_id: Number(inputValue),\r\n        physical_channel_address: \"\",\r\n        isDisabledSaveBtn: true,\r\n        physicalEmailMaskError: false,\r\n        internetEmailMaskError: false,\r\n      });\r\n    }\r\n\r\n    if (\r\n      name_input == \"physical_report_period_type_id\" ||\r\n      name_input == \"internet_report_period_type_id\"\r\n    ) {\r\n      let value;\r\n      if (this.state[name_input] === null) {\r\n        this.setState({ [name_input]: `${inputValue}` });\r\n        return;\r\n      }\r\n      if (this.state[name_input].includes(inputValue)) {\r\n        value = this.state[name_input]\r\n          .split(\",\")\r\n          .filter((i) => i != inputValue)\r\n          .join();\r\n      } else {\r\n        value = this.state[name_input] + \",\" + inputValue;\r\n      }\r\n      this.setState({ [name_input]: value });\r\n    }\r\n\r\n    if (name_input == \"physical_report_format_id\")\r\n      this.setState({ physical_report_format_id: Number(inputValue) });\r\n    // if (name_input == \"physical_report_period_type_id\")\r\n    //   this.setState({ physical_report_period_type_id: Number(inputValue) });\r\n\r\n    if (name_input == \"internet_acquiring_type_id\")\r\n      this.setState({ internet_acquiring_type_id: Number(inputValue) });\r\n    if (name_input == \"internet_channel_type_id\") {\r\n      this.setState({\r\n        internet_channel_type_id: Number(inputValue),\r\n        internet_channel_address: \"\",\r\n        isDisabledSaveBtn: true,\r\n        physicalEmailMaskError: false,\r\n        internetEmailMaskError: false,\r\n      });\r\n    }\r\n    if (name_input == \"internet_report_format_id\")\r\n      this.setState({ internet_report_format_id: Number(inputValue) });\r\n    // if (name_input == \"internet_report_period_type_id\")\r\n    //   this.setState({ internet_report_period_type_id: Number(inputValue) });\r\n  };\r\n  changeInputTsp = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    if (name_input == \"physical_channel_address\")\r\n      this.setState({ physical_channel_address: inputValue });\r\n    if (name_input == \"physical_file_name_mask\")\r\n      this.setState({ physical_file_name_mask: inputValue });\r\n\r\n    if (name_input == \"internet_channel_address\")\r\n      this.setState({ internet_channel_address: inputValue });\r\n    if (name_input == \"internet_file_name_mask\")\r\n      this.setState({ internet_file_name_mask: inputValue });\r\n\r\n    if (name_input == \"catalog-physicall\")\r\n      this.setState({ physical_file_name: inputValue });\r\n    if (name_input == \"catalog-internet\")\r\n      this.setState({ internet_file_name: inputValue });\r\n  };\r\n  changeInputTspEmail = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n    if (name_input == \"physical_channel_address\") {\r\n      console.log(/.+@.+\\.[A-Za-z]+$/.test(inputValue));\r\n      if (/.+@.+\\.[A-Za-z]+$/.test(inputValue)) {\r\n        console.log(\"/.+@.+.[A-Za-z]+$/.test(inputValue)\");\r\n        this.setState({\r\n          physicalEmailMaskError: false,\r\n          isDisabledSaveBtn: true,\r\n        });\r\n      } else {\r\n        console.log(\"pfqikj\");\r\n        this.setState({\r\n          physicalEmailMaskError: true,\r\n          isDisabledSaveBtn: false,\r\n        });\r\n      }\r\n      this.setState({ physical_channel_address: inputValue });\r\n    } else if (name_input == \"internet_channel_address\") {\r\n      console.log(/.+@.+\\.[A-Za-z]+$/.test(inputValue));\r\n      if (/.+@.+\\.[A-Za-z]+$/.test(inputValue)) {\r\n        console.log(\"/.+@.+.[A-Za-z]+$/.test(inputValue)\");\r\n        this.setState({\r\n          internetEmailMaskError: false,\r\n          isDisabledSaveBtn: true,\r\n        });\r\n      } else {\r\n        console.log(\"pfqikj\");\r\n        this.setState({\r\n          internetEmailMaskError: true,\r\n          isDisabledSaveBtn: false,\r\n        });\r\n      }\r\n      this.setState({ internet_channel_address: inputValue });\r\n    }\r\n\r\n    // if(name_input == 'internet_channel_address'){\r\n    //     console.log(/.\\.[A-Za-z]+$/.test(inputValue));\r\n    //     if (/.\\.[A-Za-z]+$/.test(inputValue)) {\r\n    //         console.log('/.\\\\.[A-Za-z]+$/.test(inputValue)');\r\n    //         this.setState({\r\n    //             physicalEmailMaskError: false,\r\n    //             isDisabledSaveBtn: true\r\n    //         });\r\n    //     } else {\r\n    //         console.log('pfqikj2');\r\n    //         this.setState({\r\n    //             physicalEmailMaskError: true,\r\n    //             isDisabledSaveBtn: false\r\n    //         });\r\n    //     }\r\n    //     this.setState({internet_channel_address: inputValue});\r\n    // }\r\n  };\r\n  changeInputTspFtp = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n\r\n    if (name_input == \"physical_channel_address\") {\r\n      console.log(inputValue.indexOf(\".\"));\r\n      console.log(inputValue.indexOf(\".\") != -1);\r\n      if (inputValue.indexOf(\".\") != -1) {\r\n        //console.log('/.\\\\.[A-Za-z]+$/.test(inputValue)');\r\n        this.setState({\r\n          physicalEmailMaskError: false,\r\n          isDisabledSaveBtn: true,\r\n        });\r\n      } else {\r\n        console.log(\"pfqikj2\");\r\n        this.setState({\r\n          physicalEmailMaskError: true,\r\n          isDisabledSaveBtn: false,\r\n        });\r\n      }\r\n      this.setState({ physical_channel_address: inputValue });\r\n    } else if (name_input == \"internet_channel_address\") {\r\n      console.log(inputValue.indexOf(\".\"));\r\n      console.log(inputValue.indexOf(\".\") != -1);\r\n      if (inputValue.indexOf(\".\") != -1) {\r\n        //console.log('/.\\\\.[A-Za-z]+$/.test(inputValue)');\r\n        this.setState({\r\n          internetEmailMaskError: false,\r\n          isDisabledSaveBtn: true,\r\n        });\r\n      } else {\r\n        console.log(\"pfqikj2\");\r\n        this.setState({\r\n          internetEmailMaskError: true,\r\n          isDisabledSaveBtn: false,\r\n        });\r\n      }\r\n      this.setState({ internet_channel_address: inputValue });\r\n    }\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n    this.setState({\r\n      name_input: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n\r\n  saveReport = () => {\r\n    let acquiring_type = (type_acquiring) => {\r\n      if (type_acquiring == 1) {\r\n        return {\r\n          acquiring_type_id: 1, //type_acquiring\r\n          // \"standard_report\": true,\r\n          // \"extended_report\": true,\r\n          // \"installment_report\": true,\r\n          report_format_id: this.state.physical_report_format_id, //report_format_id\r\n          report_period_type_ids: this.state.physical_report_period_type_id, //report_format_id\r\n          // \"report_format_name\": \"string\",\r\n          // \"report_period_type_name\": \"string\",\r\n          channel_type_id: this.state.physical_channel_type_id, //channel_type_id\r\n          // \"channel_type_name\": \"string\",\r\n          file_name_mask: this.state.physical_file_name_mask, //file_name_mask\r\n          // \"file_path\": \"string\"\r\n          channel_address: this.state.physical_channel_address, //file_name_mask\r\n\r\n          report_setting_id: this.state.physical_report_settings_id,\r\n          file_path: this.state.physical_file_name,\r\n        };\r\n      } else if (type_acquiring == 2) {\r\n        return {\r\n          acquiring_type_id: 2, //type_acquiring\r\n          // \"standard_report\": true,\r\n          // \"extended_report\": true,\r\n          // \"installment_report\": true,\r\n          report_format_id: this.state.internet_report_format_id, //report_format_id\r\n          report_period_type_ids: this.state.internet_report_period_type_id,\r\n          // \"report_format_name\": \"string\",\r\n          // \"report_period_type_name\": \"string\",\r\n          channel_type_id: this.state.internet_channel_type_id, //channel_type_id\r\n          // \"channel_type_name\": \"string\",\r\n          file_name_mask: this.state.internet_file_name_mask, //file_name_mask\r\n          // \"file_path\": \"string\"\r\n          channel_address: this.state.internet_channel_address, //\r\n\r\n          report_setting_id: this.state.internet_report_settings_id,\r\n          file_path: this.state.internet_file_name,\r\n        };\r\n      }\r\n    };\r\n    let dody = {\r\n      tsp_id: this.state.currentTsp, //tsp_id\r\n      main_settings: acquiring_type(this.state.type_acquiring),\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    console.log(dody);\r\n    this.requestTSPReportSettingsSTD_SAVE(\r\n      this.props.store.userState.token,\r\n      dody\r\n    );\r\n  };\r\n  showHtmlReport = () => {\r\n    console.log(\"this.state.physical_file_name_mask\");\r\n    console.log(this.state.physical_channel_address);\r\n    return (\r\n      <div className=\"\">\r\n        <div className=\"coverBtn border\">\r\n          <div className=\"title\">Вид екварингу</div>\r\n          <button\r\n            className=\"btn btn-primary customBtnAc\"\r\n            disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n            onClick={this.changeTypeAcquiring}\r\n            type_acquiring={1}\r\n          >\r\n            Фізичний\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary customBtnAc\"\r\n            disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n            onClick={this.changeTypeAcquiring}\r\n            type_acquiring={2}\r\n          >\r\n            Інтернет\r\n          </button>\r\n        </div>\r\n\r\n        <div\r\n          className={`${\r\n            this.state.type_acquiring == 1 ? \"\" : \"d-none\"\r\n          } border report`}\r\n        >\r\n          <div className=\"title\">\r\n            Перелік полів звіту ТСП по{\" \"}\r\n            {this.state.type_acquiring == 1 ? \"Фізичному\" : \"Інтернет\"}{\" \"}\r\n            екварингу\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            disabled={this.state.physical_standard_report ? \"\" : \"disabled\"}\r\n            onClick={this.openStandardReport}\r\n          >\r\n            Стандартний звіт\r\n          </button>\r\n          {/* <button\r\n            className=\"btn btn-secondary\"\r\n            disabled={this.state.physical_extended_report ? \"\" : \"disabled\"}\r\n          >\r\n            Розширений звіт\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            disabled={this.state.physical_installment_report ? \"\" : \"disabled\"}\r\n          >\r\n            Звіт по операціям Installment\r\n          </button> */}\r\n          <br />\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"file_format\">Формат файлу</label>\r\n            {this.state.isShowREPORT_FORMAT ? (\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"physical_report_format_id\"\r\n                id=\"DICT_REPORT_FORMAT\"\r\n              >\r\n                {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                  return (\r\n                    <OptionItem\r\n                      key={index}\r\n                      optionItem={item}\r\n                      report_format_id={this.state.physical_report_format_id}\r\n                    />\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <span>Завантаження...</span>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"report_period\">Період звіту</label>\r\n            {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n              <div\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"physical_report_period_type_id\"\r\n                id=\"DICT_REPORT_PERIOD_TYPE\"\r\n              >\r\n                {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                      key={index}\r\n                      optionItem={item}\r\n                      report_period_type_id={\r\n                        this.state.physical_report_period_type_id\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <br />\r\n                <span>Завантаження...</span>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"сhannel\">Канал</label>\r\n            {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"physical_channel_type_id\"\r\n                id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n              >\r\n                {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                      key={index}\r\n                      optionItem={item}\r\n                      channel_type_id={this.state.physical_channel_type_id}\r\n                    />\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <span>Завантаження...</span>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            {this.state.physical_channel_type_id == 1 ? (\r\n              <>\r\n                <input\r\n                  placeholder=\"ftp\"\r\n                  value={this.state.physical_channel_address}\r\n                  onChange={this.changeInputTspFtp}\r\n                  name=\"physical_channel_address\"\r\n                  className={`${\r\n                    this.state.physicalEmailMaskError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  type=\"text\"\r\n                />\r\n                {this.state.physicalEmailMaskError ? (\r\n                  <p>Невалідний ftp</p>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {/*<MaskedInput name=\"physical_channel_address\" label=\"Email\" type=\"email\" placeholder=\"email\" value={this.state.physical_channel_address} onChange={() => this.changeInputTsp} className=\"customInput form-control\"  type=\"text\"/>*/}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  name=\"physical_channel_address\"\r\n                  label=\"Email\"\r\n                  placeholder=\"email@email.com\"\r\n                  value={this.state.physical_channel_address}\r\n                  onChange={this.changeInputTspEmail}\r\n                  className={`${\r\n                    this.state.physicalEmailMaskError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  type=\"text\"\r\n                />\r\n                {this.state.physicalEmailMaskError ? (\r\n                  <p>Невалідний email</p>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {/*<MaskedInput name=\"physical_channel_address\" label=\"Email\" type=\"email\" placeholder=\"email\" value={this.state.physical_channel_address} onChange={() => this.changeInputTsp} className=\"customInput form-control\"  type=\"text\"/>*/}\r\n              </>\r\n            )}\r\n            {/*<input placeholder=\"ftp\" value={this.state.physical_channel_address} onChange={ this.changeInputTsp} name=\"physical_channel_address\" className=\"customInput form-control\"  type=\"text\"/>*/}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"catalog\">Каталог</label>\r\n            <input\r\n              onChange={this.changeInputTsp}\r\n              name=\"catalog-physicall\"\r\n              className=\"customInput form-control\"\r\n              id=\"catalog\"\r\n              type=\"text\"\r\n              value={this.state.physical_file_name}\r\n              disabled={this.state.physical_channel_type_id === 2}\r\n            />\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n            <input\r\n              onChange={this.changeInputTsp}\r\n              name=\"physical_file_name_mask\"\r\n              className=\"customInput form-control\"\r\n              id=\"file_name_mask\"\r\n              type=\"text\"\r\n              value={this.state.physical_file_name_mask}\r\n              disabled={this.state.physical_channel_type_id === 2}\r\n            />\r\n          </div>\r\n\r\n          <br />\r\n          <div className=\"reportCoverBtn\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              disabled={this.state.isDisabledSaveBtn ? \"\" : \"disabled\"}\r\n              onClick={this.saveReport}\r\n            >\r\n              Зберегти\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`${\r\n            this.state.type_acquiring == 1 ? \"d-none\" : \"\"\r\n          } border report`}\r\n        >\r\n          <div className=\"title\">\r\n            Перелік полів звіту ТСП по{\" \"}\r\n            {this.state.type_acquiring == 1 ? \"Фізичному\" : \"Інтернет\"}{\" \"}\r\n            екварингу\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            disabled={this.state.internet_standard_report ? \"\" : \"disabled\"}\r\n            onClick={this.openStandardReport}\r\n          >\r\n            Стандартний звіт\r\n          </button>\r\n          {/* <button\r\n            className=\"btn btn-secondary\"\r\n            disabled={this.state.internet_extended_report ? \"\" : \"disabled\"}\r\n          >\r\n            Розширений звіт\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            disabled={this.state.internet_installment_report ? \"\" : \"disabled\"}\r\n          >\r\n            Звіт по операціям Installment\r\n          </button> */}\r\n          <br />\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"file_format\">Формат файлу</label>\r\n            {this.state.isShowREPORT_FORMAT ? (\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"internet_report_format_id\"\r\n                id=\"DICT_REPORT_FORMAT\"\r\n              >\r\n                {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                  return (\r\n                    <OptionItem\r\n                      key={index}\r\n                      optionItem={item}\r\n                      report_format_id={this.state.internet_report_format_id}\r\n                    />\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <span>Завантаження...</span>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"report_period\">Період звіту</label>\r\n            {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n              <div\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"internet_report_period_type_id\"\r\n                id=\"DICT_REPORT_PERIOD_TYPE\"\r\n              >\r\n                {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                      key={index}\r\n                      optionItem={item}\r\n                      report_period_type_id={\r\n                        this.state.internet_report_period_type_id\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <br />\r\n                <span>Завантаження...</span>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"сhannel\">Канал</label>\r\n            {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"internet_channel_type_id\"\r\n                id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n              >\r\n                {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                      key={index}\r\n                      optionItem={item}\r\n                      channel_type_id={this.state.internet_channel_type_id}\r\n                    />\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <span>Завантаження...</span>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            {this.state.internet_channel_type_id == 1 ? (\r\n              <>\r\n                <input\r\n                  placeholder=\"ftp\"\r\n                  value={this.state.internet_channel_address}\r\n                  onChange={this.changeInputTspFtp}\r\n                  name=\"internet_channel_address\"\r\n                  className={`${\r\n                    this.state.internetEmailMaskError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  type=\"text\"\r\n                />\r\n                {this.state.internetEmailMaskError ? (\r\n                  <p>Невалідний ftp</p>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {/*<MaskedInput name=\"physical_channel_address\" label=\"Email\" type=\"email\" placeholder=\"email\" value={this.state.physical_channel_address} onChange={() => this.changeInputTsp} className=\"customInput form-control\"  type=\"text\"/>*/}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  name=\"internet_channel_address\"\r\n                  label=\"Email\"\r\n                  placeholder=\"email@email.com\"\r\n                  value={this.state.internet_channel_address}\r\n                  onChange={this.changeInputTspEmail}\r\n                  className={`${\r\n                    this.state.internetEmailMaskError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  type=\"text\"\r\n                />\r\n                {this.state.internetEmailMaskError ? (\r\n                  <p>Невалідний email</p>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {/*<MaskedInput name=\"physical_channel_address\" label=\"Email\" type=\"email\" placeholder=\"email\" value={this.state.physical_channel_address} onChange={() => this.changeInputTsp} className=\"customInput form-control\"  type=\"text\"/>*/}\r\n              </>\r\n            )}\r\n            {/*{*/}\r\n            {/*    this.state.internet_channel_type_id == 1*/}\r\n            {/*        ? <input placeholder=\"ftp\" value={this.state.internet_channel_address} onChange={this.changeInputTsp} name=\"internet_channel_address\" className=\"customInput form-control\"  type=\"text\"/>*/}\r\n            {/*        : <input placeholder=\"email\" value={this.state.internet_channel_address} onChange={this.changeInputTsp} name=\"internet_channel_address\" className=\"customInput form-control\"  type=\"text\"/>*/}\r\n            {/*}*/}\r\n\r\n            {/*<input value={this.state.internet_channel_address} onChange={this.changeInputTsp} name=\"internet_channel_address\" className=\"customInput form-control\"  type=\"text\"/>*/}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n            <input\r\n              value={this.state.internet_file_name_mask}\r\n              onChange={this.changeInputTsp}\r\n              name=\"internet_file_name_mask\"\r\n              className=\"customInput form-control\"\r\n              id=\"file_name_mask\"\r\n              type=\"text\"\r\n              disabled={this.state.internet_channel_type_id === 2}\r\n            />\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"сatalog\">Каталог</label>\r\n            <input\r\n              onChange={this.changeInputTsp}\r\n              apiName=\"catalog-internet\"\r\n              className=\"customInput form-control\"\r\n              id=\"сatalog\"\r\n              type=\"text\"\r\n              value={this.state.internet_file_name}\r\n              disabled={this.state.internet_channel_type_id === 2}\r\n            />\r\n          </div>\r\n\r\n          <br />\r\n          <div className=\"reportCoverBtn\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              disabled={this.state.isDisabledSaveBtn ? \"\" : \"disabled\"}\r\n              onClick={this.saveReport}\r\n            >\r\n              Зберегти\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  closePopupOrder_numberError = () => {\r\n    this.setState({\r\n      isShowOrder_numberError: false,\r\n      isShowBootstrapTable: true,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n  addTspName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n    inputDataObj.tsp_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n    console.log(this.state.TSPReportSettingsSearchObj.tsp_name);\r\n  };\r\n  addIdentCode = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n    inputDataObj.ident_code = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n  };\r\n  render() {\r\n    // console.log(this.props.store.menuState.tableData);\r\n    // console.log(this.state.DICT_INSTITUTION);\r\n    // console.log(this.state.DICT_BRANCH);\r\n    console.log(this.state.TSPReportSettingsSTD);\r\n    console.log(this.state);\r\n    //console.log(this.showReport(595999));\r\n    const selectRowProp = {\r\n      mode: \"radio\",\r\n      onSelect: (row, isSelect, rowIndex) => {\r\n        this.setState({\r\n          selectRow: row,\r\n          isDisableButton: false,\r\n        });\r\n      },\r\n    };\r\n    const editInclude_flagColumn = (cell, row, newValue) => {\r\n      const test5 = (e) => {\r\n        //console.log(cell);\r\n        // console.log(row);\r\n        //console.log(oldValue);\r\n        //console.log(newValue);\r\n        //console.log(column);\r\n        //console.log(done);\r\n        // console.log('---');\r\n        //console.log(e);\r\n        let nameRole = e.currentTarget.getAttribute(\"name\");\r\n        //console.log(nameRole);\r\n        let inputValue = e.target.checked;\r\n        //console.log(inputValue);\r\n        //console.log(this.state.TSPReportSettingsSTD);\r\n        //console.log(row);\r\n        let TSPReportSettingsSTD = this.state.TSPReportSettingsSTD;\r\n        row[nameRole] = inputValue;\r\n        let index = TSPReportSettingsSTD.findIndex(\r\n          (el) => el.field_name === row.field_name\r\n        );\r\n        //console.log(row);\r\n\r\n        TSPReportSettingsSTD[index] = row;\r\n        console.log(TSPReportSettingsSTD);\r\n        this.setState({\r\n          TSPReportSettingsSTD: TSPReportSettingsSTD,\r\n        });\r\n      };\r\n      return (\r\n        <>\r\n          <input\r\n            onChange={test5}\r\n            checked={cell}\r\n            name=\"include_flag\"\r\n            type=\"checkbox\"\r\n          />\r\n        </>\r\n      );\r\n    };\r\n\r\n    const editOrder_numberColumn = (cell, row, newValue) => {\r\n      const test5 = (e) => {\r\n        let nameRole = e.currentTarget.getAttribute(\"name\");\r\n        let inputValue = Number(e.target.value);\r\n        let TSPReportSettingsSTD = this.state.TSPReportSettingsSTD;\r\n        let cloneTSPReportSettingsSTD = TSPReportSettingsSTD.map((a) =>\r\n          Object.assign({}, a)\r\n        );\r\n        let indexRow = cloneTSPReportSettingsSTD.findIndex(\r\n          (el) => el.field_name === row.field_name\r\n        );\r\n        let defineOrder_number = (arr, inputValue, indexRow) => {\r\n          let cloneArr = arr.map((a) => Object.assign({}, a));\r\n          cloneArr.splice(indexRow, 1);\r\n          let numberArr = [];\r\n          cloneArr.map((item, index) => {\r\n            numberArr.push(item.order_number);\r\n          });\r\n          return numberArr.indexOf(inputValue) != -1;\r\n        };\r\n\r\n        // if (defineOrder_number(cloneTSPReportSettingsSTD, inputValue, indexRow)) {\r\n        //   this.setState({\r\n        //     isShowOrder_numberError: true,\r\n        //     TSPReportSettingsSTD,\r\n        //   });\r\n        // } else {\r\n        row[nameRole] = inputValue;\r\n        cloneTSPReportSettingsSTD[indexRow] = row;\r\n\r\n        this.setState({\r\n          TSPReportSettingsSTD: cloneTSPReportSettingsSTD,\r\n        });\r\n        // }\r\n      };\r\n      // const rr = (e) => {\r\n      //   if (e.keyCode === 13) {\r\n      //     let nameRole = e.currentTarget.getAttribute(\"name\");\r\n      //     let inputValue = e.target.value;\r\n      //     row[nameRole] = Number(inputValue);\r\n      //     let TSPReportSettingsSTD = this.state.TSPReportSettingsSTD;\r\n      //     TSPReportSettingsSTD[newValue] = row;\r\n      //     this.setState({\r\n      //       TSPReportSettingsSTD: TSPReportSettingsSTD,\r\n      //     });\r\n      //   }\r\n      // };\r\n      return (\r\n        <>\r\n          <input\r\n            onBlur={test5}\r\n            defaultValue={cell}\r\n            name=\"order_number\"\r\n            type=\"text\"\r\n          />\r\n        </>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"coverTable REPORT_SETTINGS_TSP\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter\">\r\n          <div className=\"coverInputSelect\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`form-select ${\r\n                this.state.errorRU ? \"validError\" : null\r\n              }`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n\r\n            <section className={this.state.errorRU ? \"d-block\" : \"d-none \"}>\r\n              <p className=\"text-danger\">{this.state.error_text}</p>\r\n            </section>\r\n\r\n            <label htmlFor=\"TVBV\">ТВБВ</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              apiName=\"bank_branch_id\"\r\n              className=\"form-select\"\r\n              disabled={this.state.isDisableTVBV ? \"disabled\" : \"\"}\r\n              title=\"ТВБВ\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectTVBV ? (\r\n                this.state.DICT_BRANCH.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_BRANCH key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <div className=\"coverInputText\">\r\n            <label htmlFor=\"INN\">ІНН/ЄДРПОУ</label>\r\n            {/*<input onChange={this.changeInput} apiName=\"ident_code\" id=\"INN\" type=\"text\" className=\"form-control\"/>*/}\r\n            <AutocompleteInputIdentCode\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.TSPReportSettingsSearchObj.institution_id\r\n              }\r\n              branch_id={this.state.TSPReportSettingsSearchObj.bank_branch_id}\r\n              addIdentCode={this.addIdentCode}\r\n              ident_code={this.state.TSPReportSettingsSearchObj.ident_code}\r\n            />\r\n            <label htmlFor=\"TPS\">Назва ТСП</label>\r\n            <AutocompleteInputTspName\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.TSPReportSettingsSearchObj.institution_id\r\n              }\r\n              branch_id={this.state.TSPReportSettingsSearchObj.bank_branch_id}\r\n              addTspName={this.addTspName}\r\n              tsp_name={this.state.TSPReportSettingsSearchObj.tsp_id}\r\n            />\r\n            {/*<input onChange={this.changeInput} apiName=\"tsp_name\" id=\"TPS\" type=\"text\" className=\"form-control\"/>*/}\r\n            <label htmlFor=\"merchant\">merchant ID</label>\r\n            <input\r\n              onChange={this.changeInput}\r\n              apiName=\"merchant_id\"\r\n              id=\"merchant\"\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n            />\r\n          </div>\r\n          <div className=\"coverInputDate\">\r\n            <span>Період відкриття ТСП</span>\r\n            <div className=\"coverInputs\">\r\n              <div className=\"coverDate\">\r\n                <label htmlFor=\"date_from\">З</label>\r\n                <input\r\n                  onChange={this.changeInput}\r\n                  apiName=\"date_from\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"date_from\"\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n              <div className=\"coverDate\">\r\n                <label htmlFor=\"date_to\">По</label>\r\n                <input\r\n                  onChange={this.changeInput}\r\n                  apiName=\"date_to\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"date_to\"\r\n                  type=\"date\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <button className=\"search btn btn-primary\" onClick={this.search}>\r\n              Пошук\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"coverResult\">\r\n          <div className=\"resultSearch border\">\r\n            {this.state.isShowTsp ? (\r\n              <>\r\n                <div className=\"title\">Результат пошуку</div>\r\n                <ul className=\"blockTsp_list\">\r\n                  {this.Tsp_list(this.state.tsp_list)}\r\n                </ul>\r\n              </>\r\n            ) : (\r\n              <>Не вибрано даних для пошуку</>\r\n            )}\r\n          </div>\r\n          <div className=\"typeAcquiring\">\r\n            {this.state.isShowTypeAcquiring ? (\r\n              <>{this.showHtmlReport()}</>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.isShowTableTSPReportSettingsSTD ? (\r\n          <>\r\n            <div className=\"coverPopupTable\">\r\n              <div className=\"innerBlock\">\r\n                <button\r\n                  onClick={this.seveTSPReportSettingsSTD}\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-save\"\r\n                >\r\n                  Зберегти\r\n                </button>\r\n                <button\r\n                  onClick={this.closePopupTable}\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n                {this.state.isShowBootstrapTable ? (\r\n                  <BootstrapTable data={this.state.TSPReportSettingsSTD}>\r\n                    <TableHeaderColumn\r\n                      isKey\r\n                      dataField=\"field_desc\"\r\n                      filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                    >\r\n                      Ідентифікатор поля\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn\r\n                      dataField=\"include_flag\"\r\n                      dataFormat={editInclude_flagColumn}\r\n                      filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                    >\r\n                      Включити поле\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn\r\n                      dataField=\"order_number\"\r\n                      dataFormat={editOrder_numberColumn}\r\n                      filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                    >\r\n                      Порядковий номер поля\r\n                    </TableHeaderColumn>\r\n                  </BootstrapTable>\r\n                ) : (\r\n                  <div className=\"coverloader\">\r\n                    <div className=\"loader\"></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">Спробуйте ввести інші дані для пошуку</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Сталася помилка при збереженні\r\n                </div>\r\n                <div className=\"msg\"></div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n        {this.state.isShowPopupDone ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-success\">\r\n                  Налаштування для формування виписки здійснені\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={() => this.setState({ isShowPopupDone: false })}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n\r\n        {this.state.isShowOrder_numberError ? (\r\n          <>\r\n            <div className=\"coverOrder_numberError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Такий порядковий номер вже вибрано\r\n                </div>\r\n                <div className=\"msg\">Введіть інший порядковий номер поля</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupOrder_numberError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_SETTINGS_TSP;\r\n","import { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  console.log(\"props.report_period_type_id: \", props.report_period_type_id);\r\n  return (\r\n    <>\r\n    <label for={props.optionItem.report_period_type_id}>\r\n      <input\r\n        type=\"checkbox\"\r\n        id={props.optionItem.report_period_type_id}\r\n        checked={\r\n          props.report_period_type_id !== null &&\r\n          props.report_period_type_id !== undefined\r\n            ? props.report_period_type_id.includes(\r\n                props.optionItem.report_period_type_id\r\n              )\r\n            : false\r\n        }\r\n        value={props.optionItem.report_period_type_id}\r\n        style={{ margin: \"10px 0\" }}\r\n      />\r\n      {props.optionItem.report_period_type_name}\r\n    </label>\r\n    <br />\r\n    </>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name}\r\n    </div>\r\n  );\r\n};\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"mousedown\", this.clickTest);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    if (this.myRef.current != null) {\r\n      if (this.myRef.current.className != e.target.parentElement.className) {\r\n        this.setState({\r\n          isShowBlockSelect: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть перші три букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTspName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.ident_code}\r\n    </div>\r\n  );\r\n};\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"mousedown\", this.clickTest);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addIdentCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    if (this.myRef.current != null) {\r\n      if (this.myRef.current.className != e.target.parentElement.className) {\r\n        this.setState({\r\n          isShowBlockSelect: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть перші три цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_SETTINGS_NET extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.requestTSPReportSettingsSTD_SAVE =\r\n      this.requestTSPReportSettingsSTD_SAVE.bind(this);\r\n      this.saveReport = this.saveReport.bind(this);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      isDisableButton: false,\r\n      selectRow: null,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      TSPReportSettingsSearchObj: {},\r\n\r\n      settings: null,\r\n      tsp_list: null,\r\n\r\n      isShowTsp: false,\r\n\r\n      currentTsp: null,\r\n\r\n      isShowTypeAcquiring: false,\r\n\r\n      //type_acquiring: 1, 1-фізичний 2-інтернет\r\n      isShowReport: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowREPORT_FORMAT: false,\r\n\r\n      DICT_REPORT_PERIOD_TYPE: null,\r\n      isShowDICT_REPORT_PERIOD_TYPE: false,\r\n\r\n      DICT_REPORT_CHANNEL_TYPE: null,\r\n      isShowDICT_REPORT_CHANNEL_TYPE: false,\r\n\r\n      isShowTableTSPReportSettingsSTD: false,\r\n      TSPReportSettingsSTD: null,\r\n\r\n      errorRU: false,\r\n      error_text: \"Заповніть поле!\",\r\n      DICT_BRAND_VALUES: [],\r\n      DICT_BRAND_NAME_VALUES: [],\r\n      DICT_BRAND_NAME_VAL: null,\r\n      responseTSPReportSettings: {\r\n        tsp_list: [\r\n          {\r\n            tsp_id: 595999,\r\n            tsp_name: \"ТзОВ АПТЕКА-ЖОВТНЕВЕ ЛТД\",\r\n            bank_branch_name: \"Волинське ОУ /303398/\",\r\n            ident_code: \"30297548\",\r\n            merchant_id: 0,\r\n            creation_date: \"2012-05-24T18:55:58\",\r\n          },\r\n          {\r\n            tsp_id: 595998,\r\n            tsp_name: \"ТзОВ Нововолинський м'ясокомбіна\",\r\n            bank_branch_name: \"Волинськеfrfr ОУ /303398/\",\r\n            ident_code: \"30297548\",\r\n            merchant_id: 0,\r\n            creation_date: \"2012-05-24T18:55:58\",\r\n          },\r\n          {\r\n            tsp_id: 595997,\r\n            tsp_name: \"Тов березка на\",\r\n            bank_branch_name: \"Волинськеfrfr ОУ /303398/\",\r\n            ident_code: \"30297548\",\r\n            merchant_id: 0,\r\n            creation_date: \"2012-05-24T18:55:58\",\r\n          },\r\n        ],\r\n        settings: [\r\n          {\r\n            tsp_id: 595999,\r\n            main_settings: [\r\n              {\r\n                acquiring_type_id: 1,\r\n                standard_report: true,\r\n                extended_report: false,\r\n                installment_report: false,\r\n                report_format_id: 2,\r\n                report_format_name: \"csv\",\r\n                report_period_type_ids: null,\r\n                channel_type_id: 2,\r\n                channel_type_name: \"email\",\r\n                channel_address: \"rere@gmail.com\",\r\n                file_name_mask: \"Statement_ЄДРПОУ_період\",\r\n                file_path: \"\",\r\n                report_setting_id: 0,\r\n              },\r\n              {\r\n                report_setting_id: 0,\r\n                acquiring_type_id: 2,\r\n                standard_report: true,\r\n                extended_report: false,\r\n                installment_report: true,\r\n                report_format_id: 1,\r\n                report_format_name: \"xls\",\r\n                report_period_type_ids: null,\r\n                channel_type_id: 2,\r\n                channel_type_name: null,\r\n                channel_address: \"re3re@gmail.com\",\r\n                file_name_mask: \"Statement_ЄДРПОУ_період\",\r\n                file_path: \"\",\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n\r\n      isShowPopupError: false,\r\n      isShowPopupErrorSave: false,\r\n\r\n      currentAcquiring_type_id: null,\r\n\r\n      type_acquiring: 1,\r\n      tsp_id: null,\r\n      report_format_id: null,\r\n      report_period_type_id: null,\r\n      channel_type_id: null,\r\n      file_name_mask: null,\r\n\r\n      physical_acquiring_type_id: 1,\r\n      physical_channel_address: \"\",\r\n      physical_channel_type_id: 1,\r\n      physical_extended_report: false,\r\n      physical_file_name_mask: \"\",\r\n      physical_installment_report: false,\r\n      physical_report_format_id: 1,\r\n      physical_report_period_type_id: 1,\r\n      physical_standard_report: true,\r\n\r\n      internet_acquiring_type_id: 2,\r\n      internet_channel_address: \"\",\r\n      internet_channel_type_id: 1,\r\n      internet_extended_report: false,\r\n      internet_file_name_mask: \"\",\r\n      internet_installment_report: false,\r\n      internet_report_format_id: 1,\r\n      internet_report_period_type_id: 1,\r\n      internet_standard_report: true,\r\n\r\n      internetEmailMaskError: false,\r\n      physicalEmailMaskError: false,\r\n      isDisabledSaveBtn: true,\r\n\r\n      isShowOrder_numberError: false,\r\n      isShowBootstrapTable: true,\r\n\r\n      isShowPopupDone: false,\r\n    };\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n  }\r\n\r\n  async get_DICT_NET_BRAND(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND?param1=&param2=${param}`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data.Table.TableRows);\r\n        //// console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRAND_NAME_VALUES: response.data.Table.TableRows.map(\r\n            (item) => item.brand_name\r\n          ),\r\n          DICT_BRAND_VALUES: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    let param = e.target.value;\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    this.setState({\r\n      isShowSelectTVBV: false,\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n    this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    this.get_DICT_NET_BRAND(this.props.store.userState.token, inputValue);\r\n  };\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowREPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n      });\r\n  }\r\n  async requestDICT_REPORT_CHANNEL_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_CHANNEL_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_CHANNEL_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_CHANNEL_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestTSPReportSettings(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/NetReportSettings`;\r\n\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        response.data.tsp_list = [response.data.brand_settings];\r\n        response.data.record_count = response.data.tsp_list.length;\r\n\r\n        if (response.data.record_count >= 1) {\r\n          if (response.data.brand_settings.main_settings === null) {\r\n            response.data.tsp_list[0].main_settings =\r\n              this.state.responseTSPReportSettings.settings[0].main_settings;\r\n          } else if (response.data.tsp_list[0].main_settings.length === 1) {\r\n            const count =\r\n              response.data.tsp_list[0].main_settings[0].acquiring_type_id === 1\r\n                ? 1\r\n                : 0;\r\n            response.data.tsp_list[0].main_settings.push(\r\n              this.state.responseTSPReportSettings.settings[0].main_settings[\r\n                count\r\n              ]\r\n            );\r\n          }\r\n          console.log(\"response.data.tsp_list[0]: \", response.data.tsp_list[0]);\r\n          this.setState({\r\n            tsp_list: response.data.tsp_list,\r\n            settings: response.data.tsp_list[0].main_settings,\r\n            //tsp_id: response.data.tsp_list[0].tsp_id,\r\n            isShowTsp: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowPopupError: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestTSPReportSettingsSTD(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/NetReportSettings/STD`;\r\n\r\n    let userBody = {\r\n      acquiring_type_id: this.state.type_acquiring,\r\n    };\r\n    userBody.report_setting_id =\r\n      +this.state.type_acquiring === 1\r\n        ? this.state.physical_report_settings_id\r\n        : this.state.internet_report_settings_id;\r\n\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          TSPReportSettingsSTD: response.data.standard_settings,\r\n          isShowTableTSPReportSettingsSTD: true,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  async requestTSPReportSettingsSTD_SAVE(token, dody) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/NetReportSettings`;\r\n\r\n    console.log(dody);\r\n    await axios\r\n      .put(baseUrl, dody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          isShowTsp: false,\r\n          isShowTypeAcquiring: false,\r\n        });\r\n        this.search();\r\n        \r\n        this.props.store.changeLoading(false);\r\n        this.setState({ isShowPopupDone: true });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n        this.setState({\r\n          isShowPopupErrorSave: true,\r\n        });\r\n        // this.props.store.changeLoading(false);\r\n      });\r\n  }\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n\r\n    if (apiName == \"date_from\" || apiName == \"date_to\") {\r\n      inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    } else {\r\n      inputDataObj[apiName] = inputValue;\r\n    }\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(this.state.TSPReportSettingsSearchObj);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.setState({\r\n      errorRU: false,\r\n    });\r\n    if (this.state.isDisableTVBV) {\r\n      this.setState({\r\n        errorRU: true,\r\n      });\r\n      return;\r\n    }\r\n    // main\r\n    console.log(this.state.TSPReportSettingsSearchObj);\r\n    this.requestTSPReportSettings(\r\n      this.props.store.userState.token,\r\n      this.state.TSPReportSettingsSearchObj\r\n    );\r\n\r\n    // let obj = {\r\n    //     date_from: \"20210622\",\r\n    //     date_to: \"20210630\",\r\n    //     institution_id: \"824\"\r\n    // }\r\n    // this.requestTSPReportSettings(this.props.store.userState.token, obj);\r\n\r\n    //this.requestTSPReportSettings_test(this.props.store.userState.token, this.state.TSPReportSettingsSearchObj);\r\n\r\n    // this.setState({\r\n    //     settings: this.state.responseTSPReportSettings.settings,\r\n    //     tsp_list: this.state.responseTSPReportSettings.tsp_list,\r\n    //     isShowTsp: true\r\n    // });\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    //console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      //console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <label for={item.brand_name}>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.brand_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.brand_id}\r\n            />{\" \"}\r\n            {item.brand_name}\r\n          </label>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    //console.log(this.state);\r\n    this.state.tsp_list.map((item, index) => {\r\n      if (+item.brand_id === +currentTsp) {\r\n        this.setState({\r\n          physical_acquiring_type_id: 1,\r\n          physical_channel_address: \"\",\r\n          physical_channel_type_id: 1,\r\n          physical_extended_report: false,\r\n          physical_file_name_mask: \"\",\r\n          physical_installment_report: false,\r\n          physical_report_format_id: 1,\r\n          physical_report_period_type_id: null,\r\n          physical_standard_report: true,\r\n\r\n          internet_acquiring_type_id: 2,\r\n          internet_channel_address: \"\",\r\n          internet_channel_type_id: 1,\r\n          internet_extended_report: false,\r\n          internet_file_name_mask: \"\",\r\n          internet_installment_report: false,\r\n          internet_report_format_id: 1,\r\n          internet_report_period_type_id: null,\r\n          internet_standard_report: true,\r\n\r\n          currentTsp: Number(currentTsp),\r\n          TSPReportSettingsSTD: null,\r\n          isShowTypeAcquiring: true,\r\n        });\r\n        console.log(this.state);\r\n        if (!item.main_settings) {\r\n          this.setState({\r\n            isShowTypeAcquiring: true,\r\n          });\r\n        } else if (item.main_settings) {\r\n          if (item.acquiring_type_id == 1) {\r\n            console.log(\"item.acquiring_type_id == 1\");\r\n            //console.log(item.file_name_mask);\r\n\r\n            if(item.main_settings.channel_address){\r\n              this.setState({\r\n                physical_acquiring_type_id: item.acquiring_type_id,\r\n                physical_channel_address: item.main_settings.channel_address,\r\n                physical_channel_type_id: item.main_settings.channel_type_id,\r\n                //physical_extended_report: item.extended_report,\r\n                physical_file_name_mask: item.main_settings.file_name_mask,\r\n                physical_file_name: item.main_settings.file_path,\r\n                //physical_installment_report: item.installment_report,\r\n                physical_report_format_id: item.main_settings.report_format_id,\r\n                physical_report_period_type_id: item.main_settings.report_period_type_ids,\r\n                physical_report_settings_id: item.main_settings.report_setting_id,\r\n                //physical_standard_report: item.standard_report,\r\n  \r\n                currentTsp: Number(currentTsp),\r\n                TSPReportSettingsSTD: null,\r\n                isShowTypeAcquiring: true,\r\n              });\r\n            }\r\n          } else if (item.acquiring_type_id == 2) {\r\n            console.log(\"item.acquiring_type_id == 2\");\r\n            this.setState({\r\n              internet_acquiring_type_id: item.acquiring_type_id,\r\n              internet_channel_address: item.main_settings.channel_address,\r\n              internet_channel_type_id: item.main_settings.channel_type_id,\r\n              internet_file_name: item.main_settings.file_path,\r\n              //internet_extended_report: item.extended_report,\r\n              internet_file_name_mask: item.main_settings.file_name_mask,\r\n              //internet_installment_report: item.installment_report,\r\n              internet_report_format_id: item.main_settings.report_format_id,\r\n              internet_report_period_type_id:\r\n                item.main_settings.report_period_type_ids,\r\n              internet_report_settings_id: item.main_settings.report_setting_id,\r\n              //internet_standard_report: item.standard_report,\r\n\r\n              currentTsp: Number(currentTsp),\r\n              TSPReportSettingsSTD: null,\r\n              isShowTypeAcquiring: true,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    });\r\n    console.log(\"-----------state---------------\");\r\n    console.log(this.state);\r\n\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    this.setState({\r\n      type_acquiring: Number(typeAcquiring),\r\n    });\r\n  };\r\n  changeTypeAcquiringInternet = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    this.setState({\r\n      report_period_type_id: this.state.settings[0].report_period_type_id,\r\n      report_format_id: this.state.settings[0].report_format_id,\r\n      channel_type_id: this.state.settings[0].channel_type_id,\r\n      file_name_mask: this.state.settings[0].file_name_mask,\r\n\r\n      type_acquiring: Number(typeAcquiring),\r\n      isShowReport: true,\r\n      isDisabledSaveBtn: true,\r\n      physicalEmailMaskError: false,\r\n      internetEmailMaskError: false,\r\n    });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n      TSPReportSettingsSTD: null,\r\n    });\r\n  };\r\n  seveTSPReportSettingsSTD = () => {\r\n    const isDuplicates = () => {\r\n      const numbers = this.state.TSPReportSettingsSTD.map(\r\n        (item) => item.order_number\r\n      ).filter((item) => item !== 0);\r\n      const toFindDuplicates = (arry) =>\r\n        arry.filter((item, index) => arry.indexOf(item) !== index);\r\n      const duplicateElements = toFindDuplicates(numbers);\r\n      return duplicateElements.length > 0;\r\n    };\r\n\r\n    if (isDuplicates()) {\r\n      this.setState({\r\n        isShowOrder_numberError: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowTableTSPReportSettingsSTD: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeSelect = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n    console.log(\"this.state[name_input]\",this.state[name_input])\r\n    if (name_input == \"physical_acquiring_type_id\")\r\n      this.setState({ physical_acquiring_type_id: Number(inputValue) });\r\n    if (name_input == \"physical_channel_type_id\") {\r\n      this.setState({\r\n        physical_channel_type_id: Number(inputValue),\r\n        physical_channel_address: \"\",\r\n        isDisabledSaveBtn: true,\r\n        physicalEmailMaskError: false,\r\n        internetEmailMaskError: false,\r\n      });\r\n    }\r\n\r\n    if (\r\n      name_input == \"physical_report_period_type_id\" ||\r\n      name_input == \"internet_report_period_type_id\"\r\n    ) {\r\n      let value;\r\n      if (\r\n        this.state[name_input] === null ||\r\n        this.state[name_input] === undefined\r\n      ) {\r\n        this.setState({ physical_report_period_type_id: `${inputValue}` });\r\n        console.log(\"inputValue\", inputValue)\r\n        return;\r\n      }\r\n      if (this.state[name_input].includes(inputValue)) {\r\n        value = this.state[name_input]\r\n          .split(\",\")\r\n          .filter((i) => i != inputValue)\r\n          .join();\r\n      } else {\r\n        value = this.state[name_input] + \",\" + inputValue;\r\n      }\r\n      this.setState({ [name_input]: value });\r\n    }\r\n\r\n    if (name_input == \"physical_report_format_id\")\r\n      this.setState({ physical_report_format_id: Number(inputValue) });\r\n    // if (name_input == \"physical_report_period_type_id\")\r\n    //   this.setState({ physical_report_period_type_id: Number(inputValue) });\r\n\r\n    if (name_input == \"internet_acquiring_type_id\")\r\n      this.setState({ internet_acquiring_type_id: Number(inputValue) });\r\n    if (name_input == \"internet_channel_type_id\") {\r\n      this.setState({\r\n        internet_channel_type_id: Number(inputValue),\r\n        internet_channel_address: \"\",\r\n        isDisabledSaveBtn: true,\r\n        physicalEmailMaskError: false,\r\n        internetEmailMaskError: false,\r\n      });\r\n    }\r\n    if (name_input == \"internet_report_format_id\")\r\n      this.setState({ internet_report_format_id: Number(inputValue) });\r\n    // if (name_input == \"internet_report_period_type_id\")\r\n    //   this.setState({ internet_report_period_type_id: Number(inputValue) });\r\n  };\r\n  changeInputTsp = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    if (name_input == \"physical_channel_address\")\r\n      this.setState({ physical_channel_address: inputValue });\r\n    if (name_input == \"physical_file_name_mask\")\r\n      this.setState({ physical_file_name_mask: inputValue });\r\n\r\n    if (name_input == \"internet_channel_address\")\r\n      this.setState({ internet_channel_address: inputValue });\r\n    if (name_input == \"internet_file_name_mask\")\r\n      this.setState({ internet_file_name_mask: inputValue });\r\n\r\n    if (name_input == \"catalog-physicall\")\r\n      this.setState({ physical_file_name: inputValue });\r\n    if (name_input == \"catalog-internet\")\r\n      this.setState({ internet_file_name: inputValue });\r\n  };\r\n  changeInputTspEmail = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n    if (name_input == \"physical_channel_address\") {\r\n      console.log(/.+@.+\\.[A-Za-z]+$/.test(inputValue));\r\n      if (/.+@.+\\.[A-Za-z]+$/.test(inputValue)) {\r\n        console.log(\"/.+@.+.[A-Za-z]+$/.test(inputValue)\");\r\n        this.setState({\r\n          physicalEmailMaskError: false,\r\n          isDisabledSaveBtn: true,\r\n        });\r\n      } else {\r\n        console.log(\"pfqikj\");\r\n        this.setState({\r\n          physicalEmailMaskError: true,\r\n          isDisabledSaveBtn: false,\r\n        });\r\n      }\r\n      this.setState({ physical_channel_address: inputValue });\r\n    } else if (name_input == \"internet_channel_address\") {\r\n      console.log(/.+@.+\\.[A-Za-z]+$/.test(inputValue));\r\n      if (/.+@.+\\.[A-Za-z]+$/.test(inputValue)) {\r\n        console.log(\"/.+@.+.[A-Za-z]+$/.test(inputValue)\");\r\n        this.setState({\r\n          internetEmailMaskError: false,\r\n          isDisabledSaveBtn: true,\r\n        });\r\n      } else {\r\n        console.log(\"pfqikj\");\r\n        this.setState({\r\n          internetEmailMaskError: true,\r\n          isDisabledSaveBtn: false,\r\n        });\r\n      }\r\n      this.setState({ internet_channel_address: inputValue });\r\n    }\r\n\r\n    // if(name_input == 'internet_channel_address'){\r\n    //     console.log(/.\\.[A-Za-z]+$/.test(inputValue));\r\n    //     if (/.\\.[A-Za-z]+$/.test(inputValue)) {\r\n    //         console.log('/.\\\\.[A-Za-z]+$/.test(inputValue)');\r\n    //         this.setState({\r\n    //             physicalEmailMaskError: false,\r\n    //             isDisabledSaveBtn: true\r\n    //         });\r\n    //     } else {\r\n    //         console.log('pfqikj2');\r\n    //         this.setState({\r\n    //             physicalEmailMaskError: true,\r\n    //             isDisabledSaveBtn: false\r\n    //         });\r\n    //     }\r\n    //     this.setState({internet_channel_address: inputValue});\r\n    // }\r\n  };\r\n  changeInputTspFtp = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n\r\n    if (name_input == \"physical_channel_address\") {\r\n      console.log(inputValue.indexOf(\".\"));\r\n      console.log(inputValue.indexOf(\".\") != -1);\r\n      if (inputValue.indexOf(\".\") != -1) {\r\n        //console.log('/.\\\\.[A-Za-z]+$/.test(inputValue)');\r\n        this.setState({\r\n          physicalEmailMaskError: false,\r\n          isDisabledSaveBtn: true,\r\n        });\r\n      } else {\r\n        console.log(\"pfqikj2\");\r\n        this.setState({\r\n          physicalEmailMaskError: true,\r\n          isDisabledSaveBtn: false,\r\n        });\r\n      }\r\n      this.setState({ physical_channel_address: inputValue });\r\n    } else if (name_input == \"internet_channel_address\") {\r\n      console.log(inputValue.indexOf(\".\"));\r\n      console.log(inputValue.indexOf(\".\") != -1);\r\n      if (inputValue.indexOf(\".\") != -1) {\r\n        //console.log('/.\\\\.[A-Za-z]+$/.test(inputValue)');\r\n        this.setState({\r\n          internetEmailMaskError: false,\r\n          isDisabledSaveBtn: true,\r\n        });\r\n      } else {\r\n        console.log(\"pfqikj2\");\r\n        this.setState({\r\n          internetEmailMaskError: true,\r\n          isDisabledSaveBtn: false,\r\n        });\r\n      }\r\n      this.setState({ internet_channel_address: inputValue });\r\n    }\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let name_input = e.currentTarget.getAttribute(\"name\");\r\n    let inputValue = e.target.value;\r\n    console.log(name_input);\r\n    console.log(inputValue);\r\n    this.setState({\r\n      name_input: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n\r\n  saveReport = () => {\r\n    let acquiring_type = (type_acquiring) => {\r\n      console.log(\"acquiring_type: \", this.state)\r\n      if (type_acquiring == 1) {\r\n        return {\r\n          acquiring_type_id: 1, //type_acquiring\r\n          // \"standard_report\": true,\r\n          // \"extended_report\": true,\r\n          // \"installment_report\": true,\r\n          report_format_id: this.state.physical_report_format_id===0?1 : this.state.physical_report_format_id, //report_format_id\r\n          report_period_type_ids: this.state.physical_report_period_type_id, //report_format_id\r\n          // \"report_format_name\": \"string\",\r\n          // \"report_period_type_name\": \"string\",\r\n          channel_type_id: this.state.physical_channel_type_id, //channel_type_id\r\n          // \"channel_type_name\": \"string\",\r\n          file_name_mask: this.state.physical_file_name_mask, //file_name_mask\r\n          // \"file_path\": \"string\"\r\n          channel_address: this.state.physical_channel_address, //file_name_mask\r\n\r\n          report_setting_id: this.state.physical_report_settings_id,\r\n          file_path: this.state.physical_file_name,\r\n        };\r\n      } else if (type_acquiring == 2) {\r\n        return {\r\n          acquiring_type_id: 2, //type_acquiring\r\n          // \"standard_report\": true,\r\n          // \"extended_report\": true,\r\n          // \"installment_report\": true,\r\n          report_format_id: this.state.internet_report_format_id, //report_format_id\r\n          report_period_type_ids: this.state.internet_report_period_type_id,\r\n          // \"report_format_name\": \"string\",\r\n          // \"report_period_type_name\": \"string\",\r\n          channel_type_id: this.state.internet_channel_type_id, //channel_type_id\r\n          // \"channel_type_name\": \"string\",\r\n          file_name_mask: this.state.internet_file_name_mask, //file_name_mask\r\n          // \"file_path\": \"string\"\r\n          channel_address: this.state.internet_channel_address, //\r\n\r\n          report_setting_id: this.state.internet_report_settings_id,\r\n          file_path: this.state.internet_file_name,\r\n        };\r\n      }\r\n    };\r\n\r\n    const acquiring = acquiring_type.bind(this);\r\n    let data = {\r\n      brand_id: this.state.currentTsp, //tsp_id\r\n      main_settings: acquiring(this.state.type_acquiring),\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      data.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    this.requestTSPReportSettingsSTD_SAVE(\r\n      this.props.store.userState.token,\r\n      data\r\n    );\r\n  };\r\n  showHtmlReport = () => {\r\n    console.log(\"this.state.physical_file_name_mask\");\r\n    console.log(this.state.physical_channel_address);\r\n    return (\r\n      <div className=\"\">\r\n        {/* <div className=\"coverBtn border\">\r\n          <div className=\"title\">Вид екварингу</div>\r\n          <button\r\n            className=\"btn btn-primary customBtnAc\"\r\n            disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n            onClick={this.changeTypeAcquiring}\r\n            type_acquiring={1}\r\n          >\r\n            Фізичний\r\n          </button>\r\n          <button\r\n            className=\"btn btn-primary customBtnAc\"\r\n            disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n            onClick={this.changeTypeAcquiring}\r\n            type_acquiring={2}\r\n          >\r\n            Інтернет\r\n          </button>\r\n        </div> */}\r\n\r\n        <div\r\n          className={`${\r\n            this.state.type_acquiring == 1 ? \"\" : \"d-none\"\r\n          } border report`}\r\n        >\r\n          <div className=\"title\">\r\n            Перелік полів звіту ТСП по{\" \"}\r\n            {this.state.type_acquiring == 1 ? \"Фізичному\" : \"Інтернет\"}{\" \"}\r\n            екварингу\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            disabled={this.state.physical_standard_report ? \"\" : \"disabled\"}\r\n            onClick={this.openStandardReport}\r\n          >\r\n            Стандартний звіт\r\n          </button>\r\n          {/* <button\r\n            className=\"btn btn-secondary\"\r\n            disabled={this.state.physical_extended_report ? \"\" : \"disabled\"}\r\n          >\r\n            Розширений звіт\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            disabled={this.state.physical_installment_report ? \"\" : \"disabled\"}\r\n          >\r\n            Звіт по операціям Installment\r\n          </button> */}\r\n          <br />\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"file_format\">Формат файлу</label>\r\n            {this.state.isShowREPORT_FORMAT ? (\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"physical_report_format_id\"\r\n                id=\"DICT_REPORT_FORMAT\"\r\n              >\r\n                {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                  return (\r\n                    <OptionItem\r\n                      key={index}\r\n                      optionItem={item}\r\n                      report_format_id={this.state.physical_report_format_id}\r\n                    />\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <span>Завантаження...</span>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"report_period\">Період звіту</label>\r\n            {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n              <div\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"physical_report_period_type_id\"\r\n                id=\"DICT_REPORT_PERIOD_TYPE\"\r\n              >\r\n                {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                      key={index}\r\n                      optionItem={item}\r\n                      report_period_type_id={\r\n                        this.state.physical_report_period_type_id\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <br />\r\n                <span>Завантаження...</span>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"сhannel\">Канал</label>\r\n            {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"physical_channel_type_id\"\r\n                id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n              >\r\n                {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                      key={index}\r\n                      optionItem={item}\r\n                      channel_type_id={this.state.physical_channel_type_id}\r\n                    />\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <span>Завантаження...</span>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            {this.state.physical_channel_type_id == 1 ? (\r\n              <>\r\n                <input\r\n                  placeholder=\"ftp\"\r\n                  value={this.state.physical_channel_address}\r\n                  onChange={this.changeInputTspFtp}\r\n                  name=\"physical_channel_address\"\r\n                  className={`${\r\n                    this.state.physicalEmailMaskError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  type=\"text\"\r\n                />\r\n                {this.state.physicalEmailMaskError ? (\r\n                  <p>Невалідний ftp</p>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {/*<MaskedInput name=\"physical_channel_address\" label=\"Email\" type=\"email\" placeholder=\"email\" value={this.state.physical_channel_address} onChange={() => this.changeInputTsp} className=\"customInput form-control\"  type=\"text\"/>*/}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  name=\"physical_channel_address\"\r\n                  label=\"Email\"\r\n                  placeholder=\"email@email.com\"\r\n                  value={this.state.physical_channel_address}\r\n                  onChange={this.changeInputTspEmail}\r\n                  className={`${\r\n                    this.state.physicalEmailMaskError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  type=\"text\"\r\n                />\r\n                {this.state.physicalEmailMaskError ? (\r\n                  <p>Невалідний email</p>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {/*<MaskedInput name=\"physical_channel_address\" label=\"Email\" type=\"email\" placeholder=\"email\" value={this.state.physical_channel_address} onChange={() => this.changeInputTsp} className=\"customInput form-control\"  type=\"text\"/>*/}\r\n              </>\r\n            )}\r\n            {/*<input placeholder=\"ftp\" value={this.state.physical_channel_address} onChange={ this.changeInputTsp} name=\"physical_channel_address\" className=\"customInput form-control\"  type=\"text\"/>*/}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"catalog\">Каталог</label>\r\n            <input\r\n              onChange={this.changeInputTsp}\r\n              name=\"catalog-physicall\"\r\n              className=\"customInput form-control\"\r\n              id=\"catalog\"\r\n              type=\"text\"\r\n              value={this.state.physical_file_name}\r\n              disabled={this.state.physical_channel_type_id === 2}\r\n            />\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n            <input\r\n              onChange={this.changeInputTsp}\r\n              name=\"physical_file_name_mask\"\r\n              className=\"customInput form-control\"\r\n              id=\"file_name_mask\"\r\n              type=\"text\"\r\n              value={this.state.physical_file_name_mask}\r\n              disabled={this.state.physical_channel_type_id === 2}\r\n            />\r\n          </div>\r\n\r\n          <br />\r\n          <div className=\"reportCoverBtn\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              disabled={this.state.isDisabledSaveBtn ? \"\" : \"disabled\"}\r\n              onClick={this.saveReport}\r\n            >\r\n              Зберегти\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className={`${\r\n            this.state.type_acquiring == 1 ? \"d-none\" : \"\"\r\n          } border report`}\r\n        >\r\n          <div className=\"title\">\r\n            Перелік полів звіту ТСП по{\" \"}\r\n            {this.state.type_acquiring == 1 ? \"Фізичному\" : \"Інтернет\"}{\" \"}\r\n            екварингу\r\n          </div>\r\n\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            disabled={this.state.internet_standard_report ? \"\" : \"disabled\"}\r\n            onClick={this.openStandardReport}\r\n          >\r\n            Стандартний звіт\r\n          </button>\r\n          {/* <button\r\n            className=\"btn btn-secondary\"\r\n            disabled={this.state.internet_extended_report ? \"\" : \"disabled\"}\r\n          >\r\n            Розширений звіт\r\n          </button>\r\n          <button\r\n            className=\"btn btn-secondary\"\r\n            disabled={this.state.internet_installment_report ? \"\" : \"disabled\"}\r\n          >\r\n            Звіт по операціям Installment\r\n          </button> */}\r\n          <br />\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"file_format\">Формат файлу</label>\r\n            {this.state.isShowREPORT_FORMAT ? (\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"internet_report_format_id\"\r\n                id=\"DICT_REPORT_FORMAT\"\r\n              >\r\n                {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                  return (\r\n                    <OptionItem\r\n                      key={index}\r\n                      optionItem={item}\r\n                      report_format_id={this.state.internet_report_format_id}\r\n                    />\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <span>Завантаження...</span>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"report_period\">Період звіту</label>\r\n            {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n              <div\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"internet_report_period_type_id\"\r\n                id=\"DICT_REPORT_PERIOD_TYPE\"\r\n              >\r\n                {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                      key={index}\r\n                      optionItem={item}\r\n                      report_period_type_id={\r\n                        this.state.internet_report_period_type_id\r\n                      }\r\n                    />\r\n                  );\r\n                })}\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <br />\r\n                <span>Завантаження...</span>\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"сhannel\">Канал</label>\r\n            {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n              <select\r\n                className=\"form-select\"\r\n                onChange={this.changeSelect}\r\n                name=\"internet_channel_type_id\"\r\n                id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n              >\r\n                {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                      key={index}\r\n                      optionItem={item}\r\n                      channel_type_id={this.state.internet_channel_type_id}\r\n                    />\r\n                  );\r\n                })}\r\n              </select>\r\n            ) : (\r\n              <span>Завантаження...</span>\r\n            )}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            {this.state.internet_channel_type_id == 1 ? (\r\n              <>\r\n                <input\r\n                  placeholder=\"ftp\"\r\n                  value={this.state.internet_channel_address}\r\n                  onChange={this.changeInputTspFtp}\r\n                  name=\"internet_channel_address\"\r\n                  className={`${\r\n                    this.state.internetEmailMaskError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  type=\"text\"\r\n                />\r\n                {this.state.internetEmailMaskError ? (\r\n                  <p>Невалідний ftp</p>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {/*<MaskedInput name=\"physical_channel_address\" label=\"Email\" type=\"email\" placeholder=\"email\" value={this.state.physical_channel_address} onChange={() => this.changeInputTsp} className=\"customInput form-control\"  type=\"text\"/>*/}\r\n              </>\r\n            ) : (\r\n              <>\r\n                <input\r\n                  name=\"internet_channel_address\"\r\n                  label=\"Email\"\r\n                  placeholder=\"email@email.com\"\r\n                  value={this.state.internet_channel_address}\r\n                  onChange={this.changeInputTspEmail}\r\n                  className={`${\r\n                    this.state.internetEmailMaskError ? \"errorEmail\" : \"\"\r\n                  } customInput form-control`}\r\n                  type=\"text\"\r\n                />\r\n                {this.state.internetEmailMaskError ? (\r\n                  <p>Невалідний email</p>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n                {/*<MaskedInput name=\"physical_channel_address\" label=\"Email\" type=\"email\" placeholder=\"email\" value={this.state.physical_channel_address} onChange={() => this.changeInputTsp} className=\"customInput form-control\"  type=\"text\"/>*/}\r\n              </>\r\n            )}\r\n            {/*{*/}\r\n            {/*    this.state.internet_channel_type_id == 1*/}\r\n            {/*        ? <input placeholder=\"ftp\" value={this.state.internet_channel_address} onChange={this.changeInputTsp} name=\"internet_channel_address\" className=\"customInput form-control\"  type=\"text\"/>*/}\r\n            {/*        : <input placeholder=\"email\" value={this.state.internet_channel_address} onChange={this.changeInputTsp} name=\"internet_channel_address\" className=\"customInput form-control\"  type=\"text\"/>*/}\r\n            {/*}*/}\r\n\r\n            {/*<input value={this.state.internet_channel_address} onChange={this.changeInputTsp} name=\"internet_channel_address\" className=\"customInput form-control\"  type=\"text\"/>*/}\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n            <input\r\n              value={this.state.internet_file_name_mask}\r\n              onChange={this.changeInputTsp}\r\n              name=\"internet_file_name_mask\"\r\n              className=\"customInput form-control\"\r\n              id=\"file_name_mask\"\r\n              type=\"text\"\r\n              disabled={this.state.internet_channel_type_id === 2}\r\n            />\r\n          </div>\r\n          <div className=\"coverInput\">\r\n            <label htmlFor=\"сatalog\">Каталог</label>\r\n            <input\r\n              onChange={this.changeInputTsp}\r\n              apiName=\"catalog-internet\"\r\n              className=\"customInput form-control\"\r\n              id=\"сatalog\"\r\n              type=\"text\"\r\n              value={this.state.internet_file_name}\r\n              disabled={this.state.internet_channel_type_id === 2}\r\n            />\r\n          </div>\r\n\r\n          <br />\r\n          <div className=\"reportCoverBtn\">\r\n            <button\r\n              className=\"btn btn-primary\"\r\n              disabled={this.state.isDisabledSaveBtn ? \"\" : \"disabled\"}\r\n              onClick={this.saveReport}\r\n            >\r\n              Зберегти\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  closePopupOrder_numberError = () => {\r\n    this.setState({\r\n      isShowOrder_numberError: false,\r\n      isShowBootstrapTable: true,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n  addTspName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n    inputDataObj.tsp_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n    console.log(this.state.TSPReportSettingsSearchObj.tsp_name);\r\n  };\r\n  addIdentCode = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.TSPReportSettingsSearchObj;\r\n    inputDataObj.ident_code = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      TSPReportSettingsSearchObj: inputDataObj,\r\n    });\r\n  };\r\n  render() {\r\n    // console.log(this.props.store.menuState.tableData);\r\n    // console.log(this.state.DICT_INSTITUTION);\r\n    // console.log(this.state.DICT_BRANCH);\r\n    console.log(this.state.TSPReportSettingsSTD);\r\n    console.log(this.state);\r\n    //console.log(this.showReport(595999));\r\n    const selectRowProp = {\r\n      mode: \"radio\",\r\n      onSelect: (row, isSelect, rowIndex) => {\r\n        this.setState({\r\n          selectRow: row,\r\n          isDisableButton: false,\r\n        });\r\n      },\r\n    };\r\n    const editInclude_flagColumn = (cell, row, newValue) => {\r\n      const test5 = (e) => {\r\n        //console.log(cell);\r\n        // console.log(row);\r\n        //console.log(oldValue);\r\n        //console.log(newValue);\r\n        //console.log(column);\r\n        //console.log(done);\r\n        // console.log('---');\r\n        //console.log(e);\r\n        let nameRole = e.currentTarget.getAttribute(\"name\");\r\n        //console.log(nameRole);\r\n        let inputValue = e.target.checked;\r\n        //console.log(inputValue);\r\n        //console.log(this.state.TSPReportSettingsSTD);\r\n        //console.log(row);\r\n        let TSPReportSettingsSTD = this.state.TSPReportSettingsSTD;\r\n        row[nameRole] = inputValue;\r\n        let index = TSPReportSettingsSTD.findIndex(\r\n          (el) => el.field_name === row.field_name\r\n        );\r\n        //console.log(row);\r\n\r\n        TSPReportSettingsSTD[index] = row;\r\n        console.log(TSPReportSettingsSTD);\r\n        this.setState({\r\n          TSPReportSettingsSTD: TSPReportSettingsSTD,\r\n        });\r\n      };\r\n      return (\r\n        <>\r\n          <input\r\n            onChange={test5}\r\n            checked={cell}\r\n            name=\"include_flag\"\r\n            type=\"checkbox\"\r\n          />\r\n        </>\r\n      );\r\n    };\r\n\r\n    const editOrder_numberColumn = (cell, row, newValue) => {\r\n      const test5 = (e) => {\r\n        let nameRole = e.currentTarget.getAttribute(\"name\");\r\n        let inputValue = Number(e.target.value);\r\n        let TSPReportSettingsSTD = this.state.TSPReportSettingsSTD;\r\n        let cloneTSPReportSettingsSTD = TSPReportSettingsSTD.map((a) =>\r\n          Object.assign({}, a)\r\n        );\r\n        let indexRow = cloneTSPReportSettingsSTD.findIndex(\r\n          (el) => el.field_name === row.field_name\r\n        );\r\n        let defineOrder_number = (arr, inputValue, indexRow) => {\r\n          let cloneArr = arr.map((a) => Object.assign({}, a));\r\n          cloneArr.splice(indexRow, 1);\r\n          let numberArr = [];\r\n          cloneArr.map((item, index) => {\r\n            numberArr.push(item.order_number);\r\n          });\r\n          return numberArr.indexOf(inputValue) != -1;\r\n        };\r\n\r\n        // if (defineOrder_number(cloneTSPReportSettingsSTD, inputValue, indexRow)) {\r\n        //   this.setState({\r\n        //     isShowOrder_numberError: true,\r\n        //     TSPReportSettingsSTD,\r\n        //   });\r\n        // } else {\r\n        row[nameRole] = inputValue;\r\n        cloneTSPReportSettingsSTD[indexRow] = row;\r\n\r\n        this.setState({\r\n          TSPReportSettingsSTD: cloneTSPReportSettingsSTD,\r\n        });\r\n        // }\r\n      };\r\n      // const rr = (e) => {\r\n      //   if (e.keyCode === 13) {\r\n      //     let nameRole = e.currentTarget.getAttribute(\"name\");\r\n      //     let inputValue = e.target.value;\r\n      //     row[nameRole] = Number(inputValue);\r\n      //     let TSPReportSettingsSTD = this.state.TSPReportSettingsSTD;\r\n      //     TSPReportSettingsSTD[newValue] = row;\r\n      //     this.setState({\r\n      //       TSPReportSettingsSTD: TSPReportSettingsSTD,\r\n      //     });\r\n      //   }\r\n      // };\r\n      return (\r\n        <>\r\n          <input\r\n            onBlur={test5}\r\n            defaultValue={cell}\r\n            name=\"order_number\"\r\n            type=\"text\"\r\n          />\r\n        </>\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div className=\"coverTable REPORT_SETTINGS_TSP\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter\">\r\n          <div className=\"coverInputSelect\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`form-select ${\r\n                this.state.errorRU ? \"validError\" : null\r\n              }`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n\r\n            <section className={this.state.errorRU ? \"d-block\" : \"d-none \"}>\r\n              <p className=\"text-danger\">{this.state.error_text}</p>\r\n            </section>\r\n\r\n            {/* <label htmlFor=\"TVBV\">ТВБВ</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              apiName=\"bank_branch_id\"\r\n              className=\"form-select\"\r\n              disabled={this.state.isDisableTVBV ? \"disabled\" : \"\"}\r\n              title=\"ТВБВ\"\r\n            >\r\n              <option>-</option>\r\n              {this.state.isShowSelectTVBV ? (\r\n                this.state.DICT_BRANCH.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_BRANCH key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select> */}\r\n\r\n            <label htmlFor=\"tsp_id\">Назва Мережі</label>\r\n            <Typeahead\r\n              id=\"basic-typeahead-single\"\r\n              labelKey=\"name\"\r\n              onChange={(val) => {\r\n                this.setState({\r\n                  DICT_BRAND_NAME_VAL: val,\r\n                });\r\n              }}\r\n              options={this.state.DICT_BRAND_NAME_VALUES}\r\n              placeholder=\"Почніть вводити назву\"\r\n              selected={this.state.DICT_BRAND_NAME_VAL}\r\n              onBlur={() => {\r\n                this.setState({\r\n                  TSPReportSettingsSearchObj: {\r\n                    ...this.state.TSPReportSettingsSearchObj,\r\n                    brand_id: this.state.DICT_BRAND_NAME_VAL\r\n                      ? this.state.DICT_BRAND_VALUES.filter(\r\n                          (i) =>\r\n                            i.brand_name === this.state.DICT_BRAND_NAME_VAL[0]\r\n                        )[0].brand_id\r\n                      : null,\r\n                  },\r\n                });\r\n                // this.get_DICT_BRAND_NAME_LEVEL\r\n              }}\r\n              className={`${\r\n                this.state.isBrandName_toValidation ? \"\" : \"validError\"\r\n              }`}\r\n            />\r\n            <button className=\"search btn btn-primary\" onClick={this.search}>\r\n              Пошук\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"coverResult\">\r\n          <div className=\"resultSearch border\">\r\n            {this.state.isShowTsp ? (\r\n              <>\r\n                <div className=\"title\">Результат пошуку</div>\r\n                <ul className=\"blockTsp_list\">\r\n                  {this.Tsp_list(this.state.tsp_list)}\r\n                </ul>\r\n              </>\r\n            ) : (\r\n              <>Не вибрано даних для пошуку</>\r\n            )}\r\n          </div>\r\n          <div className=\"typeAcquiring\">\r\n            {this.state.isShowTypeAcquiring ? (\r\n              <>{this.showHtmlReport()}</>\r\n            ) : null}\r\n          </div>\r\n        </div>\r\n\r\n        {this.state.isShowTableTSPReportSettingsSTD ? (\r\n          <>\r\n            <div className=\"coverPopupTable\">\r\n              <div className=\"innerBlock\">\r\n                <button\r\n                  onClick={this.seveTSPReportSettingsSTD}\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary btn-save\"\r\n                >\r\n                  Зберегти\r\n                </button>\r\n                <button\r\n                  onClick={this.closePopupTable}\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n                {this.state.isShowBootstrapTable ? (\r\n                  <BootstrapTable data={this.state.TSPReportSettingsSTD}>\r\n                    <TableHeaderColumn\r\n                      isKey\r\n                      dataField=\"field_desc\"\r\n                      filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                    >\r\n                      Ідентифікатор поля\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn\r\n                      dataField=\"include_flag\"\r\n                      dataFormat={editInclude_flagColumn}\r\n                      filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                    >\r\n                      Включити поле\r\n                    </TableHeaderColumn>\r\n                    <TableHeaderColumn\r\n                      dataField=\"order_number\"\r\n                      dataFormat={editOrder_numberColumn}\r\n                      filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                    >\r\n                      Порядковий номер поля\r\n                    </TableHeaderColumn>\r\n                  </BootstrapTable>\r\n                ) : (\r\n                  <div className=\"coverloader\">\r\n                    <div className=\"loader\"></div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">Спробуйте ввести інші дані для пошуку</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n        {this.state.isShowPopupDone ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-success\">\r\n                Налаштування для формування виписки здійснені\r\n                </div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={()=>this.setState({isShowPopupDone: false})}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <div className=\"coverPopupError\">\r\n            <div className=\"innerBlock\">\r\n              <div className=\"title alert alert-primary\">\r\n                Сталася помилка при збереженні\r\n              </div>\r\n              <div className=\"msg\"></div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.closePopupErrorSave}\r\n              >\r\n                Закрити\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n\r\n        {this.state.isShowOrder_numberError ? (\r\n          <>\r\n            <div className=\"coverOrder_numberError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Такий порядковий номер вже вибрано\r\n                </div>\r\n                <div className=\"msg\">Введіть інший порядковий номер поля</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupOrder_numberError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_SETTINGS_NET;\r\n","import {BootstrapTable, TableHeaderColumn} from 'react-bootstrap-table'\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\n\r\nimport {Field, reduxForm} from \"redux-form\";\r\n\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n    //console.log( props )\r\n    return(\r\n        <option   value={props.optionItem.institution_id} >{props.optionItem.institution_name}</option>\r\n        // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    )\r\n}\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n    //console.log( props )\r\n    return(\r\n        <option   value={props.optionItem.branch_id} >{props.optionItem.branch_name}</option>\r\n        // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    )\r\n}\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n    //console.log( props )\r\n    return(\r\n        <option   value={props.optionItem.report_id} >{props.optionItem.report_name}</option>\r\n        // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    )\r\n}\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n    //console.log( props )\r\n    return(\r\n        <option   value={props.optionItem.acquiring_type_id} >{props.optionItem.acquiring_type_name}</option>\r\n        // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    )\r\n}\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n    //console.log( props )\r\n    return(\r\n        <option   value={props.optionItem.payment_system_id} >{props.optionItem.payment_system_name}</option>\r\n        // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    )\r\n}\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n    console.log( props )\r\n    return(\r\n        <option   value={props.optionItem.report_format_id} >{props.optionItem.report_format_name}</option>\r\n        // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    )\r\n}\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n    console.log( props )\r\n    return(\r\n        <option   value={props.optionItem.date_type_id} >{props.optionItem.date_type_name}</option>\r\n        // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    )\r\n}\r\nconst OptionItem = (props) => {\r\n    //console.log( props )\r\n    return(\r\n        <option\r\n            selected={props.optionItem.report_format_id == props.report_format_id ? 'selected' : ''}\r\n            value={props.optionItem.report_format_id}\r\n        >{props.optionItem.report_format_name}</option>\r\n        // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n    )\r\n}\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n    // console.log( props );\r\n    // console.log( props.optionItem.report_period_type_id );\r\n    // console.log( props.report_period_type_id );\r\n    //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n    return(\r\n        <option\r\n            selected={props.optionItem.report_period_type_id == props.report_period_type_id ? 'selected' : ''}\r\n            value={props.optionItem.report_period_type_id}\r\n        >{props.optionItem.report_period_type_name}</option>\r\n    )\r\n}\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n    //console.log( props )\r\n    return(\r\n        <option\r\n            selected={props.optionItem.report_channel_type_id == props.channel_type_id ? 'selected' : ''}\r\n            value={props.optionItem.report_channel_type_id}\r\n        >{props.optionItem.report_channel_type_name}</option>\r\n    )\r\n}\r\n\r\nclass REPORTS_acquiring extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            DICT_INSTITUTION: null,\r\n            isShowSelectDICT_INSTITUTION: false,\r\n\r\n            DICT_BRANCH: null,\r\n            isDisableTVBV: true,\r\n            isShowSelectTVBV: false,\r\n\r\n            DICT_ACQUIRING_REPORTS: null,\r\n            isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n            DICT_ACQUIRING_TYPE: null,\r\n            isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n            DICT_PAYMENT_SYSTEM: null,\r\n            isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n            DICT_REPORT_FORMAT: null,\r\n            isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n            DICT_DATE_TYPE: null,\r\n            isShowSelectDICT_DATE_TYPE: false,\r\n\r\n            AcquiringReportsCriteria: {}\r\n\r\n        }\r\n        //console.log(this.data.sort());\r\n    }\r\n    componentDidMount() {\r\n        this.requestDICT_INSTITUTION( this.props.store.userState.token );\r\n        this.requestDICT_ACQUIRING_REPORTS( this.props.store.userState.token );\r\n        this.requestDICT_ACQUIRING_TYPE( this.props.store.userState.token );\r\n        this.requestDICT_PAYMENT_SYSTEM( this.props.store.userState.token );\r\n        this.requestDICT_REPORT_FORMAT( this.props.store.userState.token );\r\n        this.requestDICT_DATE_TYPE( this.props.store.userState.token );\r\n    }\r\n\r\n    async requestDICT_INSTITUTION  ( token ) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ token }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                //console.log(response.data.Table);\r\n\r\n\r\n                //this.props.store.showTable(true);\r\n\r\n                // this.props.store.addTableData(true, response.data.Table);\r\n                this.setState({\r\n                    DICT_INSTITUTION: response.data.Table.TableRows,\r\n                    isShowSelectDICT_INSTITUTION: true\r\n                });\r\n\r\n                this.props.store.changeLoading(false);\r\n                //this.props.store.showTable(true);\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n            });\r\n\r\n    }\r\n\r\n    async requestDICT_BRANCH  ( token, param ) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n        let paramBody = {\r\n            \"param1\": param\r\n        }\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ token }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                //console.log(response.data.Table);\r\n\r\n\r\n\r\n\r\n                this.setState({\r\n                    DICT_BRANCH: response.data.Table.TableRows,\r\n                    isShowSelectTVBV: true,\r\n                    isDisableTVBV: false\r\n                });\r\n\r\n                this.props.store.changeLoading(false);\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n            });\r\n\r\n    }\r\n    async requestDICT_REPORT_FORMAT  (token) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ token }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n                    isShowSelectDICT_REPORT_FORMAT: true\r\n                });\r\n\r\n                this.props.store.changeLoading(false);\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n\r\n    }\r\n    async requestDICT_REPORT_PERIOD_TYPE  (token) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ token }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n                    isShowDICT_REPORT_PERIOD_TYPE: true\r\n                });\r\n\r\n                this.props.store.changeLoading(false);\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n\r\n    }\r\n\r\n    async requestDICT_ACQUIRING_REPORTS  (token) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ token }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n                    isShowSelectDICT_ACQUIRING_REPORTS: true\r\n                });\r\n\r\n                this.props.store.changeLoading(false);\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n\r\n    }\r\n    async requestDICT_ACQUIRING_TYPE  (token) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ token }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n                    isShowSelectDICT_ACQUIRING_TYPE: true\r\n                });\r\n\r\n                this.props.store.changeLoading(false);\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n\r\n    }\r\n    async requestDICT_PAYMENT_SYSTEM  (token) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ token }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    DICT_PAYMENT_SYSTEM: response.data.Table.TableRows,\r\n                    isShowSelectDICT_PAYMENT_SYSTEM: true\r\n                });\r\n\r\n                this.props.store.changeLoading(false);\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n\r\n    }\r\n    async requestDICT_DATE_TYPE  (token) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ token }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n\r\n                this.setState({\r\n                    DICT_DATE_TYPE: response.data.Table.TableRows,\r\n                    isShowSelectDICT_DATE_TYPE: true\r\n                });\r\n\r\n                this.props.store.changeLoading(false);\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n\r\n    }\r\n\r\n    async requestReports_Acquiring  (token, userBody) {\r\n        this.props.store.changeLoading(true);\r\n        console.log( token );\r\n        const baseUrl = `/api/Reports/Acquiring`;\r\n\r\n        await axios.post(\r\n            baseUrl,\r\n            userBody,\r\n            {\r\n                headers: {\r\n                    \"Token\" : `${ token }`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                //console.log(response.data.users);\r\n                //console.log(response.data.Table);\r\n\r\n\r\n                //this.props.store.showTable(true);\r\n\r\n                // this.props.store.addTableData(true, response.data.users);\r\n                // if(response.data.record_count >= 1){\r\n                //     this.setState({\r\n                //         settings: response.data.settings,\r\n                //         tsp_list: response.data.tsp_list,\r\n                //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n                //         isShowTsp: true\r\n                //     });\r\n                // }else if(response.data.record_count < 1){\r\n                //     this.setState({\r\n                //         isShowPopupError: true\r\n                //     });\r\n                // }\r\n\r\n\r\n                this.props.store.changeLoading(false);\r\n                //this.props.store.showTable(true);\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                // console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n\r\n    }\r\n\r\n\r\n\r\n    selectDICT_INSTITUTION = (e) => {\r\n        console.log(e.target.value);\r\n        let param = e.target.value;\r\n        console.log(param);\r\n        let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n        console.log(apiName);\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj[apiName] = inputValue;\r\n\r\n        console.log(inputDataObj);\r\n        this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj\r\n        });\r\n        console.log(this.state);\r\n        console.log(this.state.AcquiringReportsCriteria);\r\n\r\n\r\n        this.requestDICT_BRANCH(this.props.store.userState.token, param)\r\n    }\r\n\r\n\r\n    changeInputDateReport = (e) => {\r\n        let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n        console.log(apiName);\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n\r\n        inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n        console.log(inputDataObj);\r\n        this.setState({\r\n            AcquiringReportsCriteria: inputDataObj\r\n        });\r\n        console.log(this.state);\r\n        console.log(this.state.AcquiringReportsCriteria);\r\n    }\r\n    changeInputDateReport_from = (e) => {\r\n        let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n        console.log(apiName);\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n\r\n        inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n        console.log(inputDataObj);\r\n        this.setState({\r\n            AcquiringReportsCriteria: inputDataObj\r\n        });\r\n        console.log(this.state);\r\n        console.log(this.state.AcquiringReportsCriteria);\r\n    }\r\n    changeInputDateReport_to = (e) => {\r\n        let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n        console.log(apiName);\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n\r\n        inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n        console.log(inputDataObj);\r\n        this.setState({\r\n            AcquiringReportsCriteria: inputDataObj\r\n        });\r\n        console.log(this.state);\r\n        console.log(this.state.AcquiringReportsCriteria);\r\n    }\r\n\r\n    changeInputBase = (e) => {\r\n        let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n        console.log(apiName);\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n        inputDataObj[apiName] = inputValue;\r\n\r\n        console.log(inputDataObj);\r\n        this.setState({\r\n            AcquiringReportsCriteria: inputDataObj\r\n        });\r\n        console.log(this.state);\r\n        console.log(this.state.AcquiringReportsCriteria);\r\n    }\r\n    changeInput = (e) => {\r\n        let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n        console.log(apiName);\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n        if(apiName == 'date_type_id' || apiName == 'format_type_id' || apiName == 'mcc_code' || apiName == 'payment_system_id' || apiName == 'terminal_id' || apiName == 'merchant_id' || apiName == 'bank_branch_id' || apiName == 'institution_id'){\r\n            inputDataObj[apiName] = Number(inputValue);\r\n        }else{\r\n            inputDataObj[apiName] = inputValue;\r\n        }\r\n\r\n        console.log(inputDataObj);\r\n        this.setState({\r\n            AcquiringReportsCriteria: inputDataObj\r\n        });\r\n        console.log(this.state);\r\n        console.log(this.state.AcquiringReportsCriteria);\r\n    }\r\n\r\n\r\n    formatDate = (date) => {\r\n        let day = date.getDate();\r\n        let month = (\"0\" + (date.getMonth() + 1)).slice(-2)\r\n        let year = date.getFullYear();\r\n        return year + month + day;\r\n    }\r\n    search = () => {\r\n        //this.requestTSPReportSettings(this.props.store.userState.token, this.state.TSPReportSettingsSearchObj);\r\n        //this.requestTSPReportSettings_test(this.props.store.userState.token, this.state.TSPReportSettingsSearchObj);\r\n\r\n        // this.setState({\r\n        //     settings: this.state.responseTSPReportSettings.settings,\r\n        //     tsp_list: this.state.responseTSPReportSettings.tsp_list,\r\n        //     isShowTsp: true\r\n        // });\r\n        let res = {\r\n            \"institution_id\": 0,\r\n            \"bank_branch_id\": 0,\r\n            \"ident_code\": \"string\",\r\n            \"tsp_name\": \"string\",\r\n            \"tsp_id\": \"string\",\r\n            \"merchant_id\": 0,\r\n            \"date_from\": \"string\",\r\n            \"date_to\": \"string\",\r\n            \"report_type_id\": \"string\",\r\n            \"terminal_type_id\": \"string\",\r\n            \"terminal_id\": 0,\r\n            \"payment_system_id\": 0,\r\n            \"mcc_code\": 0,\r\n            \"format_type_id\": 0,\r\n            \"date_type_id\": 0\r\n        }\r\n        console.log(res);\r\n        console.log(this.state.AcquiringReportsCriteria);\r\n\r\n        this.requestReports_Acquiring( this.props.store.userState.token,  this.state.AcquiringReportsCriteria);\r\n\r\n    }\r\n    Tsp_list = (tsp_list) => {\r\n        console.log(tsp_list);\r\n        return tsp_list.map(( item , index) => {\r\n            console.log(item);\r\n            return(\r\n                <li className=\"dropdownMenuItem\">\r\n                    <p><input name=\"tsp_list\" id={item.tsp_name} type=\"radio\" onClick={this.itemTsp} value={item.tsp_id}/> {item.tsp_name}</p>\r\n                </li>\r\n            )\r\n        });\r\n    }\r\n    itemTsp = (e) => {\r\n        // let currentTsp = e.target.value;\r\n        // console.log(currentTsp);\r\n        // let currentTspArr = this.state.currentTsp;\r\n        // currentTspArr.push(currentTsp);\r\n        // this.setState({\r\n        //     currentTsp: currentTspArr,\r\n        //     isShowTypeAcquiring: true\r\n        // });\r\n        let currentTsp = e.target.value;\r\n        console.log(currentTsp);\r\n        console.log(this.state);\r\n        this.state.settings.map( ( item , index) => {\r\n            if(item.tsp_id == currentTsp){\r\n                if(item.main_settings == null){\r\n                    this.setState({\r\n                        type_acquiring: 2,\r\n                        report_format_id: 1,\r\n                        report_period_type_id: 1,\r\n                        channel_type_id: 1,\r\n                        file_name_mask: \"\",\r\n                    });\r\n                }else if(item.main_settings.length){\r\n\r\n                    console.log(item.main_settings[0].acquiring_type_id);\r\n                    this.setState({\r\n                        type_acquiring: item.main_settings[0].acquiring_type_id,\r\n                        report_format_id: item.main_settings[0].report_format_id,\r\n                        report_period_type_id: item.main_settings[0].report_period_type_id,\r\n                        channel_type_id: item.main_settings[0].channel_type_id,\r\n                        file_name_mask: item.main_settings[0].file_name_mask,\r\n                    });\r\n                }\r\n            }\r\n        });\r\n        this.setState({\r\n            currentTsp: Number(currentTsp),\r\n            TSPReportSettingsSTD: null,\r\n            isShowTypeAcquiring: true,\r\n        });\r\n        // this.setState({\r\n        //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n        //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n        //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n        //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n        // });\r\n        this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n        this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n        this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n        //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n\r\n\r\n    }\r\n\r\n    changeTypeAcquiring = (e) => {\r\n        let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n        console.log(typeAcquiring);\r\n        // this.setState({\r\n        //     type_acquiring: Number(typeAcquiring),\r\n        //     isShowReport: true\r\n        // });\r\n        this.state.settings.map( ( item , index) => {\r\n            console.log(this.state.currentTsp);\r\n            console.log(item.tsp_id);\r\n            if(item.tsp_id == this.state.currentTsp){\r\n                if(item.main_settings.length > 1){\r\n                    console.log(item.main_settings.length > 1);\r\n                    item.main_settings.map( ( item , index) => {\r\n                        if(item.acquiring_type_id == typeAcquiring){\r\n                            console.log(item.acquiring_type_id == typeAcquiring);\r\n                            this.setState({\r\n                                type_acquiring: Number(typeAcquiring),\r\n                                report_format_id: item.report_format_id,\r\n                                report_period_type_id: item.report_period_type_id,\r\n                                channel_type_id: item.channel_type_id,\r\n                                file_name_mask: item.file_name_mask,\r\n                            });\r\n                        }\r\n                    });\r\n\r\n                }\r\n            }\r\n        });\r\n\r\n        // this.state.settings.map( ( item , index) => {\r\n        //     if(item.tsp_id == this.state.currentTsp){\r\n        //         if(item.main_settings.length > 1){\r\n        //\r\n        //             console.log(item.main_settings[0].acquiring_type_id);\r\n        //             this.setState({\r\n        //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n        //                 report_format_id: item.main_settings[0].report_format_id,\r\n        //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n        //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n        //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n        //             });\r\n        //         }\r\n        //     }\r\n        // });\r\n\r\n        // this.setState({\r\n        //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n        //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n        //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n        //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n        //\r\n        //     type_acquiring: Number(typeAcquiring),\r\n        //     isShowReport: true\r\n        // });\r\n\r\n    }\r\n\r\n    openStandardReport = () => {\r\n        // this.setState({\r\n        //     isShowTableTSPReportSettingsSTD: true\r\n        // });\r\n        this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n    }\r\n    closePopupTable = () => {\r\n        this.setState({\r\n            isShowTableTSPReportSettingsSTD: false\r\n        });\r\n    }\r\n\r\n    changeReport_format_id = (e) => {\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        this.setState({\r\n            report_format_id: Number(inputValue)\r\n        });\r\n    }\r\n    changeReport_period_type_id = (e) => {\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        this.setState({\r\n            report_period_type_id: Number(inputValue)\r\n        });\r\n    }\r\n    changeChannel_type_id = (e) => {\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        this.setState({\r\n            channel_type_id: Number(inputValue)\r\n        });\r\n    }\r\n    changeFile_name_mask = (e) => {\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        this.setState({\r\n            file_name_mask: inputValue\r\n        });\r\n    }\r\n    saveReport = () => {\r\n        let dody = {\r\n            acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n            tsp_list: [\r\n                {\r\n                    tsp_id: this.state.currentTsp     //tsp_id\r\n                }\r\n            ],\r\n            main_settings: {\r\n                acquiring_type_id: this.state.type_acquiring,//type_acquiring\r\n                // \"standard_report\": true,\r\n                // \"extended_report\": true,\r\n                // \"installment_report\": true,\r\n                report_format_id: this.state.report_format_id, //report_format_id\r\n                // \"report_format_name\": \"s tring\",\r\n                report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n                // \"report_period_type_name\": \"string\",\r\n                channel_type_id: this.state.channel_type_id, //channel_type_id\r\n                // \"channel_type_name\": \"string\",\r\n                file_name_mask: this.state.file_name_mask, //file_name_mask\r\n                // \"file_path\": \"string\"\r\n            },\r\n\r\n        };\r\n        if( this.state.TSPReportSettingsSTD != null){\r\n            dody.std_settings = this.state.TSPReportSettingsSTD;\r\n        }\r\n        //console.log( dody );\r\n        this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n    }\r\n\r\n    showReport = (currentTsp) => {\r\n        console.log(currentTsp);\r\n        return this.state.settings.map( ( item , index) => {\r\n            console.log(item);\r\n\r\n\r\n\r\n\r\n            console.log(item.tsp_id);\r\n            console.log(item.tsp_id == currentTsp);\r\n            if(item.tsp_id == currentTsp){\r\n                console.log(item.main_settings);\r\n\r\n                if(item.main_settings == null){\r\n                    let report_period_type_id = 1;\r\n                    let report_format_id = 1;\r\n                    let channel_type_id = 1;\r\n                    let file_name_mask = \"\";\r\n\r\n                    console.log(report_period_type_id);\r\n                    console.log(report_format_id);\r\n                    console.log(channel_type_id);\r\n                    console.log(file_name_mask);\r\n                    return(\r\n                        <div className=\"report border\">\r\n                            <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                            <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n                            <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n                            <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n                            <br/>\r\n                            <div className=\"coverInput\">\r\n                                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                                {\r\n                                    this.state.isShowREPORT_FORMAT\r\n                                        ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n\r\n                                            { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n                                                return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n                                            }) }\r\n                                        </select>\r\n                                        : <span>Завантаження...</span>\r\n                                }\r\n\r\n\r\n\r\n                            </div>\r\n                            <div className=\"coverInput\">\r\n                                <label htmlFor=\"report_period\">Період звіту</label>\r\n                                {\r\n                                    this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n                                        ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n\r\n                                            { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n                                                return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n                                            }) }\r\n                                        </select>\r\n                                        : <span>Завантаження...</span>\r\n                                }\r\n                            </div>\r\n                            <div className=\"coverInput\">\r\n                                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                                <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n                            </div>\r\n                            <div className=\"coverInput\">\r\n                                <label htmlFor=\"сatalog\">Каталог</label>\r\n                                <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n                            </div>\r\n                            <div className=\"coverInput\">\r\n                                <label htmlFor=\"сhannel\">Канал</label>\r\n                                {\r\n                                    this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n                                        ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n\r\n                                            { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n                                                return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n                                            }) }\r\n                                        </select>\r\n                                        : <span>Завантаження...</span>\r\n                                }\r\n\r\n                            </div>\r\n                            <div className=\"reportCoverBtn\">\r\n                                <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }else if(item.main_settings.length == 1){\r\n                    return item.main_settings.map( ( item , index) => {\r\n                        let report_period_type_id = item.report_period_type_id;\r\n                        let report_format_id = item.report_format_id;\r\n                        let channel_type_id = item.channel_type_id;\r\n                        let file_name_mask = item.file_name_mask;\r\n                        console.log(report_period_type_id);\r\n                        console.log(report_format_id);\r\n                        console.log(channel_type_id);\r\n                        console.log(file_name_mask);\r\n                        return(\r\n                            <div className=\" border report\">\r\n                                <div className=\"coverBtn border\">\r\n                                    <div className=\"title\">Вид екварингу</div>\r\n                                    <button className=\"btn btn-secondary\">{this.state.type_acquiring == 1 ? 'Фізичний' : 'Інтернет'}</button>\r\n                                    {/*<button*/}\r\n                                    {/*    className=\"btn btn-secondary\"*/}\r\n                                    {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                                    {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                                    {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                                </div>\r\n                                <div className=\"report border\">\r\n                                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                                    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n                                    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n                                    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n                                    <br/>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"file_format\">Формат файлу</label>\r\n                                        {\r\n                                            this.state.isShowREPORT_FORMAT\r\n                                                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n\r\n                                                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n                                                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n                                                    }) }\r\n                                                </select>\r\n                                                : <span>Завантаження...</span>\r\n                                        }\r\n\r\n\r\n\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"report_period\">Період звіту</label>\r\n                                        {\r\n                                            this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n                                                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n\r\n                                                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n                                                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n                                                    }) }\r\n                                                </select>\r\n                                                : <span>Завантаження...</span>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                                        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"сatalog\">Каталог</label>\r\n                                        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"сhannel\">Канал</label>\r\n                                        {\r\n                                            this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n                                                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n\r\n                                                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n                                                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n                                                    }) }\r\n                                                </select>\r\n                                                : <span>Завантаження...</span>\r\n                                        }\r\n\r\n                                    </div>\r\n                                    <div className=\"reportCoverBtn\">\r\n                                        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    });\r\n\r\n                }else if(item.main_settings.length == 2){\r\n\r\n\r\n                    return(\r\n                        <div className=\"\">\r\n                            <div className=\"coverBtn border\">\r\n                                <div className=\"title\">Вид екварингу</div>\r\n                                <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    disabled={this.state.type_acquiring == 1 ? 'disabled' : ''}\r\n                                    onClick={  this.changeTypeAcquiring }\r\n                                    type_acquiring={1}>Фізичний</button>\r\n                                <button\r\n                                    className=\"btn btn-secondary\"\r\n                                    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}\r\n                                    onClick={ this.changeTypeAcquiring }\r\n                                    type_acquiring={2}>Інтернет</button>\r\n                            </div>\r\n                            {\r\n                                item.main_settings.map( ( item , index) => {\r\n                                    let report_period_type_id = item.report_period_type_id;\r\n                                    let report_format_id = item.report_format_id;\r\n                                    let channel_type_id = item.channel_type_id;\r\n                                    let file_name_mask = item.file_name_mask;\r\n                                    let acquiring_type_id = item.acquiring_type_id;\r\n                                    let standard_report = item.standard_report;\r\n                                    let extended_report = item.extended_report;\r\n                                    let installment_report = item.installment_report;\r\n                                    console.log(acquiring_type_id);\r\n                                    console.log(report_period_type_id);\r\n                                    console.log(report_format_id);\r\n                                    console.log(channel_type_id);\r\n                                    console.log(file_name_mask);\r\n                                    console.log(this.state.type_acquiring);\r\n                                    return(\r\n                                        <div className={`${this.state.type_acquiring == acquiring_type_id ? '' : 'd-none'} border report`}>\r\n                                            <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                                            <button className=\"btn btn-secondary\" disabled={standard_report ? '' : 'disabled'} onClick={this.openStandardReport} >Стандартний звіт</button>\r\n                                            <button className=\"btn btn-secondary\" disabled={extended_report ? '' : 'disabled'} >Розширений звіт</button>\r\n                                            <button className=\"btn btn-secondary\" disabled={installment_report ? '' : 'disabled'} >Звіт по операціям Installment</button>\r\n                                            <br/>\r\n                                            <div className=\"coverInput\">\r\n                                                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                                                {\r\n                                                    this.state.isShowREPORT_FORMAT\r\n                                                        ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n\r\n                                                            { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n                                                                return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n                                                            }) }\r\n                                                        </select>\r\n                                                        : <span>Завантаження...</span>\r\n                                                }\r\n\r\n\r\n\r\n                                            </div>\r\n                                            <div className=\"coverInput\">\r\n                                                <label htmlFor=\"report_period\">Період звіту</label>\r\n                                                {\r\n                                                    this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n                                                        ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n\r\n                                                            { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n                                                                return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n                                                            }) }\r\n                                                        </select>\r\n                                                        : <span>Завантаження...</span>\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"coverInput\">\r\n                                                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                                                <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n                                            </div>\r\n                                            <div className=\"coverInput\">\r\n                                                <label htmlFor=\"сatalog\">Каталог</label>\r\n                                                <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n                                            </div>\r\n                                            <div className=\"coverInput\">\r\n                                                <label htmlFor=\"сhannel\">Канал</label>\r\n                                                {\r\n                                                    this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n                                                        ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n\r\n                                                            { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n                                                                return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n                                                            }) }\r\n                                                        </select>\r\n                                                        : <span>Завантаження...</span>\r\n                                                }\r\n\r\n                                            </div>\r\n                                            <br/>\r\n                                            <div className=\"reportCoverBtn\">\r\n                                                <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                })\r\n                            }\r\n                            {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n                            {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n                            {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n                            {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n                            {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n                            {/*    <br/>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n                            {/*        {*/}\r\n                            {/*            this.state.isShowREPORT_FORMAT*/}\r\n                            {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n                            {/*                    <option>-</option>*/}\r\n                            {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n                            {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n                            {/*                    }) }*/}\r\n                            {/*                </select>*/}\r\n                            {/*                : <span>Завантаження...</span>*/}\r\n                            {/*        }*/}\r\n\r\n\r\n\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n                            {/*        {*/}\r\n                            {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n                            {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n                            {/*                    <option>-</option>*/}\r\n                            {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n                            {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n                            {/*                    }) }*/}\r\n                            {/*                </select>*/}\r\n                            {/*                : <span>Завантаження...</span>*/}\r\n                            {/*        }*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n                            {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n                            {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n                            {/*        {*/}\r\n                            {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n                            {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n                            {/*                    <option>-</option>*/}\r\n                            {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n                            {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n                            {/*                    }) }*/}\r\n                            {/*                </select>*/}\r\n                            {/*                : <span>Завантаження...</span>*/}\r\n                            {/*        }*/}\r\n\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"reportCoverBtn\">*/}\r\n                            {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n                            {/*    </div>*/}\r\n                            {/*</Tab>*/}\r\n                            {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n                            {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n                            {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n                            {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n                            {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n                            {/*    <br/>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n                            {/*        {*/}\r\n                            {/*            this.state.isShowREPORT_FORMAT*/}\r\n                            {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n                            {/*                    <option>-</option>*/}\r\n                            {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n                            {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n                            {/*                    }) }*/}\r\n                            {/*                </select>*/}\r\n                            {/*                : <span>Завантаження...</span>*/}\r\n                            {/*        }*/}\r\n\r\n\r\n\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n                            {/*        {*/}\r\n                            {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n                            {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n                            {/*                    <option>-</option>*/}\r\n                            {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n                            {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n                            {/*                    }) }*/}\r\n                            {/*                </select>*/}\r\n                            {/*                : <span>Завантаження...</span>*/}\r\n                            {/*        }*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n                            {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n                            {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"coverInput\">*/}\r\n                            {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n                            {/*        {*/}\r\n                            {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n                            {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n                            {/*                    <option>-</option>*/}\r\n                            {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n                            {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n                            {/*                    }) }*/}\r\n                            {/*                </select>*/}\r\n                            {/*                : <span>Завантаження...</span>*/}\r\n                            {/*        }*/}\r\n\r\n                            {/*    </div>*/}\r\n                            {/*    <div className=\"reportCoverBtn\">*/}\r\n                            {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n                            {/*    </div>*/}\r\n                            {/*</Tab>*/}\r\n\r\n                        </div>\r\n                    )\r\n\r\n                }\r\n\r\n\r\n                // return item.main_settings.map( ( item , index) => {\r\n                //     console.log(item);\r\n                //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n                //\r\n                //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n                //         let report_period_type_id = item.report_period_type_id;\r\n                //         let report_format_id = item.report_format_id;\r\n                //         let channel_type_id = item.channel_type_id;\r\n                //         let file_name_mask = item.file_name_mask;\r\n                //         // this.setState({\r\n                //         //     report_period_type_id: report_period_type_id,\r\n                //         //     report_format_id: report_format_id,\r\n                //         //     channel_type_id: channel_type_id,\r\n                //         //     file_name_mask: file_name_mask\r\n                //         // });\r\n                //\r\n                //         return(\r\n                //             <div className=\"report border\">\r\n                //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n                //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n                //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n                //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n                //                 <br/>\r\n                //                 <div className=\"coverInput\">\r\n                //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n                //                     {\r\n                //                         this.state.isShowREPORT_FORMAT\r\n                //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n                //\r\n                //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n                //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n                //                                 }) }\r\n                //                             </select>\r\n                //                             : <span>Завантаження...</span>\r\n                //                     }\r\n                //\r\n                //\r\n                //\r\n                //                 </div>\r\n                //                 <div className=\"coverInput\">\r\n                //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n                //                     {\r\n                //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n                //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n                //\r\n                //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n                //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n                //                                 }) }\r\n                //                             </select>\r\n                //                             : <span>Завантаження...</span>\r\n                //                     }\r\n                //                 </div>\r\n                //                 <div className=\"coverInput\">\r\n                //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n                //                 </div>\r\n                //                 <div className=\"coverInput\">\r\n                //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n                //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n                //                 </div>\r\n                //                 <div className=\"coverInput\">\r\n                //                     <label htmlFor=\"сhannel\">Канал</label>\r\n                //                     {\r\n                //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n                //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n                //\r\n                //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n                //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n                //                                 }) }\r\n                //                             </select>\r\n                //                             : <span>Завантаження...</span>\r\n                //                     }\r\n                //\r\n                //                 </div>\r\n                //                 <div className=\"reportCoverBtn\">\r\n                //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n                //                 </div>\r\n                //             </div>\r\n                //         )\r\n                //     }\r\n                // });\r\n\r\n            }\r\n        })\r\n    }\r\n\r\n    closePopupError = () => {\r\n        this.setState({\r\n            isShowPopupError: false\r\n        });\r\n    }\r\n    closePopupErrorSave = () => {\r\n        this.setState({\r\n            isShowPopupErrorSave: false\r\n        });\r\n    }\r\n    activeOperation = (operationArr, operation) => {\r\n        let res;\r\n        operationArr.map(( item , index) => {\r\n            if(item.operation == operation){\r\n                console.log(item.name);\r\n                res = item.name;\r\n            }\r\n        })\r\n        return res;\r\n    }\r\n    render() {\r\n        // console.log(this.props.store.menuState.tableData);\r\n        // console.log(this.state.DICT_INSTITUTION);\r\n        // console.log(this.state.DICT_BRANCH);\r\n        console.log(this.state.TSPReportSettingsSTD);\r\n        console.log(this.state);\r\n\r\n\r\n        return (\r\n            <div className=\"coverTable REPORT_aquiring\">\r\n                <div className=\"headerTable\">\r\n                    <div className=\"titleTable\">{this.activeOperation(this.props.store.userState.OPERATIONS, this.props.store.location.pathname.substr(11))}</div>\r\n                    <div className=\"optionBlock\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"filter\">\r\n                    <div className=\"coverInput\">\r\n                        <label htmlFor=\"DICT_INSTITUTION\">Регіональні управління</label>\r\n                        <select onChange={this.selectDICT_INSTITUTION} apiName=\"institution_id\" id=\"dropdown-basic-button\" className=\"form-select\"\r\n                                title=\"Регіональні управління\">\r\n                            <option>-</option>\r\n                            {\r\n                                this.state.isShowSelectDICT_INSTITUTION\r\n                                    ?\r\n                                    this.state.DICT_INSTITUTION.map((item, index) => {\r\n                                        return < OptionItemDICT_INSTITUTION key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select>\r\n                        <label htmlFor=\"TVBV\">ТВБВ</label>\r\n                        <select  id=\"dropdown-basic-button\" onChange={this.changeInput} apiName=\"bank_branch_id\" className=\"form-select\"\r\n                                 disabled={this.state.isDisableTVBV ? 'disabled' : ''}\r\n                                 title=\"ТВБВ\">\r\n                            <option>-</option>\r\n                            {\r\n                                this.state.isShowSelectTVBV\r\n                                    ? this.state.DICT_BRANCH.map((item, index) => {\r\n                                        return < OptionItemDICT_BRANCH key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <></>\r\n\r\n                            }\r\n                        </select>\r\n                        <label htmlFor=\"tsp_name\">Назва ТСП</label>\r\n                        <input onChange={this.changeInput} apiName=\"tsp_name\" id=\"tsp_name\" type=\"text\"/>\r\n                        <label htmlFor=\"INN\">ІНН/ЄДРПОУ</label>\r\n                        <input onChange={this.changeInput} apiName=\"ident_code\" id=\"INN\" type=\"text\"/>\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n\r\n                        <label htmlFor=\"report_type_id\">Назва звіту</label>\r\n                        <select onChange={this.changeInput} apiName=\"report_type_id\" id=\"report_type_id\" className=\"form-select\"\r\n                                title=\"\">\r\n                            <option>-</option>\r\n                            {\r\n                                this.state.isShowSelectDICT_ACQUIRING_REPORTS\r\n                                    ?\r\n                                    this.state.DICT_ACQUIRING_REPORTS.map((item, index) => {\r\n                                        return < OptionItemDICT_ACQUIRING_REPORTS key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select>\r\n\r\n\r\n                        <label htmlFor=\"terminal_type_id\">Вид термінала</label>\r\n                        <select onChange={this.changeInput} apiName=\"terminal_type_id\" id=\"terminal_type_id\" className=\"form-select\"\r\n                                title=\"Регіональні управління\">\r\n                            <option>-</option>\r\n                            {\r\n                                this.state.isShowSelectDICT_ACQUIRING_TYPE\r\n                                    ?\r\n                                    this.state.DICT_ACQUIRING_TYPE.map((item, index) => {\r\n                                        return < OptionItemDICT_ACQUIRING_TYPE key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select>\r\n\r\n                        <label htmlFor=\"merchant\">merchant ID</label>\r\n                        <input onChange={this.changeInput} apiName=\"merchant_id\" id=\"merchant\" type=\"text\"/>\r\n\r\n                        <label htmlFor=\"terminal_id\">Terminal ID</label>\r\n                        <input onChange={this.changeInput} apiName=\"terminal_id\" id=\"terminal_id\" type=\"text\"/>\r\n\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                        <label htmlFor=\"base\">Базові поля</label>\r\n                        <input  apiName=\"base\" id=\"base\" type=\"checkbox\"/>\r\n                        <label htmlFor=\"DICT_PAYMENT_SYSTEM\">Карти</label>\r\n                        <select onChange={this.changeInput} apiName=\"payment_system_id\" id=\"dropdown-basic-button\" className=\"form-select\"\r\n                                title=\"Карти\">\r\n                            <option>-</option>\r\n                            {\r\n                                this.state.isShowSelectDICT_PAYMENT_SYSTEM\r\n                                    ?\r\n                                    this.state.DICT_PAYMENT_SYSTEM.map((item, index) => {\r\n                                        return < OptionItemDICT_PAYMENT_SYSTEM key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select>\r\n                        <label htmlFor=\"mcc_code\">MCC</label>\r\n                        <input onChange={this.changeInput} apiName=\"mcc_code\" id=\"mcc_code\" type=\"text\"/>\r\n                        <label htmlFor=\"format_type_id\">Формат файлу</label>\r\n                        <select onChange={this.changeInput} apiName=\"format_type_id\" id=\"format_type_id\" className=\"form-select\"\r\n                                title=\"DICT_REPORT_FORMAT\">\r\n                            <option>-</option>\r\n                            {\r\n                                this.state.isShowSelectDICT_REPORT_FORMAT\r\n                                    ?\r\n                                    this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                                        console.log(item)\r\n                                        return < OptionItemDICT_REPORT_FORMAT key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                        <div className=\"coverInput\">\r\n                            <div className=\"coverDate\">\r\n                                {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                                {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                                <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                                <select onChange={this.changeInput} apiName=\"date_type_id\" id=\"date_type_id\" className=\"form-select\"\r\n                                        title=\"DICT_DATE_TYPE\">\r\n                                    <option>-</option>\r\n                                    {\r\n                                        this.state.isShowSelectDICT_DATE_TYPE\r\n                                            ?\r\n                                            this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                                                console.log(item)\r\n                                                return < OptionItemDICT_DATE_TYPE key={index} optionItem={item}/>\r\n                                            })\r\n                                            : <>\r\n                                            </>\r\n                                    }\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"coverInput\">\r\n                            <span>Період звіту</span>\r\n                            <div className=\"coverInputs\">\r\n                                <div className=\"coverDate\">\r\n                                    <label htmlFor=\"date_report_from\">З</label>\r\n                                    <input onChange={this.changeInputDateReport_from} apiName=\"date_from\" className=\"customInput\" id=\"date_from\" type=\"date\"/>\r\n                                </div>\r\n                                <div className=\"coverDate\">\r\n                                    <label htmlFor=\"date_report_to\">По</label>\r\n                                    <input onChange={this.changeInputDateReport_to} apiName=\"date_to\" className=\"customInput\" id=\"date_to\" type=\"date\"/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"btnBlock\">\r\n                    <button className=\"search\" onClick={this.search}>Побудувати звіт</button>\r\n                </div>\r\n\r\n\r\n\r\n                {\r\n                    this.state.isShowPopupError\r\n                        ? <>\r\n                            <div className=\"coverPopupError\">\r\n                                <div className=\"innerBlock\">\r\n                                    <div className=\"title alert alert-primary\">Немає результату по даному пошуку</div>\r\n                                    <div className=\"msg\">Спробуйте ввести інші дані для пошуку</div>\r\n                                    <button className=\"btn btn-secondary\" onClick={this.closePopupError}>Закрити</button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        : <>\r\n                        </>\r\n                }\r\n                {\r\n                    this.state.isShowPopupErrorSave\r\n                        ? <>\r\n                            <div className=\"coverPopupError\">\r\n                                <div className=\"innerBlock\">\r\n                                    <div className=\"title alert alert-primary\">Упс1 Сталася помилка</div>\r\n                                    <div className=\"msg\">:(</div>\r\n                                    <button className=\"btn btn-secondary\" onClick={this.closePopupErrorSave}>Закрити</button>\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                        : <>\r\n                        </>\r\n                }\r\n\r\n\r\n\r\n\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default REPORTS_acquiring","import { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport fileDownload from \"js-file-download\";\r\nimport { FileSaver, saveAs } from \"file-saver\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nclass REPORTS_ACQUIRING_MONITOR extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ReportsMonitor: null,\r\n      isShowReportsMonitor: false,\r\n      ReportsDates: null,\r\n      isShowReportsDates: false,\r\n      selectDate: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.requestReportsMonitor(this.props.store.userState.token);\r\n    this.requestReportsDates(this.props.store.userState.token);\r\n    this.timer = setInterval(() => {\r\n      if (window.location.pathname === \"/dashboard/REPORTS_ACQUIRING_MONITOR\") {\r\n        console.log(window.location.pathname + \" test\")\r\n        if (this.state.selectDate) {\r\n          this.selectDates(this.state.selectDate);\r\n        } else {\r\n          this.requestReportsMonitor(this.props.store.userState.token);\r\n        }\r\n      }\r\n    }, 8000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.timer);\r\n  }\r\n\r\n  async requestReportsMonitor(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Reports/ReportsMonitor?reportGroup=REPORT_GROUP_ACQUIRING`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          ReportsMonitor: response.data.reports,\r\n          isShowReportsMonitor: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestReportsDates(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Reports/ReportsMonitorDates?reportGroup=REPORT_GROUP_ACQUIRING`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(\"dates:\", response.data);\r\n\r\n        this.setState({\r\n          ReportsDates: response.data.ReportDates,\r\n          isShowReportsDates: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  selectDates = async (e) => {\r\n    if(!e.target.value){\r\n      this.setState({\r\n        ReportsMonitor: []\r\n      });\r\n      return;\r\n    }\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/ReportsMonitorByDate?reportGroup=REPORT_GROUP_ACQUIRING&date=${e.target.value}`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          ReportsMonitor: response.data.reports,\r\n          isShowReportsDates: true,\r\n          selectDate: e,\r\n        });\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        this.props.store.changeLoading(false);\r\n      });\r\n  };\r\n  formatDateFile = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    let year = date.getFullYear();\r\n    let hou = date.getHours();\r\n    let min = date.getMinutes();\r\n    return `Report.${day}.${month}.${year}.${hou}-${min}.xlsx`;\r\n  };\r\n\r\n  async requestReports_GetReport(token, reportId) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Reports/GetReport?reportId=${reportId}`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        responseType: \"blob\",\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Access-Control-Expose-Headers\": \"Content-Disposition\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        let fileTitle = decodeURI(\r\n          response.headers[\"content-disposition\"].split(\"filename*=UTF-8''\")[1]\r\n        );\r\n\r\n        // let fileTitle = response.headers['content-disposition'];\r\n        // if(fileTitle.search('filename=\"')!==-1){\r\n        //     fileTitle = response.headers['content-disposition'].slice(22).split('\"; filename*=UTF-8')[0];\r\n        // }else{\r\n        //     fileTitle = response.headers['content-disposition'].slice(21).split('; filename*=UTF-8')[0];\r\n        // }\r\n        fileDownload(response.data, fileTitle);\r\n        this.props.store.changeLoading(false);\r\n      })\r\n\r\n      .catch((error) => {\r\n        console.log(error);\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props.store);\r\n    console.log(this.state);\r\n\r\n    const hendleDownload = (cell, row, newValue) => {\r\n      const btnDownload = (e) => {\r\n        console.log(cell);\r\n        console.log(row);\r\n        this.requestReports_GetReport(this.props.store.userState.token, cell);\r\n      };\r\n      const statusBtn = (report_id) => {\r\n        //console.log(report_id);\r\n        // return this.state.ReportsMonitor.map(( item , index) => {\r\n        //     console.log(item.report_id);\r\n        //     if(item.report_id == report_id){\r\n        //         console.log(item.status);\r\n        //         if(item.status == 'Не сформовано')\r\n        //         return true\r\n        //     }\r\n        // });\r\n        for (let i = 0; i < this.state.ReportsMonitor.length; i++) {\r\n          if (this.state.ReportsMonitor[i].report_id == report_id) {\r\n            //console.log('-----status-----');\r\n            //console.log(i);\r\n            //console.log(this.state.ReportsMonitor[i].status);\r\n            if (this.state.ReportsMonitor[i].status_code == \"C\") {\r\n              return true;\r\n            }\r\n          }\r\n        }\r\n      };\r\n      //console.log(statusBtn(cell));\r\n      return (\r\n        <>\r\n          <button\r\n            onClick={btnDownload}\r\n            disabled={statusBtn(cell) ? \"\" : \"disabled\"}\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n          >\r\n            Скачати\r\n          </button>\r\n        </>\r\n      );\r\n    };\r\n    return (\r\n      <div className=\"coverTable REPORTS_ACQUIRING_MONITOR\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">Архів</div>\r\n        </div>\r\n        <div className=\"innerTable\">\r\n          <div className=\"col-2\">\r\n            <label> Виберіть дату: </label>\r\n            <select\r\n              onChange={this.selectDates}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`form-select`}\r\n            >\r\n              <option></option>\r\n              {this.state.isShowReportsDates\r\n                ? this.state.ReportsDates.map((item, index) => {\r\n                    return (\r\n                      <option key={index} value={item.date_submitted_char}>\r\n                        {item.date_submitted}\r\n                      </option>\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        {this.state.isShowReportsMonitor ? (\r\n          <>\r\n            <div className=\"innerTable\">\r\n              <div className=\"Table\">\r\n                <BootstrapTable\r\n                  data={this.state.ReportsMonitor}\r\n                  // selectRow={selectRowProp}\r\n                >\r\n                  {/*{this.testRendColums}*/}\r\n\r\n                  <TableHeaderColumn\r\n                    isKey\r\n                    dataField=\"report_name\"\r\n                    width=\"400\"\r\n                    tdStyle={{ whiteSpace: \"normal\", wordWrap: \"break-word\" }}\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Назва звіту\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"date_submitted\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Дата запиту\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"date_updated\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Дата оновлення\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"status\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Статус\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"user\"\r\n                    filter={{ type: \"TextFilter\", delay: 1000 }}\r\n                  >\r\n                    Користувач\r\n                  </TableHeaderColumn>\r\n                  <TableHeaderColumn\r\n                    dataField=\"report_id\"\r\n                    width=\"100\"\r\n                    dataFormat={hendleDownload}\r\n                  ></TableHeaderColumn>\r\n                </BootstrapTable>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORTS_ACQUIRING_MONITOR;\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MERCHANT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.merchant_id}>\r\n      {props.optionItem.merchant_id}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TERMINAL_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_code}>\r\n      {props.optionItem.mcc_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MCC_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_id}>{props.optionItem.mccs_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemMccCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemMerchantName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.merchant_id}\r\n      name={props.item.merchant_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.merchant_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTerminalName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.terminal_id}\r\n      name={props.item.terminal_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.terminal_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      data-id={props.item.institution_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      data-id={props.item.client_id}\r\n    >\r\n      {props.item.ident_code} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(\"param\", param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    this.request(this.props.token, param, true);\r\n    // }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // this.props.onBlur();\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    let institution = e.currentTarget.getAttribute(\"data-id\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        //console.log(typeof val);\r\n        this.setState({\r\n          inputResult: `${name} - ${institution}`,\r\n          inputRequest: `${name} - ${institution}`,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть перші букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect\r\n            ? this.state.data != null\r\n              ? this.state.data.map((item, index) => {\r\n                  return (\r\n                    <BlockSelectItemTspName\r\n                      key={index}\r\n                      item={item}\r\n                      onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                    />\r\n                  );\r\n                })\r\n              : null\r\n            : null}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst BlockSelectItemBrandName = (props) => {\r\n  return (\r\n    <option\r\n      className=\"blockSelectItem\"\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      value={props.item.brand_id}\r\n      name={props.item.brand_name}\r\n    >\r\n      {props.item.brand_name}\r\n    </option>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputBrandName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      data: null,\r\n      brand_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param.length > 2) {\r\n      this.search(param);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    if (val !== \"\") {\r\n      this.props.addBrandName(\r\n        this.state.data.filter((item) => item.brand_id === +val)[0]\r\n      );\r\n      if (val !== this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async request(token, param) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND_GROSS`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows === null) {\r\n          this.setState({\r\n            brand_arr: [],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n            brand_arr: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowBlockSelect: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.data !== null\r\n        ? this.state.data.filter((item) => {\r\n            const itemString = item.brand_name.toString();\r\n            return itemString\r\n              .toLowerCase()\r\n              .includes(param.toString().toLowerCase());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        brand_arr: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        brand_arr: data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.update !== this.props.update) {\r\n      this.setState({ inputRequest: \"\" });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть назву мережі...\"\r\n          type=\"text\"\r\n          id=\"brand_name_val\"\r\n          onBlur={this.props.onBlur}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.brand_arr != null ? (\r\n              this.state.brand_arr.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemBrandName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.props.addClientID(Number(0));\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputRequest: this.state.inputResult,\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (!e) return;\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    let client_id =\r\n      currentVal.client_id === undefined\r\n        ? e.currentTarget.getAttribute(\"name\")\r\n        : currentVal.client_id;\r\n\r\n    console.log(e.currentTarget.getAttribute(\"name\"), client_id, \"client_id\");\r\n\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addIdentCode(Number(currentVal.ident_code));\r\n      this.props.addClientID(Number(client_id));\r\n      this.setState({\r\n        inputResult: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        inputRequest: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        isShowBlockSelect: false,\r\n        // isShowInputResult: true,\r\n        isShowInputRequest: true,\r\n\r\n        selected: true,\r\n      });\r\n      // if (val != this.state.inputRequest) {\r\n      //   this.request(this.props.token, val, false);\r\n      // }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross `;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          // mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        {/*<input*/}\r\n        {/*    className={`${this.state.selected ? 'selected ' : ''}${this.state.isShowInputRequest ? '' : 'dn '}form-control`}*/}\r\n        {/*    placeholder=\"Введіть перші три цифри...\" type=\"text\"*/}\r\n        {/*    onBlur={this.onBlurAutocompleteInput}*/}\r\n        {/*    onChange={this.onChangeAutocompleteInput}*/}\r\n        {/*    onClick={this.onClickAutocompleteInput}*/}\r\n        {/*    value={this.state.inputRequest}*/}\r\n        {/*/>*/}\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputMerchantName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      merchant_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    this.search(param);\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      this.props.addTspName(val);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      merchant_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = +this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n\r\n    if (this.state.merchant_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.merchant_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.merchant_list.TableRows,\r\n            merchant_arr: response.data.merchant_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (true) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.merchant_arr !== null\r\n        ? this.state.merchant_arr.filter((item) => {\r\n            const itemString = item.merchant_id.toString();\r\n            return itemString.includes(param.toString());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token, \"\", false)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemMerchantName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputTerminalName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      terminal_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.search(param);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTerminal`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      terminal_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_name) {\r\n      body.merchant_id = this.props.tsp_name;\r\n    }\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.terminal_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.terminal_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.terminal_list.TableRows,\r\n            terminal_arr: response.data.terminal_list.TableRows,\r\n            isShowBlockSelect: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data = this.state.terminal_arr\r\n      ? this.state.terminal_arr.filter((item) => {\r\n          const itemString = item.terminal_id.toString();\r\n          return itemString.includes(param.toString());\r\n        })\r\n      : null;\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({ data });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control terminal-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTerminalName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMccCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.mcc_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addMccCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addMccCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            data: [{ mcc_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть код...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <ItemMccCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_TERMINAL_SYSTEM: null,\r\n      isShowSelectDICT_MERCHANT_SYSTEM: false,\r\n\r\n      DICT_MERCHANT_SYSTEM: null,\r\n      isShowSelectDICT_TERMINAL_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        institution_id: 0,\r\n        report_type_id: \"REPORT_FIX_COMMISSION\",\r\n        date_from: `${new Date().getFullYear()}${\r\n          new Date().getMonth() + 1 < 10\r\n            ? \"0\" + (new Date().getMonth() + 1)\r\n            : new Date().getMonth() + 1\r\n        }01`,\r\n        date_to: \"20211224\",\r\n        date_type_id: 1,\r\n        format_type_id: 1,\r\n        terminal_type_id: 2,\r\n      },\r\n      date_from: `${new Date().getFullYear()}${\r\n        new Date().getMonth() + 1 < 10\r\n          ? \"0\" + (new Date().getMonth() + 1)\r\n          : new Date().getMonth() + 1\r\n      }01`,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_toValidation: true,\r\n\r\n      isForm_toValidation: true,\r\n\r\n      isDate_month_Validation: true,\r\n\r\n      DICT_MCC_SYSTEM: null,\r\n      isShowSelectDICT_MCC_SYSTEM: false,\r\n\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      error_text: \"Заповніть, будь ласка, дати!\",\r\n      isSuccess: false,\r\n      merchant_error: \"\",\r\n      date_from_default: `${new Date().getFullYear()}-${\r\n        new Date().getMonth() + 1 < 10\r\n          ? \"0\" + (new Date().getMonth() + 1)\r\n          : new Date().getMonth() + 1\r\n      }-01`,\r\n    };\r\n    this.myRef = React.createRef();\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows.length === 1) {\r\n          const param = response.data.Table.TableRows[0].institution_id;\r\n          let inputDataObj = this.state.AcquiringReportsCriteria;\r\n          inputDataObj.institution_id = param;\r\n\r\n          this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj,\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isInstitution_idValidation: true,\r\n            institution_id: param,\r\n          });\r\n          // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n        }\r\n\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MERCHANT_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_MERCHANT_SYSTEM: response.data.merchant_list.TableRows,\r\n          isShowSelectDICT_MERCHANT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_TERMINAL_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.Table.TableRows,\r\n            DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n            isShowSelectDICT_TERMINAL_SYSTEM: true,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MCC_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      terminal_id: +this.state.AcquiringReportsCriteria.tsp_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_TERMINAL_SYSTEM: response.data.mcc_list.TableRows,\r\n          isShowSelectDICT_MCC_SYSTEM: true,\r\n          DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        // this.setState({isSuccess: true})\r\n        // this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    let param = e.target.value;\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = param;\r\n\r\n    if (param == \"\") {\r\n      console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\"\r\n    ) {\r\n      console.log(\"inputValue: \", inputValue);\r\n      inputDataObj[apiName] = inputValue;\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(\"here:\", this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  };\r\n\r\n  sendOptionToServer() {\r\n    if (\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation &&\r\n      this.state.isForm_toValidation &&\r\n      this.state.isDate_month_Validation\r\n    ) {\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCheckId() {\r\n    this.checkMerchantID().then((res) => {\r\n      if (res.data.ErrorStatus.ErrorCode !== 0) {\r\n        this.setState({\r\n          merchant_error: res.data.ErrorStatus.ErrorMessage,\r\n          isShowPopupError: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async checkMerchantID() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.tsp_id) {\r\n      userBody.client_id = +this.state.tsp_id;\r\n    } else if (this.state.ident_code) {\r\n      userBody.client_id = +this.state.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n\r\n    return await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  defineValidationInputs = () => {\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({ isDate_fromValidation: false });\r\n    }\r\n    if (this.state.date_to === null || this.state.date_to === \"\") {\r\n      this.setState({ isDate_toValidation: false });\r\n    }\r\n\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n    if (\r\n      this.state.AcquiringReportsCriteria.tsp_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.network_brand_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.ident_code == 0\r\n    ) {\r\n      this.setState({ isForm_toValidation: false });\r\n    } else {\r\n      this.setState({ isForm_toValidation: true });\r\n    }\r\n\r\n    this.setState({}, () => this.sendOptionToServer());\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      console.log(this.state.currentTsp);\r\n      console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      console.log(item);\r\n\r\n      console.log(item.tsp_id);\r\n      console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період звіту</label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                console.log(acquiring_type_id);\r\n                console.log(report_period_type_id);\r\n                console.log(report_format_id);\r\n                console.log(channel_type_id);\r\n                console.log(file_name_mask);\r\n                console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     console.log(item);\r\n        //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //console.log(e.target.parentElement.className);\r\n    //console.log(this.myRef.current.className);\r\n    // console.log(this.myRef);\r\n    // console.log(typeof this.myRef);\r\n    // console.log(this.myRef != null);\r\n    //console.log(this.myRef.current != null);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.parentElement);\r\n    // console.log(e.target.parentElement.className);\r\n    // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelectDICT_MCC: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  //\r\n  addMerchantName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.merchant_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTerminalName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.terminal_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTspName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addBrandName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.network_brand_id = val.brand_id;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addIdentCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.ident_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addClientID = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addMccCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.mcc_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n\r\n  handleSelect = (ev) => {\r\n    let inputValue;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    if (ev.length === 0) {\r\n      inputValue = 0;\r\n    } else {\r\n      inputValue = ev.map((i) => i.value).join(\",\");\r\n    }\r\n    inputDataObj.payment_system_id = inputValue;\r\n    this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring REPORT_ACQ_DETAILED\">\r\n        {this.state.isSuccess ? (\r\n          <Alert variant={\"success\"}>\r\n            Звіт Виписка операцій успішно сформована. Перейдіть по{\" \"}\r\n            <Alert.Link href=\"/dashboard/REPORTS_ACQUIRING_MONITOR\">\r\n              лінку\r\n            </Alert.Link>\r\n            . Для перегляду звіта.\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter justify-content-between\">\r\n          <div className=\"coverInput col-5\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <p className=\"error\">\r\n              {this.state.isInstitution_idValidation\r\n                ? null\r\n                : this.state.error_text}\r\n            </p>\r\n\r\n            <div className=\"coverInput col-12\">\r\n              <div className=\"coverInput col-12\">\r\n                <div className=\"coverDate\">\r\n                  {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                  {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                  <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                  <select\r\n                    onChange={this.changeInput}\r\n                    apiName=\"date_type_id\"\r\n                    id=\"date_type_id\"\r\n                    className={`${\r\n                      this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                    } form-select`}\r\n                    title=\"DICT_DATE_TYPE\"\r\n                  >\r\n                    {this.state.isShowSelectDICT_DATE_TYPE\r\n                      ? this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                          return (\r\n                            <OptionItemDICT_DATE_TYPE\r\n                              key={index}\r\n                              optionItem={item}\r\n                            />\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </select>\r\n                  <p className=\"error\">\r\n                    {this.state.isDate_type_idValidation\r\n                      ? null\r\n                      : this.state.error_text}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"coverInput col-11\">\r\n                <span>Період звіту</span>\r\n                <div className=\"row\">\r\n                  <div className=\"coverDate col-6\">\r\n                    <label htmlFor=\"date_report_from\">З</label>\r\n                    <input\r\n                      onChange={this.changeInputDateReport_from}\r\n                      apiName=\"date_from\"\r\n                      className={`${\r\n                        this.state.isDate_fromValidation ? \"\" : \"validError\"\r\n                      } customInput form-control`}\r\n                      id=\"date_from\"\r\n                      type=\"date\"\r\n                      defaultValue={this.state.date_from_default}\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverDate col-6\">\r\n                    <label htmlFor=\"date_report_to\">По</label>\r\n                    <input\r\n                      onChange={this.changeInputDateReport_to}\r\n                      apiName=\"date_to\"\r\n                      className={`${\r\n                        this.state.isDate_toValidation ? \"\" : \"validError\"\r\n                      } customInput form-control`}\r\n                      id=\"date_to\"\r\n                      type=\"date\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <p className=\"error\">\r\n                  {this.state.isDate_fromValidation &&\r\n                  this.state.isDate_toValidation\r\n                    ? null\r\n                    : \"Заповніть, будь ласка, датy!\"}\r\n                  {this.state.isDate_month_Validation\r\n                    ? null\r\n                    : \"Максимальний термін 31 день!\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Побудувати звіт\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-danger\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">{this.state.merchant_error}</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS;\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MERCHANT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.merchant_id}>\r\n      {props.optionItem.merchant_id}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TERMINAL_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_code}>\r\n      {props.optionItem.mcc_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MCC_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_id}>{props.optionItem.mccs_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemMccCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemMerchantName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.merchant_id}\r\n      name={props.item.merchant_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.merchant_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTerminalName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.terminal_id}\r\n      name={props.item.terminal_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.terminal_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      data-id={props.item.institution_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      data-id={props.item.client_id}\r\n    >\r\n      {props.item.ident_code} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(\"param\", param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    this.request(this.props.token, param, true);\r\n    // }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // this.props.onBlur();\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    let institution = e.currentTarget.getAttribute(\"data-id\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        //console.log(typeof val);\r\n        this.setState({\r\n          inputResult: `${name} - ${institution}`,\r\n          inputRequest: `${name} - ${institution}`,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть перші букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect\r\n            ? this.state.data != null\r\n              ? this.state.data.map((item, index) => {\r\n                  return (\r\n                    <BlockSelectItemTspName\r\n                      key={index}\r\n                      item={item}\r\n                      onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                    />\r\n                  );\r\n                })\r\n              : null\r\n            : null}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst BlockSelectItemBrandName = (props) => {\r\n  return (\r\n    <option\r\n      className=\"blockSelectItem\"\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      value={props.item.brand_id}\r\n      name={props.item.brand_name}\r\n    >\r\n      {props.item.brand_name}\r\n    </option>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputBrandName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      data: null,\r\n      brand_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param.length > 2) {\r\n      this.search(param);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    if (val !== \"\") {\r\n      this.props.addBrandName(\r\n        this.state.data.filter((item) => item.brand_id === +val)[0]\r\n      );\r\n      if (val !== this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async request(token, param) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND_GROSS`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows === null) {\r\n          this.setState({\r\n            brand_arr: [],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n            brand_arr: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowBlockSelect: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.data !== null\r\n        ? this.state.data.filter((item) => {\r\n            const itemString = item.brand_name.toString();\r\n            return itemString\r\n              .toLowerCase()\r\n              .includes(param.toString().toLowerCase());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        brand_arr: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        brand_arr: data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.update !== this.props.update) {\r\n      this.setState({ inputRequest: \"\" });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть назву мережі...\"\r\n          type=\"text\"\r\n          id=\"brand_name_val\"\r\n          onBlur={this.props.onBlur}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.brand_arr != null ? (\r\n              this.state.brand_arr.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemBrandName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.props.addClientID(Number(0));\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputRequest: this.state.inputResult,\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (!e) return;\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    let client_id =\r\n      currentVal.client_id === undefined\r\n        ? e.currentTarget.getAttribute(\"name\")\r\n        : currentVal.client_id;\r\n\r\n    console.log(e.currentTarget.getAttribute(\"name\"), client_id, \"client_id\");\r\n\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addIdentCode(Number(currentVal.ident_code));\r\n      this.props.addClientID(Number(client_id));\r\n      this.setState({\r\n        inputResult: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        inputRequest: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        isShowBlockSelect: false,\r\n        // isShowInputResult: true,\r\n        isShowInputRequest: true,\r\n\r\n        selected: true,\r\n      });\r\n      // if (val != this.state.inputRequest) {\r\n      //   this.request(this.props.token, val, false);\r\n      // }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross `;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          // mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        {/*<input*/}\r\n        {/*    className={`${this.state.selected ? 'selected ' : ''}${this.state.isShowInputRequest ? '' : 'dn '}form-control`}*/}\r\n        {/*    placeholder=\"Введіть перші три цифри...\" type=\"text\"*/}\r\n        {/*    onBlur={this.onBlurAutocompleteInput}*/}\r\n        {/*    onChange={this.onChangeAutocompleteInput}*/}\r\n        {/*    onClick={this.onClickAutocompleteInput}*/}\r\n        {/*    value={this.state.inputRequest}*/}\r\n        {/*/>*/}\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputMerchantName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      merchant_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    this.search(param);\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      this.props.addTspName(val);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      merchant_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = +this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n\r\n    if (this.state.merchant_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.merchant_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.merchant_list.TableRows,\r\n            merchant_arr: response.data.merchant_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (true) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.merchant_arr !== null\r\n        ? this.state.merchant_arr.filter((item) => {\r\n            const itemString = item.merchant_id.toString();\r\n            return itemString.includes(param.toString());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token, \"\", false)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemMerchantName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputTerminalName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      terminal_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.search(param);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTerminal`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      terminal_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_name) {\r\n      body.merchant_id = this.props.tsp_name;\r\n    }\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.terminal_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.terminal_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.terminal_list.TableRows,\r\n            terminal_arr: response.data.terminal_list.TableRows,\r\n            isShowBlockSelect: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data = this.state.terminal_arr\r\n      ? this.state.terminal_arr.filter((item) => {\r\n          const itemString = item.terminal_id.toString();\r\n          return itemString.includes(param.toString());\r\n        })\r\n      : null;\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({ data });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control terminal-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTerminalName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMccCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.mcc_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addMccCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addMccCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            data: [{ mcc_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть код...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <ItemMccCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_TERMINAL_SYSTEM: null,\r\n      isShowSelectDICT_MERCHANT_SYSTEM: false,\r\n\r\n      DICT_MERCHANT_SYSTEM: null,\r\n      isShowSelectDICT_TERMINAL_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        institution_id: 0,\r\n        report_type_id: \"REPORT_ACQ_DETAILED\",\r\n        date_from: \"20211224\",\r\n        date_to: \"20211224\",\r\n        date_type_id: 1,\r\n        format_type_id: 1,\r\n        terminal_type_id: 2,\r\n        no_transactions: 0\r\n      },\r\n\r\n\r\n      no_transactions: false,\r\n      date_from: null,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_toValidation: true,\r\n      isForm_toValidation: true,\r\n\r\n      isDate_month_Validation: true,\r\n\r\n\r\n      DICT_MCC_SYSTEM: null,\r\n      isShowSelectDICT_MCC_SYSTEM: false,\r\n\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      error_text: \"Заповніть, будь ласка, дати!\",\r\n      isSuccess: false,\r\n      merchant_error: \"\",\r\n    };\r\n    this.myRef = React.createRef();\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows.length === 1) {\r\n          const param = response.data.Table.TableRows[0].institution_id;\r\n          let inputDataObj = this.state.AcquiringReportsCriteria;\r\n          inputDataObj.institution_id = param;\r\n\r\n          this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj,\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isInstitution_idValidation: true,\r\n            institution_id: param,\r\n          });\r\n          // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n        }\r\n\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MERCHANT_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_MERCHANT_SYSTEM: response.data.merchant_list.TableRows,\r\n          isShowSelectDICT_MERCHANT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_TERMINAL_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.Table.TableRows,\r\n            DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n            isShowSelectDICT_TERMINAL_SYSTEM: true,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MCC_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      terminal_id: +this.state.AcquiringReportsCriteria.tsp_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_TERMINAL_SYSTEM: response.data.mcc_list.TableRows,\r\n          isShowSelectDICT_MCC_SYSTEM: true,\r\n          DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        // this.setState({isSuccess: true})\r\n        // this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    let param = e.target.value;\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = param;\r\n\r\n    if (param == \"\") {\r\n      console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\"\r\n    ) {\r\n      console.log(\"inputValue: \", inputValue);\r\n      inputDataObj[apiName] = inputValue;\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(\"here:\", this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  };\r\n\r\n  sendOptionToServer() {\r\n    if (\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation &&\r\n      this.state.isForm_toValidation &&\r\n      this.state.isDate_month_Validation\r\n    ) {\r\n      this.state.AcquiringReportsCriteria.no_transactions = this.state.no_transactions ? 1 : 0;\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCheckId() {\r\n    this.checkMerchantID().then((res) => {\r\n      if (res.data.ErrorStatus.ErrorCode !== 0) {\r\n        this.setState({\r\n          merchant_error: res.data.ErrorStatus.ErrorMessage,\r\n          isShowPopupError: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async checkMerchantID() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.tsp_id) {\r\n      userBody.client_id = +this.state.tsp_id;\r\n    } else if (this.state.ident_code) {\r\n      userBody.client_id = +this.state.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n\r\n    return await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  defineValidationInputs = () => {\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    \r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({ isDate_fromValidation: false });\r\n    }\r\n    if (this.state.date_to === null || this.state.date_to === \"\") {\r\n      this.setState({ isDate_toValidation: false });\r\n    }\r\n\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n    if (\r\n      this.state.AcquiringReportsCriteria.tsp_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.network_brand_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.ident_code == 0\r\n    ) {\r\n      this.setState({ isForm_toValidation: false });\r\n    } else {\r\n      this.setState({ isForm_toValidation: true });\r\n    }\r\n\r\n    this.setState({}, () => this.sendOptionToServer());\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      console.log(this.state.currentTsp);\r\n      console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      console.log(item);\r\n\r\n      console.log(item.tsp_id);\r\n      console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період звіту</label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                console.log(acquiring_type_id);\r\n                console.log(report_period_type_id);\r\n                console.log(report_format_id);\r\n                console.log(channel_type_id);\r\n                console.log(file_name_mask);\r\n                console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     console.log(item);\r\n        //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //console.log(e.target.parentElement.className);\r\n    //console.log(this.myRef.current.className);\r\n    // console.log(this.myRef);\r\n    // console.log(typeof this.myRef);\r\n    // console.log(this.myRef != null);\r\n    //console.log(this.myRef.current != null);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.parentElement);\r\n    // console.log(e.target.parentElement.className);\r\n    // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelectDICT_MCC: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  //\r\n  addMerchantName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.merchant_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTerminalName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.terminal_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTspName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addBrandName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.network_brand_id = val.brand_id;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addIdentCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.ident_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addClientID = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addMccCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.mcc_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n\r\n  handleSelect = (ev) => {\r\n    let inputValue;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    if (ev.length === 0) {\r\n      inputValue = 0;\r\n    } else {\r\n      inputValue = ev.map((i) => i.value).join(\",\");\r\n    }\r\n    inputDataObj.payment_system_id = inputValue;\r\n    this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring REPORT_ACQ_DETAILED\">\r\n        {this.state.isSuccess ? (\r\n          <Alert variant={\"success\"}>\r\n            Звіт Виписка операцій успішно сформована. Перейдіть по{\" \"}\r\n            <Alert.Link href=\"/dashboard/REPORTS_ACQUIRING_MONITOR\">\r\n              лінку\r\n            </Alert.Link>\r\n            . Для перегляду звіта.\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter justify-content-between\">\r\n          <div className=\"coverInput col-5\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <p className=\"error\">\r\n              {this.state.isInstitution_idValidation\r\n                ? null\r\n                : this.state.error_text}\r\n            </p>\r\n\r\n            <div className=\"coverInput col-12\">\r\n              <div className=\"coverInput col-12\">\r\n                <div className=\"coverDate\">\r\n                  {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                  {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                  <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                  <select\r\n                    onChange={this.changeInput}\r\n                    apiName=\"date_type_id\"\r\n                    id=\"date_type_id\"\r\n                    className={`${\r\n                      this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                    } form-select`}\r\n                    title=\"DICT_DATE_TYPE\"\r\n                  >\r\n                    {this.state.isShowSelectDICT_DATE_TYPE\r\n                      ? this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                          return (\r\n                            <OptionItemDICT_DATE_TYPE\r\n                              key={index}\r\n                              optionItem={item}\r\n                            />\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </select>\r\n                  <p className=\"error\">\r\n                    {this.state.isDate_type_idValidation\r\n                      ? null\r\n                      : this.state.error_text}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"base-field\">\r\n                <label htmlFor=\"base\" style={{fontSize: \"18px\", cursor: \"pointer\"}}>з нульовими оборотами</label>\r\n                <input\r\n                  apiName=\"base\"\r\n                  id=\"base\"\r\n                  type=\"checkbox\"\r\n                  checked={this.state.no_transactions}\r\n                  style={{width: \"15px\", height: \"15px\"}}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      no_transactions: !this.state.no_transactions,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"coverInput col-11\">\r\n                <span>Період звіту</span>\r\n                <div className=\"row\">\r\n                  <div className=\"coverDate col-6\">\r\n                    <label htmlFor=\"date_report_from\">З</label>\r\n                    <input\r\n                      onChange={this.changeInputDateReport_from}\r\n                      apiName=\"date_from\"\r\n                      className={`${\r\n                        this.state.isDate_fromValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                      } customInput form-control`}\r\n                      id=\"date_from\"\r\n                      type=\"date\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverDate col-6\">\r\n                    <label htmlFor=\"date_report_to\">По</label>\r\n                    <input\r\n                      onChange={this.changeInputDateReport_to}\r\n                      apiName=\"date_to\"\r\n                      className={`${\r\n                        this.state.isDate_toValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                      } customInput form-control`}\r\n                      id=\"date_to\"\r\n                      type=\"date\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <p className=\"error\">\r\n                  {this.state.isDate_fromValidation &&\r\n                  this.state.isDate_toValidation\r\n                    ? null\r\n                    : \"Заповніть, будь ласка, дати!\"}\r\n                    {this.state.isDate_month_Validation\r\n                  ? null\r\n                  : \"Максимальний термін 31 день!\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n\r\n            {/* <label htmlFor=\"INN\">ІНН/ЄДРПОУ</label>\r\n            <AutocompleteInputIdentCode\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addIdentCode={this.addIdentCode}\r\n              addClientID={this.addClientID}\r\n              isError={this.state.isForm_toValidation}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n            />\r\n            <label htmlFor=\"tsp_name\">Назва ТСП</label>\r\n            <AutocompleteInputTspName\r\n              isError={this.state.isForm_toValidation}\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTspName}\r\n              tsp_name={this.state.AcquiringReportsCriteria.tsp_id}\r\n            />\r\n\r\n            <label htmlFor=\"tsp_name\">Назва Мережі</label>\r\n            <AutocompleteInputBrandName\r\n              token={this.props.store.userState.token}\r\n              addBrandName={this.addBrandName}\r\n              update={null}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n\r\n            <p className=\"error\">\r\n              {this.state.isForm_toValidation\r\n                ? null\r\n                : \"Заповніть, будь ласка, одне з 3-х значень\"}\r\n            </p> */}\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"ident_code\" id=\"INN\" type=\"text\"/>*/}\r\n          </div>\r\n          \r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Побудувати звіт\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-danger\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">{this.state.merchant_error}</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS;\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MERCHANT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.merchant_id}>\r\n      {props.optionItem.merchant_id}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TERMINAL_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_code}>\r\n      {props.optionItem.mcc_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MCC_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_id}>{props.optionItem.mccs_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemMccCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemMerchantName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.merchant_id}\r\n      name={props.item.merchant_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.merchant_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTerminalName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.terminal_id}\r\n      name={props.item.terminal_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.terminal_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      data-id={props.item.institution_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      data-id={props.item.client_id}\r\n    >\r\n      {props.item.ident_code} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(\"param\", param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    this.request(this.props.token, param, true);\r\n    // }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // this.props.onBlur();\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    let institution = e.currentTarget.getAttribute(\"data-id\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        //console.log(typeof val);\r\n        this.setState({\r\n          inputResult: `${name} - ${institution}`,\r\n          inputRequest: `${name} - ${institution}`,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть перші букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect\r\n            ? this.state.data != null\r\n              ? this.state.data.map((item, index) => {\r\n                  return (\r\n                    <BlockSelectItemTspName\r\n                      key={index}\r\n                      item={item}\r\n                      onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                    />\r\n                  );\r\n                })\r\n              : null\r\n            : null}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst BlockSelectItemBrandName = (props) => {\r\n  return (\r\n    <option\r\n      className=\"blockSelectItem\"\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      value={props.item.brand_id}\r\n      name={props.item.brand_name}\r\n    >\r\n      {props.item.brand_name}\r\n    </option>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputBrandName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      data: null,\r\n      brand_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param.length > 2) {\r\n      this.search(param);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    if (val !== \"\") {\r\n      this.props.addBrandName(\r\n        this.state.data.filter((item) => item.brand_id === +val)[0]\r\n      );\r\n      if (val !== this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async request(token, param) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND_GROSS`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows === null) {\r\n          this.setState({\r\n            brand_arr: [],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n            brand_arr: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowBlockSelect: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.data !== null\r\n        ? this.state.data.filter((item) => {\r\n            const itemString = item.brand_name.toString();\r\n            return itemString\r\n              .toLowerCase()\r\n              .includes(param.toString().toLowerCase());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        brand_arr: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        brand_arr: data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.update !== this.props.update) {\r\n      this.setState({ inputRequest: \"\" });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть назву мережі...\"\r\n          type=\"text\"\r\n          id=\"brand_name_val\"\r\n          onBlur={this.props.onBlur}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.brand_arr != null ? (\r\n              this.state.brand_arr.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemBrandName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.props.addClientID(Number(0));\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputRequest: this.state.inputResult,\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (!e) return;\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    let client_id =\r\n      currentVal.client_id === undefined\r\n        ? e.currentTarget.getAttribute(\"name\")\r\n        : currentVal.client_id;\r\n\r\n    console.log(e.currentTarget.getAttribute(\"name\"), client_id, \"client_id\");\r\n\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addIdentCode(Number(currentVal.ident_code));\r\n      this.props.addClientID(Number(client_id));\r\n      this.setState({\r\n        inputResult: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        inputRequest: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        isShowBlockSelect: false,\r\n        // isShowInputResult: true,\r\n        isShowInputRequest: true,\r\n\r\n        selected: true,\r\n      });\r\n      // if (val != this.state.inputRequest) {\r\n      //   this.request(this.props.token, val, false);\r\n      // }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross `;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          // mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        {/*<input*/}\r\n        {/*    className={`${this.state.selected ? 'selected ' : ''}${this.state.isShowInputRequest ? '' : 'dn '}form-control`}*/}\r\n        {/*    placeholder=\"Введіть перші три цифри...\" type=\"text\"*/}\r\n        {/*    onBlur={this.onBlurAutocompleteInput}*/}\r\n        {/*    onChange={this.onChangeAutocompleteInput}*/}\r\n        {/*    onClick={this.onClickAutocompleteInput}*/}\r\n        {/*    value={this.state.inputRequest}*/}\r\n        {/*/>*/}\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputMerchantName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      merchant_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    this.search(param);\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      this.props.addTspName(val);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      merchant_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = +this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n\r\n    if (this.state.merchant_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.merchant_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.merchant_list.TableRows,\r\n            merchant_arr: response.data.merchant_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (true) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.merchant_arr !== null\r\n        ? this.state.merchant_arr.filter((item) => {\r\n            const itemString = item.merchant_id.toString();\r\n            return itemString.includes(param.toString());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token, \"\", false)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemMerchantName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputTerminalName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      terminal_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.search(param);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTerminal`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      terminal_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_name) {\r\n      body.merchant_id = this.props.tsp_name;\r\n    }\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.terminal_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.terminal_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.terminal_list.TableRows,\r\n            terminal_arr: response.data.terminal_list.TableRows,\r\n            isShowBlockSelect: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data = this.state.terminal_arr\r\n      ? this.state.terminal_arr.filter((item) => {\r\n          const itemString = item.terminal_id.toString();\r\n          return itemString.includes(param.toString());\r\n        })\r\n      : null;\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({ data });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control terminal-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTerminalName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMccCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.mcc_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addMccCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addMccCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            data: [{ mcc_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть код...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <ItemMccCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_TERMINAL_SYSTEM: null,\r\n      isShowSelectDICT_MERCHANT_SYSTEM: false,\r\n\r\n      DICT_MERCHANT_SYSTEM: null,\r\n      isShowSelectDICT_TERMINAL_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        institution_id: 0,\r\n        report_type_id: \"REPORT_ACQ_DETAILED\",\r\n        date_from: \"20211224\",\r\n        date_to: \"20211224\",\r\n        date_type_id: 1,\r\n        format_type_id: 1,\r\n        terminal_type_id: 1,\r\n        no_transactions: 0,\r\n\r\n      },\r\n\r\n      date_from: null,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_month_Validation: true,\r\n\r\n      isDate_toValidation: true,\r\n      isForm_toValidation: true,\r\n\r\n      DICT_MCC_SYSTEM: null,\r\n      isShowSelectDICT_MCC_SYSTEM: false,\r\n\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      error_text: \"Заповніть, будь ласка, дати!\",\r\n      isSuccess: false,\r\n      merchant_error: \"\",\r\n      no_transactions: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows.length === 1) {\r\n          const param = response.data.Table.TableRows[0].institution_id;\r\n          let inputDataObj = this.state.AcquiringReportsCriteria;\r\n          inputDataObj.institution_id = param;\r\n\r\n          this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj,\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isInstitution_idValidation: true,\r\n            institution_id: param,\r\n          });\r\n          // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n        }\r\n\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MERCHANT_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_MERCHANT_SYSTEM: response.data.merchant_list.TableRows,\r\n          isShowSelectDICT_MERCHANT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_TERMINAL_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.Table.TableRows,\r\n            DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n            isShowSelectDICT_TERMINAL_SYSTEM: true,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MCC_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      terminal_id: +this.state.AcquiringReportsCriteria.tsp_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_TERMINAL_SYSTEM: response.data.mcc_list.TableRows,\r\n          isShowSelectDICT_MCC_SYSTEM: true,\r\n          DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        // this.setState({isSuccess: true})\r\n        // this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    let param = e.target.value;\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = param;\r\n\r\n    if (param == \"\") {\r\n      console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\"\r\n    ) {\r\n      console.log(\"inputValue: \", inputValue);\r\n      inputDataObj[apiName] = inputValue;\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(\"here:\", this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  };\r\n\r\n  sendOptionToServer() {\r\n    if (\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation &&\r\n      this.state.isForm_toValidation &&\r\n      this.state.isDate_month_Validation\r\n    ) {\r\n      this.state.AcquiringReportsCriteria.no_transactions = this.state.no_transactions ? 1 : 0;\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCheckId() {\r\n    this.checkMerchantID().then((res) => {\r\n      if (res.data.ErrorStatus.ErrorCode !== 0) {\r\n        this.setState({\r\n          merchant_error: res.data.ErrorStatus.ErrorMessage,\r\n          isShowPopupError: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async checkMerchantID() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.tsp_id) {\r\n      userBody.client_id = +this.state.tsp_id;\r\n    } else if (this.state.ident_code) {\r\n      userBody.client_id = +this.state.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n\r\n    return await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  defineValidationInputs = () => {\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({ isDate_fromValidation: false });\r\n    }\r\n    if (this.state.date_to === null || this.state.date_to === \"\") {\r\n      this.setState({ isDate_toValidation: false });\r\n    }\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n    if (\r\n      this.state.AcquiringReportsCriteria.tsp_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.network_brand_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.ident_code == 0\r\n    ) {\r\n      this.setState({ isForm_toValidation: false });\r\n    } else {\r\n      this.setState({ isForm_toValidation: true });\r\n    }\r\n\r\n    this.setState({}, () => this.sendOptionToServer());\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      console.log(this.state.currentTsp);\r\n      console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      console.log(item);\r\n\r\n      console.log(item.tsp_id);\r\n      console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період </label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                console.log(acquiring_type_id);\r\n                console.log(report_period_type_id);\r\n                console.log(report_format_id);\r\n                console.log(channel_type_id);\r\n                console.log(file_name_mask);\r\n                console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     console.log(item);\r\n        //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //console.log(e.target.parentElement.className);\r\n    //console.log(this.myRef.current.className);\r\n    // console.log(this.myRef);\r\n    // console.log(typeof this.myRef);\r\n    // console.log(this.myRef != null);\r\n    //console.log(this.myRef.current != null);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.parentElement);\r\n    // console.log(e.target.parentElement.className);\r\n    // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelectDICT_MCC: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  //\r\n  addMerchantName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.merchant_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTerminalName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.terminal_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTspName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addBrandName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.network_brand_id = val.brand_id;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addIdentCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.ident_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addClientID = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addMccCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.mcc_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n\r\n  handleSelect = (ev) => {\r\n    let inputValue;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    if (ev.length === 0) {\r\n      inputValue = 0;\r\n    } else {\r\n      inputValue = ev.map((i) => i.value).join(\",\");\r\n    }\r\n    inputDataObj.payment_system_id = inputValue;\r\n    this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring REPORT_ACQ_DETAILED\">\r\n        {this.state.isSuccess ? (\r\n          <Alert variant={\"success\"}>\r\n            Звіт Виписка операцій успішно сформована. Перейдіть по{\" \"}\r\n            <Alert.Link href=\"/dashboard/REPORTS_ACQUIRING_MONITOR\">\r\n              лінку\r\n            </Alert.Link>\r\n            . Для перегляду звіта.\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter justify-content-between\">\r\n          <div className=\"coverInput col-5\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <p className=\"error\">\r\n              {this.state.isInstitution_idValidation\r\n                ? null\r\n                : this.state.error_text}\r\n            </p>\r\n\r\n            <div className=\"coverInput col-12\">\r\n              <div className=\"coverInput col-12\">\r\n                <div className=\"coverDate\">\r\n                  {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                  {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                  <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                  <select\r\n                    onChange={this.changeInput}\r\n                    apiName=\"date_type_id\"\r\n                    id=\"date_type_id\"\r\n                    className={`${\r\n                      this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                    } form-select`}\r\n                    title=\"DICT_DATE_TYPE\"\r\n                  >\r\n                    {this.state.isShowSelectDICT_DATE_TYPE\r\n                      ? this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                          return (\r\n                            <OptionItemDICT_DATE_TYPE\r\n                              key={index}\r\n                              optionItem={item}\r\n                            />\r\n                          );\r\n                        })\r\n                      : null}\r\n                  </select>\r\n                  <p className=\"error\">\r\n                    {this.state.isDate_type_idValidation\r\n                      ? null\r\n                      : this.state.error_text}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"base-field\">\r\n                <label htmlFor=\"base\" style={{fontSize: \"18px\", cursor: \"pointer\"}}>з нульовими оборотами</label>\r\n                <input\r\n                  apiName=\"base\"\r\n                  id=\"base\"\r\n                  type=\"checkbox\"\r\n                  checked={this.state.no_transactions}\r\n                  style={{width: \"15px\", height: \"15px\"}}\r\n                  onChange={() =>\r\n                    this.setState({\r\n                      no_transactions: !this.state.no_transactions,\r\n                    })\r\n                  }\r\n                />\r\n              </div>\r\n              <div className=\"coverInput col-11\">\r\n                <span>Період звіту</span>\r\n                <div className=\"row\">\r\n                  <div className=\"coverDate col-6\">\r\n                    <label htmlFor=\"date_report_from\">З</label>\r\n                    <input\r\n                      onChange={this.changeInputDateReport_from}\r\n                      apiName=\"date_from\"\r\n                      className={`${\r\n                        this.state.isDate_fromValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                      } customInput form-control`}\r\n                      id=\"date_from\"\r\n                      type=\"date\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverDate col-6\">\r\n                    <label htmlFor=\"date_report_to\">По</label>\r\n                    <input\r\n                      onChange={this.changeInputDateReport_to}\r\n                      apiName=\"date_to\"\r\n                      className={`${\r\n                        this.state.isDate_toValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                      } customInput form-control`}\r\n                      id=\"date_to\"\r\n                      type=\"date\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <p className=\"error\">\r\n                  {this.state.isDate_fromValidation &&\r\n                  this.state.isDate_toValidation\r\n                    ? null\r\n                    : \"Заповніть, будь ласка, дати!\"}\r\n                  {this.state.isDate_month_Validation\r\n                    ? null\r\n                    : \"Максимальний термін 31 день!\"}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Побудувати звіт\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-danger\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">{this.state.merchant_error}</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS;\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MERCHANT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.merchant_id}>\r\n      {props.optionItem.merchant_id}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TERMINAL_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_code}>\r\n      {props.optionItem.mcc_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MCC_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_id}>{props.optionItem.mccs_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemMccCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemMerchantName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.merchant_id}\r\n      name={props.item.merchant_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.merchant_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTerminalName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.terminal_id}\r\n      name={props.item.terminal_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.terminal_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      data-id={props.item.institution_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      data-id={props.item.client_id}\r\n    >\r\n      {props.item.ident_code} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(\"param\", param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    this.request(this.props.token, param, true);\r\n    // }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // this.props.onBlur();\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    let institution = e.currentTarget.getAttribute(\"data-id\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        //console.log(typeof val);\r\n        this.setState({\r\n          inputResult: `${name} - ${institution}`,\r\n          inputRequest: `${name} - ${institution}`,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть перші букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect\r\n            ? this.state.data != null\r\n              ? this.state.data.map((item, index) => {\r\n                  return (\r\n                    <BlockSelectItemTspName\r\n                      key={index}\r\n                      item={item}\r\n                      onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                    />\r\n                  );\r\n                })\r\n              : null\r\n            : null}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst BlockSelectItemBrandName = (props) => {\r\n  return (\r\n    <option\r\n      className=\"blockSelectItem\"\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      value={props.item.brand_id}\r\n      name={props.item.brand_name}\r\n    >\r\n      {props.item.brand_name}\r\n    </option>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputBrandName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      data: null,\r\n      brand_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param.length > 2) {\r\n      this.search(param);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    if (val !== \"\") {\r\n      this.props.addBrandName(\r\n        this.state.data.filter((item) => item.brand_id === +val)[0]\r\n      );\r\n      if (val !== this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async request(token, param) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND_GROSS`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows === null) {\r\n          this.setState({\r\n            brand_arr: [],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n            brand_arr: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowBlockSelect: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.data !== null\r\n        ? this.state.data.filter((item) => {\r\n            const itemString = item.brand_name.toString();\r\n            return itemString\r\n              .toLowerCase()\r\n              .includes(param.toString().toLowerCase());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        brand_arr: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        brand_arr: data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.update !== this.props.update) {\r\n      this.setState({ inputRequest: \"\" });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть назву мережі...\"\r\n          type=\"text\"\r\n          id=\"brand_name_val\"\r\n          onBlur={this.props.onBlur}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.brand_arr != null ? (\r\n              this.state.brand_arr.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemBrandName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.props.addClientID(Number(0));\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputRequest: this.state.inputResult,\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (!e) return;\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    let client_id =\r\n      currentVal.client_id === undefined\r\n        ? e.currentTarget.getAttribute(\"name\")\r\n        : currentVal.client_id;\r\n\r\n        console.log(e.currentTarget.getAttribute(\"name\"), client_id, \"client_id\");\r\n\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addIdentCode(Number(currentVal.ident_code));\r\n      this.props.addClientID(Number(client_id));\r\n      this.setState({\r\n        inputResult: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        inputRequest: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        isShowBlockSelect: false,\r\n        // isShowInputResult: true,\r\n        isShowInputRequest: true,\r\n\r\n        selected: true,\r\n      });\r\n      // if (val != this.state.inputRequest) {\r\n      //   this.request(this.props.token, val, false);\r\n      // }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross `;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          // mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        {/*<input*/}\r\n        {/*    className={`${this.state.selected ? 'selected ' : ''}${this.state.isShowInputRequest ? '' : 'dn '}form-control`}*/}\r\n        {/*    placeholder=\"Введіть перші три цифри...\" type=\"text\"*/}\r\n        {/*    onBlur={this.onBlurAutocompleteInput}*/}\r\n        {/*    onChange={this.onChangeAutocompleteInput}*/}\r\n        {/*    onClick={this.onClickAutocompleteInput}*/}\r\n        {/*    value={this.state.inputRequest}*/}\r\n        {/*/>*/}\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputMerchantName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      merchant_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    this.search(param);\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      this.props.addTspName(val);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      merchant_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = +this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n\r\n    if (this.state.merchant_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.merchant_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.merchant_list.TableRows,\r\n            merchant_arr: response.data.merchant_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (true) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.merchant_arr !== null\r\n        ? this.state.merchant_arr.filter((item) => {\r\n            const itemString = item.merchant_id.toString();\r\n            return itemString.includes(param.toString());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token, \"\", false)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemMerchantName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputTerminalName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      terminal_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.search(param);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTerminal`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      terminal_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_name) {\r\n      body.merchant_id = this.props.tsp_name;\r\n    }\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.terminal_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.terminal_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.terminal_list.TableRows,\r\n            terminal_arr: response.data.terminal_list.TableRows,\r\n            isShowBlockSelect: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data = this.state.terminal_arr\r\n      ? this.state.terminal_arr.filter((item) => {\r\n          const itemString = item.terminal_id.toString();\r\n          return itemString.includes(param.toString());\r\n        })\r\n      : null;\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({ data });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control terminal-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTerminalName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMccCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.mcc_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addMccCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addMccCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            data: [{ mcc_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть код...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <ItemMccCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_TERMINAL_SYSTEM: null,\r\n      isShowSelectDICT_MERCHANT_SYSTEM: false,\r\n\r\n      DICT_MERCHANT_SYSTEM: null,\r\n      isShowSelectDICT_TERMINAL_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        institution_id: 0,\r\n        report_type_id: \"REPORT_GROSS_COMM\",\r\n        network_brand_id: 0,\r\n        tsp_id: 0,\r\n        date_from: \"20211224\",\r\n        date_to: \"20211224\",\r\n        date_type_id: 1,\r\n        ident_code: 0,\r\n        terminal_type_id: 1\r\n      },\r\n\r\n      date_from: null,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_month_Validation: true,\r\n      isDate_toValidation: true,\r\n      isForm_toValidation: true,\r\n\r\n      DICT_MCC_SYSTEM: null,\r\n      isShowSelectDICT_MCC_SYSTEM: false,\r\n\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      error_text: \"Заповніть, будь ласка, дати!\",\r\n      isSuccess: false,\r\n      merchant_error: \"\",\r\n    };\r\n    this.myRef = React.createRef();\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows.length === 1) {\r\n          const param = response.data.Table.TableRows[0].institution_id;\r\n          let inputDataObj = this.state.AcquiringReportsCriteria;\r\n          inputDataObj.institution_id = param;\r\n\r\n          this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj,\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isInstitution_idValidation: true,\r\n            institution_id: param,\r\n          });\r\n          // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n        }\r\n\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MERCHANT_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_MERCHANT_SYSTEM: response.data.merchant_list.TableRows,\r\n          isShowSelectDICT_MERCHANT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_TERMINAL_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.Table.TableRows,\r\n            DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n            isShowSelectDICT_TERMINAL_SYSTEM: true,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MCC_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      terminal_id: +this.state.AcquiringReportsCriteria.tsp_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_TERMINAL_SYSTEM: response.data.mcc_list.TableRows,\r\n          isShowSelectDICT_MCC_SYSTEM: true,\r\n          DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        // this.setState({isSuccess: true})\r\n        // this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    let param = e.target.value;\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = param;\r\n\r\n    if (param == \"\") {\r\n      console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\"\r\n    ) {\r\n      console.log(\"inputValue: \", inputValue);\r\n      inputDataObj[apiName] = inputValue;\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(\"here:\", this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  };\r\n\r\n  sendOptionToServer() {\r\n    if (\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation &&\r\n      this.state.isForm_toValidation \r\n    ) {\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCheckId() {\r\n    this.checkMerchantID().then((res) => {\r\n      if (res.data.ErrorStatus.ErrorCode !== 0) {\r\n        this.setState({\r\n          merchant_error: res.data.ErrorStatus.ErrorMessage,\r\n          isShowPopupError: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async checkMerchantID() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.tsp_id) {\r\n      userBody.client_id = +this.state.tsp_id;\r\n    } else if (this.state.ident_code) {\r\n      userBody.client_id = +this.state.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n\r\n    return await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  defineValidationInputs = () => {\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    \r\n\r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({ isDate_fromValidation: false });\r\n    }\r\n    if (this.state.date_to === null || this.state.date_to === \"\") {\r\n      this.setState({ isDate_toValidation: false });\r\n    }\r\n\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n    if (\r\n      this.state.AcquiringReportsCriteria.tsp_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.network_brand_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.ident_code == 0\r\n    ) {\r\n      this.setState({ isForm_toValidation: false });\r\n    } else {\r\n      this.setState({ isForm_toValidation: true });\r\n    }\r\n\r\n    this.setState({}, () => this.sendOptionToServer());\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      console.log(this.state.currentTsp);\r\n      console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      console.log(item);\r\n\r\n      console.log(item.tsp_id);\r\n      console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період звіту</label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                console.log(acquiring_type_id);\r\n                console.log(report_period_type_id);\r\n                console.log(report_format_id);\r\n                console.log(channel_type_id);\r\n                console.log(file_name_mask);\r\n                console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     console.log(item);\r\n        //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //console.log(e.target.parentElement.className);\r\n    //console.log(this.myRef.current.className);\r\n    // console.log(this.myRef);\r\n    // console.log(typeof this.myRef);\r\n    // console.log(this.myRef != null);\r\n    //console.log(this.myRef.current != null);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.parentElement);\r\n    // console.log(e.target.parentElement.className);\r\n    // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelectDICT_MCC: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  //\r\n  addMerchantName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.merchant_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTerminalName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.terminal_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTspName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addBrandName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.network_brand_id = val.brand_id;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addIdentCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.ident_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addClientID = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addMccCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.mcc_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n\r\n  handleSelect = (ev) => {\r\n    let inputValue;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    if (ev.length === 0) {\r\n      inputValue = 0;\r\n    } else {\r\n      inputValue = ev.map((i) => i.value).join(\",\");\r\n    }\r\n    inputDataObj.payment_system_id = inputValue;\r\n    this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring REPORT_GROSS_COMM\">\r\n        {this.state.isSuccess ? (\r\n          <Alert variant={\"success\"}>\r\n            Звіт Виписка операцій успішно сформована. Перейдіть по{\" \"}\r\n            <Alert.Link href=\"/dashboard/REPORTS_ACQUIRING_MONITOR\">\r\n              лінку\r\n            </Alert.Link>\r\n            . Для перегляду звіта.\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter justify-content-between\">\r\n          <div className=\"coverInput col-5\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <p className=\"error\">\r\n              {this.state.isInstitution_idValidation\r\n                ? null\r\n                : this.state.error_text}\r\n            </p>\r\n            <label htmlFor=\"INN\">ІНН/ЄДРПОУ</label>\r\n            <AutocompleteInputIdentCode\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addIdentCode={this.addIdentCode}\r\n              addClientID={this.addClientID}\r\n              isError={this.state.isForm_toValidation}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n            />\r\n            <label htmlFor=\"tsp_name\">Назва ТСП</label>\r\n            <AutocompleteInputTspName\r\n              isError={this.state.isForm_toValidation}\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTspName}\r\n              tsp_name={this.state.AcquiringReportsCriteria.tsp_id}\r\n            />\r\n\r\n            <label htmlFor=\"tsp_name\">Назва Мережі</label>\r\n            <AutocompleteInputBrandName\r\n              token={this.props.store.userState.token}\r\n              addBrandName={this.addBrandName}\r\n              update={null}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n\r\n            <p className=\"error\">\r\n              {this.state.isForm_toValidation\r\n                ? null\r\n                : \"Заповніть, будь ласка, одне з 3-х значень\"}\r\n            </p>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"ident_code\" id=\"INN\" type=\"text\"/>*/}\r\n          </div>\r\n          <div className=\"coverInput col-5\">\r\n            <div className=\"coverInput col-11\">\r\n              <div className=\"coverDate\">\r\n                {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                <select\r\n                  onChange={this.changeInput}\r\n                  apiName=\"date_type_id\"\r\n                  id=\"date_type_id\"\r\n                  className={`${\r\n                    this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                  } form-select`}\r\n                  title=\"DICT_DATE_TYPE\"\r\n                >\r\n                  {this.state.isShowSelectDICT_DATE_TYPE\r\n                    ? this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                        return (\r\n                          <OptionItemDICT_DATE_TYPE\r\n                            key={index}\r\n                            optionItem={item}\r\n                          />\r\n                        );\r\n                      })\r\n                    : null}\r\n                </select>\r\n                <p className=\"error\">\r\n                  {this.state.isDate_type_idValidation\r\n                    ? null\r\n                    : this.state.error_text}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"coverInput col-11\">\r\n              <span>Період звіту</span>\r\n              <div className=\"row\">\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_from\">З</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_from}\r\n                    apiName=\"date_from\"\r\n                    className={`${\r\n                      this.state.isDate_fromValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_from\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_to\">По</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_to}\r\n                    apiName=\"date_to\"\r\n                    className={`${\r\n                      this.state.isDate_toValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_to\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <p className=\"error\">\r\n                {this.state.isDate_fromValidation &&\r\n                this.state.isDate_toValidation\r\n                  ? null\r\n                  : \"Заповніть, будь ласка, дати!\"}\r\n                  {this.state.isDate_month_Validation\r\n                  ? null\r\n                  : \"Максимальний термін 31 день!\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Побудувати звіт\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-danger\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">{this.state.merchant_error}</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS;\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MERCHANT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.merchant_id}>\r\n      {props.optionItem.merchant_id}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TERMINAL_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_code}>\r\n      {props.optionItem.mcc_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MCC_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_id}>{props.optionItem.mccs_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemMccCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemMerchantName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.merchant_id}\r\n      name={props.item.merchant_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.merchant_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTerminalName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.terminal_id}\r\n      name={props.item.terminal_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.terminal_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      data-id={props.item.institution_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      data-id={props.item.client_id}\r\n    >\r\n      {props.item.ident_code} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(\"param\", param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    this.request(this.props.token, param, true);\r\n    // }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // this.props.onBlur();\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    let institution = e.currentTarget.getAttribute(\"data-id\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        //console.log(typeof val);\r\n        this.setState({\r\n          inputResult: `${name} - ${institution}`,\r\n          inputRequest: `${name} - ${institution}`,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть перші букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect\r\n            ? this.state.data != null\r\n              ? this.state.data.map((item, index) => {\r\n                  return (\r\n                    <BlockSelectItemTspName\r\n                      key={index}\r\n                      item={item}\r\n                      onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                    />\r\n                  );\r\n                })\r\n              : null\r\n            : null}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst BlockSelectItemBrandName = (props) => {\r\n  return (\r\n    <option\r\n      className=\"blockSelectItem\"\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      value={props.item.brand_id}\r\n      name={props.item.brand_name}\r\n    >\r\n      {props.item.brand_name}\r\n    </option>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputBrandName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      data: null,\r\n      brand_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param.length > 2) {\r\n      this.search(param);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    if (val !== \"\") {\r\n      this.props.addBrandName(\r\n        this.state.data.filter((item) => item.brand_id === +val)[0]\r\n      );\r\n      if (val !== this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  async request(token, param) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND_GROSS`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows === null) {\r\n          this.setState({\r\n            brand_arr: [],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n            brand_arr: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        this.setState({\r\n          isLoading: false,\r\n          isShowBlockSelect: true,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.data !== null\r\n        ? this.state.data.filter((item) => {\r\n            const itemString = item.brand_name.toString();\r\n            return itemString\r\n              .toLowerCase()\r\n              .includes(param.toString().toLowerCase());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        brand_arr: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        brand_arr: data,\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    if (prevProps.update !== this.props.update) {\r\n      this.setState({ inputRequest: \"\" });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть назву мережі...\"\r\n          type=\"text\"\r\n          id=\"brand_name_val\"\r\n          onBlur={this.props.onBlur}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.brand_arr != null ? (\r\n              this.state.brand_arr.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemBrandName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.props.addClientID(Number(0));\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputRequest: this.state.inputResult,\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (!e) return;\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    let client_id =\r\n      currentVal.client_id === undefined\r\n        ? e.currentTarget.getAttribute(\"name\")\r\n        : currentVal.client_id;\r\n\r\n        console.log(e.currentTarget.getAttribute(\"name\"), client_id, \"client_id\");\r\n\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addIdentCode(Number(currentVal.ident_code));\r\n      this.props.addClientID(Number(client_id));\r\n      this.setState({\r\n        inputResult: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        inputRequest: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        isShowBlockSelect: false,\r\n        // isShowInputResult: true,\r\n        isShowInputRequest: true,\r\n\r\n        selected: true,\r\n      });\r\n      // if (val != this.state.inputRequest) {\r\n      //   this.request(this.props.token, val, false);\r\n      // }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSPGross `;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          // mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        {/*<input*/}\r\n        {/*    className={`${this.state.selected ? 'selected ' : ''}${this.state.isShowInputRequest ? '' : 'dn '}form-control`}*/}\r\n        {/*    placeholder=\"Введіть перші три цифри...\" type=\"text\"*/}\r\n        {/*    onBlur={this.onBlurAutocompleteInput}*/}\r\n        {/*    onChange={this.onChangeAutocompleteInput}*/}\r\n        {/*    onClick={this.onClickAutocompleteInput}*/}\r\n        {/*    value={this.state.inputRequest}*/}\r\n        {/*/>*/}\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputMerchantName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      merchant_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    this.search(param);\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      this.props.addTspName(val);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      merchant_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = +this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n\r\n    if (this.state.merchant_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.merchant_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.merchant_list.TableRows,\r\n            merchant_arr: response.data.merchant_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (true) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.merchant_arr !== null\r\n        ? this.state.merchant_arr.filter((item) => {\r\n            const itemString = item.merchant_id.toString();\r\n            return itemString.includes(param.toString());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token, \"\", false)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemMerchantName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputTerminalName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      terminal_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.search(param);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTerminal`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      terminal_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_name) {\r\n      body.merchant_id = this.props.tsp_name;\r\n    }\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.terminal_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.terminal_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.terminal_list.TableRows,\r\n            terminal_arr: response.data.terminal_list.TableRows,\r\n            isShowBlockSelect: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data = this.state.terminal_arr\r\n      ? this.state.terminal_arr.filter((item) => {\r\n          const itemString = item.terminal_id.toString();\r\n          return itemString.includes(param.toString());\r\n        })\r\n      : null;\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({ data });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control terminal-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTerminalName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMccCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.mcc_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addMccCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addMccCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            data: [{ mcc_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть код...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <ItemMccCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_TERMINAL_SYSTEM: null,\r\n      isShowSelectDICT_MERCHANT_SYSTEM: false,\r\n\r\n      DICT_MERCHANT_SYSTEM: null,\r\n      isShowSelectDICT_TERMINAL_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        institution_id: 0,\r\n        report_type_id: \"REPORT_GROSS_COMM\",\r\n        network_brand_id: 0,\r\n        tsp_id: 0,\r\n        date_from: \"20211224\",\r\n        date_to: \"20211224\",\r\n        date_type_id: 1,\r\n        ident_code: 0,\r\n        terminal_type_id: 2\r\n      },\r\n\r\n      date_from: null,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_toValidation: true,\r\n      isForm_toValidation: true,\r\n      isDate_month_Validation: true,\r\n\r\n\r\n      DICT_MCC_SYSTEM: null,\r\n      isShowSelectDICT_MCC_SYSTEM: false,\r\n\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      error_text: \"Заповніть, будь ласка, дати!\",\r\n      isSuccess: false,\r\n      merchant_error: \"\",\r\n    };\r\n    this.myRef = React.createRef();\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows.length === 1) {\r\n          const param = response.data.Table.TableRows[0].institution_id;\r\n          let inputDataObj = this.state.AcquiringReportsCriteria;\r\n          inputDataObj.institution_id = param;\r\n\r\n          this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj,\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isInstitution_idValidation: true,\r\n            institution_id: param,\r\n          });\r\n          // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n        }\r\n\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MERCHANT_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_MERCHANT_SYSTEM: response.data.merchant_list.TableRows,\r\n          isShowSelectDICT_MERCHANT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_TERMINAL_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.Table.TableRows,\r\n            DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n            isShowSelectDICT_TERMINAL_SYSTEM: true,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MCC_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      terminal_id: +this.state.AcquiringReportsCriteria.tsp_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_TERMINAL_SYSTEM: response.data.mcc_list.TableRows,\r\n          isShowSelectDICT_MCC_SYSTEM: true,\r\n          DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        // this.setState({isSuccess: true})\r\n        // this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    let param = e.target.value;\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = param;\r\n\r\n    if (param == \"\") {\r\n      console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      // this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\"\r\n    ) {\r\n      console.log(\"inputValue: \", inputValue);\r\n      inputDataObj[apiName] = inputValue;\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(\"here:\", this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  };\r\n\r\n  sendOptionToServer() {\r\n    if (\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation &&\r\n      this.state.isForm_toValidation &&\r\n      this.state.isDate_month_Validation\r\n\r\n    ) {\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCheckId() {\r\n    this.checkMerchantID().then((res) => {\r\n      if (res.data.ErrorStatus.ErrorCode !== 0) {\r\n        this.setState({\r\n          merchant_error: res.data.ErrorStatus.ErrorMessage,\r\n          isShowPopupError: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async checkMerchantID() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.tsp_id) {\r\n      userBody.client_id = +this.state.tsp_id;\r\n    } else if (this.state.ident_code) {\r\n      userBody.client_id = +this.state.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n\r\n    return await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  defineValidationInputs = () => {\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    \r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({ isDate_fromValidation: false });\r\n    }\r\n    if (this.state.date_to === null || this.state.date_to === \"\") {\r\n      this.setState({ isDate_toValidation: false });\r\n    }\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n    if (\r\n      this.state.AcquiringReportsCriteria.tsp_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.network_brand_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.ident_code == 0\r\n    ) {\r\n      this.setState({ isForm_toValidation: false });\r\n    } else {\r\n      this.setState({ isForm_toValidation: true });\r\n    }\r\n\r\n    this.setState({}, () => this.sendOptionToServer());\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      console.log(this.state.currentTsp);\r\n      console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      console.log(item);\r\n\r\n      console.log(item.tsp_id);\r\n      console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період звіту</label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                console.log(acquiring_type_id);\r\n                console.log(report_period_type_id);\r\n                console.log(report_format_id);\r\n                console.log(channel_type_id);\r\n                console.log(file_name_mask);\r\n                console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     console.log(item);\r\n        //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //console.log(e.target.parentElement.className);\r\n    //console.log(this.myRef.current.className);\r\n    // console.log(this.myRef);\r\n    // console.log(typeof this.myRef);\r\n    // console.log(this.myRef != null);\r\n    //console.log(this.myRef.current != null);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.parentElement);\r\n    // console.log(e.target.parentElement.className);\r\n    // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelectDICT_MCC: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  //\r\n  addMerchantName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.merchant_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTerminalName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.terminal_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTspName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addBrandName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.network_brand_id = val.brand_id;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addIdentCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.ident_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addClientID = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addMccCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.mcc_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n\r\n  handleSelect = (ev) => {\r\n    let inputValue;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    if (ev.length === 0) {\r\n      inputValue = 0;\r\n    } else {\r\n      inputValue = ev.map((i) => i.value).join(\",\");\r\n    }\r\n    inputDataObj.payment_system_id = inputValue;\r\n    this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring REPORT_GROSS_COMM\">\r\n        {this.state.isSuccess ? (\r\n          <Alert variant={\"success\"}>\r\n            Звіт Виписка операцій успішно сформована. Перейдіть по{\" \"}\r\n            <Alert.Link href=\"/dashboard/REPORTS_ACQUIRING_MONITOR\">\r\n              лінку\r\n            </Alert.Link>\r\n            . Для перегляду звіта.\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter justify-content-between\">\r\n          <div className=\"coverInput col-5\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <p className=\"error\">\r\n              {this.state.isInstitution_idValidation\r\n                ? null\r\n                : this.state.error_text}\r\n            </p>\r\n            <label htmlFor=\"INN\">ІНН/ЄДРПОУ</label>\r\n            <AutocompleteInputIdentCode\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addIdentCode={this.addIdentCode}\r\n              addClientID={this.addClientID}\r\n              isError={this.state.isForm_toValidation}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n            />\r\n            <label htmlFor=\"tsp_name\">Назва ТСП</label>\r\n            <AutocompleteInputTspName\r\n              isError={this.state.isForm_toValidation}\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTspName}\r\n              tsp_name={this.state.AcquiringReportsCriteria.tsp_id}\r\n            />\r\n\r\n            <label htmlFor=\"tsp_name\">Назва Мережі</label>\r\n            <AutocompleteInputBrandName\r\n              token={this.props.store.userState.token}\r\n              addBrandName={this.addBrandName}\r\n              update={null}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n\r\n            <p className=\"error\">\r\n              {this.state.isForm_toValidation\r\n                ? null\r\n                : \"Заповніть, будь ласка, одне з 3-х значень\"}\r\n            </p>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"ident_code\" id=\"INN\" type=\"text\"/>*/}\r\n          </div>\r\n          <div className=\"coverInput col-5\">\r\n            <div className=\"coverInput col-11\">\r\n              <div className=\"coverDate\">\r\n                {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                <select\r\n                  onChange={this.changeInput}\r\n                  apiName=\"date_type_id\"\r\n                  id=\"date_type_id\"\r\n                  className={`${\r\n                    this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                  } form-select`}\r\n                  title=\"DICT_DATE_TYPE\"\r\n                >\r\n                  {this.state.isShowSelectDICT_DATE_TYPE\r\n                    ? this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                        return (\r\n                          <OptionItemDICT_DATE_TYPE\r\n                            key={index}\r\n                            optionItem={item}\r\n                          />\r\n                        );\r\n                      })\r\n                    : null}\r\n                </select>\r\n                <p className=\"error\">\r\n                  {this.state.isDate_type_idValidation\r\n                    ? null\r\n                    : this.state.error_text}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"coverInput col-11\">\r\n              <span>Період звіту</span>\r\n              <div className=\"row\">\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_from\">З</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_from}\r\n                    apiName=\"date_from\"\r\n                    className={`${\r\n                      this.state.isDate_fromValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_from\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_to\">По</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_to}\r\n                    apiName=\"date_to\"\r\n                    className={`${\r\n                      this.state.isDate_toValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_to\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <p className=\"error\">\r\n                {this.state.isDate_fromValidation &&\r\n                this.state.isDate_toValidation\r\n                  ? null\r\n                  : \"Заповніть, будь ласка, дати!\"}\r\n                  {this.state.isDate_month_Validation\r\n                  ? null\r\n                  : \"Максимальний термін 31 день!\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Побудувати звіт\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-danger\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">{this.state.merchant_error}</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS;\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MERCHANT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.merchant_id}>\r\n      {props.optionItem.merchant_id}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TERMINAL_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_code}>\r\n      {props.optionItem.mcc_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MCC_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_id}>{props.optionItem.mccs_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemMccCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemMerchantName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.merchant_id}\r\n      name={props.item.merchant_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.merchant_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTerminalName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.terminal_id}\r\n      name={props.item.terminal_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.terminal_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      data-id={props.item.institution_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      data-id={props.item.client_id}\r\n    >\r\n      {props.item.ident_code} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(\"param\", param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    this.request(this.props.token, param, true);\r\n    // }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // this.props.onBlur();\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    let institution = e.currentTarget.getAttribute(\"data-id\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        //console.log(typeof val);\r\n        this.setState({\r\n          inputResult: `${name} - ${institution}`,\r\n          inputRequest: `${name} - ${institution}`,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть перші букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect\r\n            ? this.state.data != null\r\n              ? this.state.data.map((item, index) => {\r\n                  return (\r\n                    <BlockSelectItemTspName\r\n                      key={index}\r\n                      item={item}\r\n                      onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                    />\r\n                  );\r\n                })\r\n              : null\r\n            : null}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.props.addClientID(Number(0));\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputRequest: this.state.inputResult,\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (!e) return;\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    let client_id =\r\n      currentVal.client_id === undefined\r\n        ? e.currentTarget.getAttribute(\"name\")\r\n        : currentVal.client_id;\r\n\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addIdentCode(Number(currentVal.ident_code));\r\n      this.props.addClientID(Number(client_id));\r\n      this.setState({\r\n        inputResult: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        inputRequest: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        isShowBlockSelect: false,\r\n        // isShowInputResult: true,\r\n        isShowInputRequest: true,\r\n\r\n        selected: true,\r\n      });\r\n      // if (val != this.state.inputRequest) {\r\n      //   this.request(this.props.token, val, false);\r\n      // }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          // mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        {/*<input*/}\r\n        {/*    className={`${this.state.selected ? 'selected ' : ''}${this.state.isShowInputRequest ? '' : 'dn '}form-control`}*/}\r\n        {/*    placeholder=\"Введіть перші три цифри...\" type=\"text\"*/}\r\n        {/*    onBlur={this.onBlurAutocompleteInput}*/}\r\n        {/*    onChange={this.onChangeAutocompleteInput}*/}\r\n        {/*    onClick={this.onClickAutocompleteInput}*/}\r\n        {/*    value={this.state.inputRequest}*/}\r\n        {/*/>*/}\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputMerchantName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      merchant_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    this.search(param);\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      this.props.addTspName(val);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      merchant_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = +this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n\r\n    if (this.state.merchant_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.merchant_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.merchant_list.TableRows,\r\n            merchant_arr: response.data.merchant_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (true) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.merchant_arr !== null\r\n        ? this.state.merchant_arr.filter((item) => {\r\n            const itemString = item.merchant_id.toString();\r\n            return itemString.includes(param.toString());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token, \"\", false)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemMerchantName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputTerminalName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      terminal_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.search(param);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTerminal`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      terminal_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_name) {\r\n      body.merchant_id = this.props.tsp_name;\r\n    }\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.terminal_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.terminal_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.terminal_list.TableRows,\r\n            terminal_arr: response.data.terminal_list.TableRows,\r\n            isShowBlockSelect: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data = this.state.terminal_arr\r\n      ? this.state.terminal_arr.filter((item) => {\r\n          const itemString = item.terminal_id.toString();\r\n          return itemString.includes(param.toString());\r\n        })\r\n      : null;\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({ data });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control terminal-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTerminalName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMccCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.mcc_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addMccCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addMccCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            data: [{ mcc_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть код...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <ItemMccCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_TERMINAL_SYSTEM: null,\r\n      isShowSelectDICT_MERCHANT_SYSTEM: false,\r\n\r\n      DICT_MERCHANT_SYSTEM: null,\r\n      isShowSelectDICT_TERMINAL_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        report_type_id: \"REPORT_OPERATIONS\",\r\n        payment_system_id: 0,\r\n        format_type_id: 1,\r\n        terminal_type_id: 1,\r\n        institution_id: 0,\r\n        date_type_id: 1,\r\n        merchant_id: 0,\r\n        terminal_id: 0,\r\n        tsp_id: 0,\r\n        ident_code: 0,\r\n      },\r\n\r\n      date_from: null,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_month_Validation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_toValidation: true,\r\n      isForm_toValidation: true,\r\n\r\n      DICT_MCC_SYSTEM: null,\r\n      isShowSelectDICT_MCC_SYSTEM: false,\r\n\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      error_text: \"Заповніть, будь ласка, дати!\",\r\n      isSuccess: false,\r\n      merchant_error: \"\",\r\n    };\r\n    this.myRef = React.createRef();\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows.length === 1) {\r\n          const param = response.data.Table.TableRows[0].institution_id;\r\n          let inputDataObj = this.state.AcquiringReportsCriteria;\r\n          inputDataObj.institution_id = param;\r\n\r\n          this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj,\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isInstitution_idValidation: true,\r\n            institution_id: param,\r\n          });\r\n          this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n        }\r\n\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MERCHANT_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_MERCHANT_SYSTEM: response.data.merchant_list.TableRows,\r\n          isShowSelectDICT_MERCHANT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_TERMINAL_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.Table.TableRows,\r\n            DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n            isShowSelectDICT_TERMINAL_SYSTEM: true,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MCC_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      terminal_id: +this.state.AcquiringReportsCriteria.tsp_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_TERMINAL_SYSTEM: response.data.mcc_list.TableRows,\r\n          isShowSelectDICT_MCC_SYSTEM: true,\r\n          DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        // this.setState({isSuccess: true})\r\n        // this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    let param = e.target.value;\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = param;\r\n\r\n    if (param == \"\") {\r\n      console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\"\r\n    ) {\r\n      console.log(\"inputValue: \", inputValue);\r\n      inputDataObj[apiName] = inputValue;\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(\"here:\", this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  };\r\n\r\n  sendOptionToServer() {\r\n    if (\r\n      this.state.isInstitution_idValidation &&\r\n      this.state.isTerminal_type_idValidation &&\r\n      this.state.isDate_type_idValidation &&\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation &&\r\n      this.state.isForm_toValidation && \r\n      this.state.isDate_month_Validation\r\n    ) {\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCheckId() {\r\n    this.checkMerchantID().then((res) => {\r\n      if (res.data.ErrorStatus.ErrorCode !== 0) {\r\n        this.setState({\r\n          merchant_error: res.data.ErrorStatus.ErrorMessage,\r\n          isShowPopupError: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async checkMerchantID() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.tsp_id) {\r\n      userBody.client_id = +this.state.tsp_id;\r\n    } else if (this.state.ident_code) {\r\n      userBody.client_id = +this.state.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n\r\n    return await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  defineValidationInputs = () => {\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    \r\n   \r\n    if (this.state.institution_id == null || this.state.institution_id == 0) {\r\n      this.setState({ isInstitution_idValidation: false });\r\n    }\r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({ isDate_fromValidation: false });\r\n    }\r\n    if (this.state.date_to === null || this.state.date_to === \"\") {\r\n      this.setState({ isDate_toValidation: false });\r\n    }\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n    if (\r\n      this.state.AcquiringReportsCriteria.ident_code == 0 &&\r\n      this.state.AcquiringReportsCriteria.tsp_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.merchant_id == 0 &&\r\n      !this.state.AcquiringReportsCriteria.trans_rrn &&\r\n      this.state.AcquiringReportsCriteria.terminal_id == 0\r\n    ) {\r\n      this.setState({ isForm_toValidation: false });\r\n    } else {\r\n      this.setState({ isForm_toValidation: true });\r\n    }\r\n\r\n    this.setState({}, () => this.sendOptionToServer());\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      console.log(this.state.currentTsp);\r\n      console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      console.log(item);\r\n\r\n      console.log(item.tsp_id);\r\n      console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період звіту</label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     console.log(item);\r\n        //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //console.log(e.target.parentElement.className);\r\n    //console.log(this.myRef.current.className);\r\n    // console.log(this.myRef);\r\n    // console.log(typeof this.myRef);\r\n    // console.log(this.myRef != null);\r\n    //console.log(this.myRef.current != null);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.parentElement);\r\n    // console.log(e.target.parentElement.className);\r\n    // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelectDICT_MCC: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  //\r\n  addMerchantName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.merchant_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTerminalName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.terminal_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTspName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addIdentCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.ident_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addClientID = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addMccCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.mcc_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n\r\n  handleSelect = (ev) => {\r\n    let inputValue;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    if (ev.length === 0) {\r\n      inputValue = 0;\r\n    } else {\r\n      inputValue = ev.map((i) => i.value).join(\",\");\r\n    }\r\n    inputDataObj.payment_system_id = inputValue;\r\n    this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring\">\r\n        {this.state.isSuccess ? (\r\n          <Alert variant={\"success\"}>\r\n            Звіт Виписка операцій успішно сформована. Перейдіть по{\" \"}\r\n            <Alert.Link href=\"/dashboard/REPORTS_ACQUIRING_MONITOR\">\r\n              лінку\r\n            </Alert.Link>\r\n            . Для перегляду звіта.\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter\">\r\n          <div className=\"coverInput col-3\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <p className=\"error\">\r\n              {this.state.isInstitution_idValidation\r\n                ? null\r\n                : \"Оберіть, будь ласка, значення!\"}\r\n            </p>\r\n            <label htmlFor=\"TVBV\">ТВБВ</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              apiName=\"bank_branch_id\"\r\n              className=\"form-select\"\r\n              disabled={this.state.isDisableTVBV ? \"disabled\" : \"\"}\r\n              title=\"ТВБВ\"\r\n            >\r\n              <option></option>\r\n              {this.state.isShowSelectTVBV ? (\r\n                this.state.DICT_BRANCH.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_BRANCH key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <label htmlFor=\"tsp_name\">Назва ТСП</label>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"tsp_name\" id=\"tsp_name\" type=\"text\"/>*/}\r\n            <AutocompleteInputTspName\r\n              isError={this.state.isForm_toValidation}\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTspName}\r\n              tsp_name={this.state.AcquiringReportsCriteria.tsp_id}\r\n              // onBlur={()=>{this.requestDICT_MERCHANT_SYSTEM();this.requestDICT_TERMINAL_SYSTEM()}}\r\n            />\r\n            <label htmlFor=\"INN\">ІНН/ЄДРПОУ</label>\r\n            <AutocompleteInputIdentCode\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addIdentCode={this.addIdentCode}\r\n              addClientID={this.addClientID}\r\n              isError={this.state.isForm_toValidation}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              // onBlur={()=>{this.requestDICT_MERCHANT_SYSTEM();this.requestDICT_TERMINAL_SYSTEM()}}\r\n            />\r\n            <label htmlFor=\"INN\">РРН</label>\r\n            <input onChange={this.changeInput} apiName=\"trans_rrn\" type=\"text\" class={`form-control ${!this.state.isForm_toValidation ? \"validError \" : false}`} placeholder=\"Введіть цифри...\" ></input>\r\n            <p className=\"error\">\r\n              {this.state.isForm_toValidation\r\n                ? null\r\n                : \"Заповніть, будь ласка, одне з 5-и значень\"}\r\n            </p>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"ident_code\" id=\"INN\" type=\"text\"/>*/}\r\n          </div>\r\n          <div className=\"coverInput col-2\">\r\n            {/*<label htmlFor=\"report_type_id\">Назва звіту</label>*/}\r\n            {/*<select onChange={this.changeInput} apiName=\"report_type_id\" id=\"report_type_id\" className=\"form-select\"*/}\r\n            {/*        title=\"\">*/}\r\n            {/*    <option>-</option>*/}\r\n            {/*    {*/}\r\n            {/*        this.state.isShowSelectDICT_ACQUIRING_REPORTS*/}\r\n            {/*            ?*/}\r\n            {/*            this.state.DICT_ACQUIRING_REPORTS.map((item, index) => {*/}\r\n            {/*                return < OptionItemDICT_ACQUIRING_REPORTS key={index} optionItem={item}/>*/}\r\n            {/*            })*/}\r\n            {/*            : <>*/}\r\n            {/*            </>*/}\r\n            {/*    }*/}\r\n            {/*</select>*/}\r\n\r\n            {/* <label htmlFor=\"terminal_type_id\">Вид термінала</label>\r\n                        <select onChange={this.changeInput} apiName=\"terminal_type_id\" id=\"terminal_type_id\" className={`${this.state.isTerminal_type_idValidation ? '' : 'validError'} form-select`}\r\n                                title=\"Регіональні управління\">\r\n                            <option></option>\r\n                            {\r\n                                this.state.isShowSelectDICT_ACQUIRING_TYPE\r\n                                    ?\r\n                                    this.state.DICT_ACQUIRING_TYPE.map((item, index) => {\r\n                                        return < OptionItemDICT_ACQUIRING_TYPE key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select> */}\r\n            {/* <p className=\"error\">{this.state.isTerminal_type_idValidation ? null : this.state.error_text}</p> */}\r\n            {/* <label htmlFor=\"merchant\">merchant ID</label>\r\n                        <select onChange={this.changeInput} onFocus={()=>this.requestDICT_MERCHANT_SYSTEM()} apiName=\"merchant_id\" id=\"dropdown-basic-button\" className=\"form-select\"\r\n                                title=\"merchant ID\">\r\n                                    <option></option>\r\n                            {\r\n                                this.state.isShowSelectDICT_MERCHANT_SYSTEM\r\n                                    ?\r\n                                    this.state.DICT_MERCHANT_SYSTEM.map((item, index) => {\r\n                                        return < OptionItemDICT_MERCHANT_SYSTEM key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select> */}\r\n            {/* <input onChange={this.changeInput} className={`form-control`} apiName=\"merchant_id\" id=\"merchant\" type=\"text\" onBlur={this.handleCheckId.bind(this)}/> */}\r\n            {/* <p className=\"error\">{this.state.isMerchant_idValidation ? null : this.state.error_text}</p> */}\r\n            {/* <label htmlFor=\"terminal_id\">Terminal ID</label>\r\n                        <select onChange={this.changeInput} onFocus={()=>this.requestDICT_TERMINAL_SYSTEM()} apiName=\"terminal_id\" id=\"dropdown-basic-button\" className=\"form-select\"\r\n                                title=\"merchant ID\">\r\n                                    <option></option>\r\n\r\n                            {\r\n                                this.state.isShowSelectDICT_TERMINAL_SYSTEM\r\n                                    ?\r\n                                    this.state.DICT_TERMINAL_SYSTEM.map((item, index) => {\r\n                                        return < OptionItemDICT_TERMINAL_SYSTEM key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select> */}\r\n            {/* <input onChange={this.changeInput} className=\"form-control\" apiName=\"terminal_id\" id=\"terminal_id\" type=\"text\" onBlur={this.handleCheckId.bind(this)}/> */}\r\n            <label htmlFor=\"merchant_id\">merchant ID</label>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"tsp_name\" id=\"tsp_name\" type=\"text\"/>*/}\r\n            <AutocompleteInputMerchantName\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addMerchantName}\r\n              tsp_id={this.state.AcquiringReportsCriteria.tsp_id}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              tsp_name={this.state.AcquiringReportsCriteria.merchant_id}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n            {/* <input onChange={this.changeInput} className={`form-control`} apiName=\"merchant_id\" id=\"merchant\" type=\"text\" onBlur={this.handleCheckId.bind(this)}/> */}\r\n            {/* <p className=\"error\">{this.state.isMerchant_idValidation ? null : this.state.error_text}</p> */}\r\n\r\n            <label htmlFor=\"terminal_id\">Terminal ID</label>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"tsp_name\" id=\"tsp_name\" type=\"text\"/>*/}\r\n            <AutocompleteInputTerminalName\r\n              token={this.props.store.userState.token}\r\n              isError={this.state.isForm_toValidation}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTerminalName}\r\n              tsp_id={this.state.AcquiringReportsCriteria.tsp_id}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              tsp_name={this.state.AcquiringReportsCriteria.merchant_id}\r\n            />\r\n          </div>\r\n          <div className=\"coverInput col-3\">\r\n            <div className=\"base-field\">\r\n              <label htmlFor=\"base\">Базові поля</label>\r\n              <input apiName=\"base\" id=\"base\" type=\"checkbox\" />\r\n            </div>\r\n            <label htmlFor=\"DICT_PAYMENT_SYSTEM\">Карти</label>\r\n            {/* <select\r\n              onChange={this.changeInput}\r\n              apiName=\"payment_system_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className=\"form-select\"\r\n              title=\"Карти\"\r\n              multiple\r\n            >\r\n              {this.state.isShowSelectDICT_PAYMENT_SYSTEM ? (\r\n                this.state.DICT_PAYMENT_SYSTEM.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_PAYMENT_SYSTEM\r\n                      key={index}\r\n                      optionItem={item}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select> */}\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              isMulti\r\n              options={this.state.DICT_PAYMENT_SYSTEM}\r\n              placeholder=\"Всі\"\r\n              onChange={this.handleSelect}\r\n            />\r\n            <label htmlFor=\"terminal_id\">MCC</label>\r\n            <select\r\n              onChange={this.changeInput}\r\n              onFocus={() => this.requestDICT_TERMINAL_SYSTEM()}\r\n              apiName=\"mcc_code\"\r\n              id=\"dropdown-basic-button\"\r\n              className=\"form-select\"\r\n              title=\"Terminal ID\"\r\n            >\r\n              {this.state.isShowSelectDICT_MCC_SYSTEM ? (\r\n                this.state.DICT_MCC_SYSTEM.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_TERMINAL_SYSTEM\r\n                      key={index}\r\n                      optionItem={item}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            {/* <label htmlFor=\"mcc_code\">MCC</label>\r\n                        <AutocompleteInputMccCode\r\n                            token={ this.props.store.userState.token }\r\n                            addMccCode={this.addMccCode}\r\n                            mcc_code={this.state.AcquiringReportsCriteria.mcc_code}\r\n                        /> */}\r\n\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"mcc_code\" id=\"mcc_code\" type=\"text\"/>*/}\r\n            {/*<div className=\"autocomplete\">*/}\r\n            {/*    <input*/}\r\n            {/*        className={`${this.state.isShowInputDICT_MCC ? '' : 'dn'} form-control`}*/}\r\n            {/*        placeholder=\"Введіть код\" type=\"text\"*/}\r\n            {/*        onBlur={this.onBlurAutocompleteInput}*/}\r\n            {/*        onChange={this.onChangeAutocompleteInput}*/}\r\n            {/*        onClick={this.onClickAutocompleteInput}*/}\r\n            {/*        value={this.state.InputDICT_MCC}*/}\r\n            {/*    />*/}\r\n            {/*    <input*/}\r\n            {/*        className={`${this.state.isShowInputResDICT_MCC ? '' : 'dn'} form-control`}*/}\r\n            {/*        placeholder=\"Результат\" type=\"text\"*/}\r\n            {/*        value={this.state.AcquiringReportsCriteria.mcc_code}*/}\r\n            {/*        onClick={this.onClickAutocompleteInputRes}*/}\r\n            {/*    />*/}\r\n            {/*    <div className={`${this.state.isShowBlockSelectDICT_MCC ? '' : 'dn'}blockSelect`} onBlur={this.onBlurBlockSelect} ref={this.myRef} >*/}\r\n            {/*        {*/}\r\n            {/*            this.state.isShowBlockSelectDICT_MCC*/}\r\n            {/*                ? this.state.DICT_MCC != null*/}\r\n            {/*                ? this.state.DICT_MCC.map((item, index) => {*/}\r\n            {/*                    return < ItemDICT_MCC key={index} item={item} onClickBlockSelectItem={this.onClickBlockSelectItem}/>*/}\r\n            {/*                })*/}\r\n            {/*                : <></>*/}\r\n            {/*                : <></>*/}\r\n\r\n            {/*        }*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n\r\n            <label htmlFor=\"format_type_id\">Формат файлу</label>\r\n            <select\r\n              onChange={this.changeInput}\r\n              apiName=\"format_type_id\"\r\n              id=\"format_type_id\"\r\n              className=\"form-select\"\r\n              title=\"DICT_REPORT_FORMAT\"\r\n            >\r\n              {this.state.isShowSelectDICT_REPORT_FORMAT ? (\r\n                this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                  //console.log(item)\r\n                  return (\r\n                    <OptionItemDICT_REPORT_FORMAT\r\n                      key={index}\r\n                      optionItem={item}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <div className=\"coverInput col-4\">\r\n            <div className=\"coverInput col-11\">\r\n              <div className=\"coverDate\">\r\n                {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                <select\r\n                  onChange={this.changeInput}\r\n                  apiName=\"date_type_id\"\r\n                  id=\"date_type_id\"\r\n                  className={`${\r\n                    this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                  } form-select`}\r\n                  title=\"DICT_DATE_TYPE\"\r\n                >\r\n                  {this.state.isShowSelectDICT_DATE_TYPE\r\n                    ? this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                        return (\r\n                          <OptionItemDICT_DATE_TYPE\r\n                            key={index}\r\n                            optionItem={item}\r\n                          />\r\n                        );\r\n                      })\r\n                    : null}\r\n                </select>\r\n                <p className=\"error\">\r\n                  {this.state.isDate_type_idValidation\r\n                    ? null\r\n                    : this.state.error_text}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"coverInput col-11\">\r\n              <span>Період звіту</span>\r\n              <div className=\"row\">\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_from\">З</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_from}\r\n                    apiName=\"date_from\"\r\n                    className={`${\r\n                      this.state.isDate_fromValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_from\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_to\">По</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_to}\r\n                    apiName=\"date_to\"\r\n                    className={`${\r\n                      this.state.isDate_toValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_to\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <p className=\"error\">\r\n                {this.state.isDate_fromValidation &&\r\n                this.state.isDate_toValidation\r\n                  ? null\r\n                  : \"Заповніть, будь ласка, дати!\"}\r\n                {this.state.isDate_month_Validation\r\n                  ? null\r\n                  : \"Максимальний термін 31 день!\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Побудувати звіт\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-danger\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">{this.state.merchant_error}</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS;\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MERCHANT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.merchant_id}>\r\n      {props.optionItem.merchant_id}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TERMINAL_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_code}>\r\n      {props.optionItem.mcc_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MCC_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_id}>{props.optionItem.mccs_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemMccCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemMerchantName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.merchant_id}\r\n      name={props.item.merchant_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.merchant_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTerminalName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.terminal_id}\r\n      name={props.item.terminal_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.terminal_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      data-id={props.item.institution_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n      data-id={props.item.client_id}\r\n    >\r\n      {props.item.ident_code} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(\"param\", param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    this.request(this.props.token, param, true);\r\n    // }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // this.props.onBlur();\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    let institution = e.currentTarget.getAttribute(\"data-id\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        //console.log(typeof val);\r\n        this.setState({\r\n          inputResult: `${name} - ${institution}`,\r\n          inputRequest: `${name} - ${institution}`,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть перші букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect\r\n            ? this.state.data != null\r\n              ? this.state.data.map((item, index) => {\r\n                  return (\r\n                    <BlockSelectItemTspName\r\n                      key={index}\r\n                      item={item}\r\n                      onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                    />\r\n                  );\r\n                })\r\n              : null\r\n            : null}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.props.addClientID(Number(0));\r\n    this.props.addIdentCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputRequest: this.state.inputResult,\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (!e) return;\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    let client_id =\r\n      currentVal.client_id === undefined\r\n        ? e.currentTarget.getAttribute(\"name\")\r\n        : currentVal.client_id;\r\n\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addIdentCode(Number(currentVal.ident_code));\r\n      this.props.addClientID(Number(client_id));\r\n      this.setState({\r\n        inputResult: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        inputRequest: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        isShowBlockSelect: false,\r\n        // isShowInputResult: true,\r\n        isShowInputRequest: true,\r\n\r\n        selected: true,\r\n      });\r\n      // if (val != this.state.inputRequest) {\r\n      //   this.request(this.props.token, val, false);\r\n      // }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          // mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        {/*<input*/}\r\n        {/*    className={`${this.state.selected ? 'selected ' : ''}${this.state.isShowInputRequest ? '' : 'dn '}form-control`}*/}\r\n        {/*    placeholder=\"Введіть перші три цифри...\" type=\"text\"*/}\r\n        {/*    onBlur={this.onBlurAutocompleteInput}*/}\r\n        {/*    onChange={this.onChangeAutocompleteInput}*/}\r\n        {/*    onClick={this.onClickAutocompleteInput}*/}\r\n        {/*    value={this.state.inputRequest}*/}\r\n        {/*/>*/}\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputMerchantName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      merchant_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    this.search(param);\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    this.search(param);\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      this.props.addTspName(val);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n        this.setState({\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      merchant_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = +this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n\r\n    if (this.state.merchant_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.merchant_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.merchant_list.TableRows,\r\n            merchant_arr: response.data.merchant_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (true) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.merchant_arr !== null\r\n        ? this.state.merchant_arr.filter((item) => {\r\n            const itemString = item.merchant_id.toString();\r\n            return itemString.includes(param.toString());\r\n          })\r\n        : null;\r\n\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token, \"\", false)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemMerchantName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputTerminalName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      terminal_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.search(param);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTerminal`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      terminal_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_name) {\r\n      body.merchant_id = this.props.tsp_name;\r\n    }\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.terminal_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.terminal_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.terminal_list.TableRows,\r\n            terminal_arr: response.data.terminal_list.TableRows,\r\n            isShowBlockSelect: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data = this.state.terminal_arr\r\n      ? this.state.terminal_arr.filter((item) => {\r\n          const itemString = item.terminal_id.toString();\r\n          return itemString.includes(param.toString());\r\n        })\r\n      : null;\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({ data });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"} ${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control terminal-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTerminalName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMccCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.mcc_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addMccCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addMccCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            data: [{ mcc_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть код...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <ItemMccCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_TERMINAL_SYSTEM: null,\r\n      isShowSelectDICT_MERCHANT_SYSTEM: false,\r\n\r\n      DICT_MERCHANT_SYSTEM: null,\r\n      isShowSelectDICT_TERMINAL_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        report_type_id: \"REPORT_CASH_OUT\",\r\n        payment_system_id: 0,\r\n        format_type_id: 1,\r\n        terminal_type_id: 1,\r\n        institution_id: 0,\r\n        date_type_id: 1,\r\n        merchant_id: 0,\r\n        terminal_id: 0,\r\n        tsp_id: 0,\r\n        ident_code: 0,\r\n      },\r\n\r\n      date_from: null,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_month_Validation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_toValidation: true,\r\n      isForm_toValidation: true,\r\n\r\n      DICT_MCC_SYSTEM: null,\r\n      isShowSelectDICT_MCC_SYSTEM: false,\r\n\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      error_text: \"Заповніть, будь ласка, дати!\",\r\n      isSuccess: false,\r\n      merchant_error: \"\",\r\n    };\r\n    this.myRef = React.createRef();\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.Table.TableRows.length === 1) {\r\n          const param = response.data.Table.TableRows[0].institution_id;\r\n          let inputDataObj = this.state.AcquiringReportsCriteria;\r\n          inputDataObj.institution_id = param;\r\n\r\n          this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj,\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isInstitution_idValidation: true,\r\n            institution_id: param,\r\n          });\r\n          this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n        }\r\n\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MERCHANT_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_MERCHANT_SYSTEM: response.data.merchant_list.TableRows,\r\n          isShowSelectDICT_MERCHANT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_TERMINAL_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.Table.TableRows,\r\n            DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n            isShowSelectDICT_TERMINAL_SYSTEM: true,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MCC_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      terminal_id: +this.state.AcquiringReportsCriteria.tsp_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_TERMINAL_SYSTEM: response.data.mcc_list.TableRows,\r\n          isShowSelectDICT_MCC_SYSTEM: true,\r\n          DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n    console.log(userBody);\r\n    return;\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        // this.setState({isSuccess: true})\r\n        // this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    let param = e.target.value;\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = param;\r\n\r\n    if (param == \"\") {\r\n      console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\"\r\n    ) {\r\n      console.log(\"inputValue: \", inputValue);\r\n      inputDataObj[apiName] = inputValue;\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(\"here:\", this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  };\r\n\r\n  sendOptionToServer() {\r\n    if (\r\n      this.state.isInstitution_idValidation &&\r\n      this.state.isTerminal_type_idValidation &&\r\n      this.state.isDate_type_idValidation &&\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation &&\r\n      this.state.isForm_toValidation && \r\n      this.state.isDate_month_Validation\r\n    ) {\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCheckId() {\r\n    this.checkMerchantID().then((res) => {\r\n      if (res.data.ErrorStatus.ErrorCode !== 0) {\r\n        this.setState({\r\n          merchant_error: res.data.ErrorStatus.ErrorMessage,\r\n          isShowPopupError: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  async checkMerchantID() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.tsp_id) {\r\n      userBody.client_id = +this.state.tsp_id;\r\n    } else if (this.state.ident_code) {\r\n      userBody.client_id = +this.state.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n\r\n    return await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  defineValidationInputs = () => {\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    \r\n   \r\n    if (this.state.institution_id == null || this.state.institution_id == 0) {\r\n      this.setState({ isInstitution_idValidation: false });\r\n    }\r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({ isDate_fromValidation: false });\r\n    }\r\n    if (this.state.date_to === null || this.state.date_to === \"\") {\r\n      this.setState({ isDate_toValidation: false });\r\n    }\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n    // if (\r\n    //   this.state.AcquiringReportsCriteria.ident_code == 0 &&\r\n    //   this.state.AcquiringReportsCriteria.tsp_id == 0 &&\r\n    //   this.state.AcquiringReportsCriteria.merchant_id == 0 &&\r\n    //   this.state.AcquiringReportsCriteria.terminal_id == 0\r\n    // ) {\r\n    //   this.setState({ isForm_toValidation: false });\r\n    // } else {\r\n    //   this.setState({ isForm_toValidation: true });\r\n    // }\r\n\r\n    this.setState({}, () => this.sendOptionToServer());\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      console.log(this.state.currentTsp);\r\n      console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      console.log(item);\r\n\r\n      console.log(item.tsp_id);\r\n      console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період звіту</label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     console.log(item);\r\n        //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //console.log(e.target.parentElement.className);\r\n    //console.log(this.myRef.current.className);\r\n    // console.log(this.myRef);\r\n    // console.log(typeof this.myRef);\r\n    // console.log(this.myRef != null);\r\n    //console.log(this.myRef.current != null);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.parentElement);\r\n    // console.log(e.target.parentElement.className);\r\n    // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelectDICT_MCC: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  //\r\n  addMerchantName = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.merchant_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTerminalName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.terminal_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTspName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addIdentCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.ident_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addClientID = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addMccCode = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.mcc_code = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n\r\n  handleSelect = (ev) => {\r\n    let inputValue;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    if (ev.length === 0) {\r\n      inputValue = 0;\r\n    } else {\r\n      inputValue = ev.map((i) => i.value).join(\",\");\r\n    }\r\n    inputDataObj.payment_system_id = inputValue;\r\n    this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring\">\r\n        {this.state.isSuccess ? (\r\n          <Alert variant={\"success\"}>\r\n            Звіт Виписка операцій успішно сформована. Перейдіть по{\" \"}\r\n            <Alert.Link href=\"/dashboard/REPORTS_ACQUIRING_MONITOR\">\r\n              лінку\r\n            </Alert.Link>\r\n            . Для перегляду звіта.\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter d-flex justify-content-between\">\r\n          <div className=\"coverInput col-5\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <p className=\"error\">\r\n              {this.state.isInstitution_idValidation\r\n                ? null\r\n                : \"Оберіть, будь ласка, значення!\"}\r\n            </p>\r\n           \r\n            <label htmlFor=\"tsp_name\">Назва ТСП</label>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"tsp_name\" id=\"tsp_name\" type=\"text\"/>*/}\r\n            <AutocompleteInputTspName\r\n              isError={this.state.isForm_toValidation}\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTspName}\r\n              tsp_name={this.state.AcquiringReportsCriteria.tsp_id}\r\n              // onBlur={()=>{this.requestDICT_MERCHANT_SYSTEM();this.requestDICT_TERMINAL_SYSTEM()}}\r\n            />\r\n            <label htmlFor=\"INN\">ІНН/ЄДРПОУ</label>\r\n            <AutocompleteInputIdentCode\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addIdentCode={this.addIdentCode}\r\n              addClientID={this.addClientID}\r\n              isError={this.state.isForm_toValidation}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              // onBlur={()=>{this.requestDICT_MERCHANT_SYSTEM();this.requestDICT_TERMINAL_SYSTEM()}}\r\n            />\r\n            <label htmlFor=\"merchant_id\">merchant ID</label>\r\n            <AutocompleteInputMerchantName\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addMerchantName}\r\n              tsp_id={this.state.AcquiringReportsCriteria.tsp_id}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              tsp_name={this.state.AcquiringReportsCriteria.merchant_id}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n            <label htmlFor=\"terminal_id\">Terminal ID</label>\r\n            <AutocompleteInputTerminalName\r\n              token={this.props.store.userState.token}\r\n              isError={this.state.isForm_toValidation}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTerminalName}\r\n              tsp_id={this.state.AcquiringReportsCriteria.tsp_id}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              tsp_name={this.state.AcquiringReportsCriteria.merchant_id}\r\n            />\r\n\r\n            <p className=\"error\">\r\n              {this.state.isForm_toValidation\r\n                ? null\r\n                : \"Заповніть, будь ласка, одне з 4-х значень\"}\r\n            </p>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"ident_code\" id=\"INN\" type=\"text\"/>*/}\r\n          </div>\r\n          \r\n         \r\n          <div className=\"coverInput col-5\">\r\n            <div className=\"coverInput col-11\">\r\n              <div className=\"coverDate\">\r\n                {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                <select\r\n                  onChange={this.changeInput}\r\n                  apiName=\"date_type_id\"\r\n                  id=\"date_type_id\"\r\n                  className={`${\r\n                    this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                  } form-select`}\r\n                  title=\"DICT_DATE_TYPE\"\r\n                >\r\n                  {this.state.isShowSelectDICT_DATE_TYPE\r\n                    ? this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                        return (\r\n                          <OptionItemDICT_DATE_TYPE\r\n                            key={index}\r\n                            optionItem={item}\r\n                          />\r\n                        );\r\n                      })\r\n                    : null}\r\n                </select>\r\n                <p className=\"error\">\r\n                  {this.state.isDate_type_idValidation\r\n                    ? null\r\n                    : this.state.error_text}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"coverInput col-11\">\r\n              <span>Період звіту</span>\r\n              <div className=\"row\">\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_from\">З</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_from}\r\n                    apiName=\"date_from\"\r\n                    className={`${\r\n                      this.state.isDate_fromValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_from\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_to\">По</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_to}\r\n                    apiName=\"date_to\"\r\n                    className={`${\r\n                      this.state.isDate_toValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_to\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <p className=\"error\">\r\n                {this.state.isDate_fromValidation &&\r\n                this.state.isDate_toValidation\r\n                  ? null\r\n                  : \"Заповніть, будь ласка, дати!\"}\r\n                {this.state.isDate_month_Validation\r\n                  ? null\r\n                  : \"Максимальний термін 31 день!\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Побудувати звіт\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-danger\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">{this.state.merchant_error}</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  {/* Упс1 Сталася помилка */}\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS;\r\n","export default function LoaderUI() {\n  return (\n    <div className=\"loading\">\n      <div className=\"rotating\">\n        <div class=\"lds-roller\">\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n          <div></div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport LoaderUI from \"../../../UI/LoaderUI\";\r\nimport Select from \"react-select\";\r\n\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { Alert } from \"react-bootstrap\";\r\nimport { thisExpression } from \"@babel/types\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MERCHANT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.merchant_id}>\r\n      {props.optionItem.merchant_id}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TERMINAL_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_code}>\r\n      {props.optionItem.mcc_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_MCC_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.mcc_id}>{props.optionItem.mccs_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // console.log( props );\r\n  // console.log( props.optionItem.report_period_type_id );\r\n  // console.log( props.report_period_type_id );\r\n  //console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ItemMccCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTspName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.client_id}\r\n      name={props.item.client_name}\r\n      data-id={props.item.institution_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.client_name} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemMerchantName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.merchant_id}\r\n      name={props.item.merchant_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.merchant_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemTerminalName = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.terminal_id}\r\n      name={props.item.terminal_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.terminal_id}\r\n    </div>\r\n  );\r\n};\r\nconst BlockSelectItemIdentCode = (props) => {\r\n  //console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.ident_code}\r\n      data-id={props.item.client_id}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.ident_code} - {props.item.institution_id}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass AutocompleteInputTspName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.request(this.props.token, param, true);\r\n    // }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // this.setState({ isShowBlockSelect: false });\r\n\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    let institution = e.currentTarget.getAttribute(\"data-id\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          inputResult: `${name} - ${institution}`,\r\n          inputRequest: `${name} - ${institution}`,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: false,\r\n          isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      client_name: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть перші букви...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTspName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMerchantName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      merchant_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"mousedown\", this.clickTest);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    this.search(param);\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.search(param);\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      this.props.addTspName(val);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        // this.props.addTspName(val);\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelect: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      merchant_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = +this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.merchant_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.merchant_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.merchant_list.TableRows,\r\n            merchant_arr: response.data.merchant_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (true) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response.data);\r\n      });\r\n  }\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data =\r\n      this.state.merchant_arr !== null\r\n        ? this.state.merchant_arr.filter((item) => {\r\n            const itemString = item.merchant_id.toString();\r\n            return itemString.includes(param.toString());\r\n          })\r\n        : null;\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({\r\n        data,\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control merchant-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token, \"\", false)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemMerchantName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass AutocompleteInputTerminalName extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: \"\",\r\n      inputResult: this.props.tsp_name,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n      terminal_arr: null,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addTspName(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.search(param);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if (param != \"\" && param.length >= 3) {\r\n    this.search(param);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    let name = e.currentTarget.getAttribute(\"name\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val !== \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (+val !== +this.state.inputRequest) {\r\n        this.search(val);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addTspName(Number(val));\r\n        this.setState({\r\n          // inputResult: name,\r\n          inputRequest: name,\r\n          isShowBlockSelect: false,\r\n          // isShowInputResult: false,\r\n          // isShowInputRequest: true,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/QueryTerminal`;\r\n    console.log(baseUrl);\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      // branch_id: this.props.branch_id,\r\n      terminal_id: 0,\r\n    };\r\n\r\n    if (this.props.tsp_name) {\r\n      body.merchant_id = this.props.tsp_name;\r\n    }\r\n\r\n    if (this.props.tsp_id) {\r\n      body.client_id = +this.props.tsp_id;\r\n    } else if (this.props.ident_code) {\r\n      body.client_id = this.props.ident_code;\r\n    } else {\r\n      body.client_id = 0;\r\n    }\r\n    if (this.state.terminal_arr)\r\n      return this.setState({\r\n        isLoading: false,\r\n      });\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.terminal_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.terminal_list.TableRows,\r\n            terminal_arr: response.data.terminal_list.TableRows,\r\n            isShowBlockSelect: true,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  search(param) {\r\n    this.setState({\r\n      isShowBlockSelect: true,\r\n    });\r\n    const data = this.state.terminal_arr.filter((item) => {\r\n      const itemString = item.terminal_id.toString();\r\n      return itemString.includes(param.toString());\r\n    });\r\n    if (data === null) {\r\n      this.setState({\r\n        data: [{ client_name: \"Незнайдено жодного результату\" }],\r\n      });\r\n    } else {\r\n      this.setState({ data });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <input\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control terminal-input`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          // onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={() =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.request(this.props.token, \"\", false)\r\n          }\r\n          value={this.state.inputRequest}\r\n          // onFocus={() => this.request(this.props.token)}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemTerminalName\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputIdentCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.ident_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addIdentCode(Number(0));\r\n    this.props.addClientID(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\" && param.length >= 0) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\" && param.length >= 3) {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n      inputRequest: this.state.inputResult,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    const currentVal = this.state.data.filter((i) =>\r\n      i.ident_code.toString().includes(val)\r\n    )[0];\r\n    let client_id = currentVal.client_id;\r\n\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      this.props.addIdentCode(Number(currentVal.ident_code));\r\n      this.props.addClientID(Number(client_id));\r\n      this.setState({\r\n        inputResult: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        inputRequest: `${currentVal.ident_code} - ${currentVal.institution_id}`,\r\n        isShowBlockSelect: false,\r\n        // isShowInputResult: true,\r\n        isShowInputRequest: true,\r\n\r\n        selected: true,\r\n      });\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        //console.log(typeof val);\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const baseUrl = `/api/Dictionary/QueryTSP`;\r\n    const body = {\r\n      institution_id: this.props.institution_id,\r\n      branch_id: this.props.branch_id,\r\n      ident_code: param,\r\n    };\r\n    console.log(body);\r\n    await axios\r\n      .post(baseUrl, body, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.tsp_list.TableRows == null) {\r\n          this.setState({\r\n            data: [{ ident_code: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.tsp_list.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          // mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.props.isError ? \"\" : \"validError \"}${\r\n            this.state.selected ? \"selected \" : \"\"\r\n          }${this.state.isShowInputRequest ? \"\" : \"dn \"}form-control`}\r\n          placeholder=\"Введіть цифри...\"\r\n          type=\"text\"\r\n          onBlur={this.onClickBlockSelectItem}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={(e) =>\r\n            this.state.isShowBlockSelect\r\n              ? this.setState({ isShowBlockSelect: false })\r\n              : this.onClickAutocompleteInput(e)\r\n          }\r\n          value={this.state.inputRequest}\r\n        />\r\n        {/*<input*/}\r\n        {/*    className={`${this.state.selected ? 'selected ' : ''}${this.state.isShowInputRequest ? '' : 'dn '}form-control`}*/}\r\n        {/*    placeholder=\"Введіть перші три цифри...\" type=\"text\"*/}\r\n        {/*    onBlur={this.onBlurAutocompleteInput}*/}\r\n        {/*    onChange={this.onChangeAutocompleteInput}*/}\r\n        {/*    onClick={this.onClickAutocompleteInput}*/}\r\n        {/*    value={this.state.inputRequest}*/}\r\n        {/*/>*/}\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <BlockSelectItemIdentCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? (\r\n          <div className=\"coverloader\">\r\n            <div className=\"loader\"></div>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass AutocompleteInputMccCode extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: null,\r\n\r\n      inputRequest: null,\r\n      inputResult: this.props.mcc_code,\r\n\r\n      isShowBlockSelect: false,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n\r\n      isLoading: false,\r\n\r\n      selected: false,\r\n    };\r\n    this.myRef = React.createRef();\r\n  }\r\n\r\n  // componentDidMount() {\r\n  //   window.addEventListener(\"mousedown\", this.clickTest);\r\n  // }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.props.addMccCode(Number(0));\r\n    this.setState({\r\n      inputRequest: param,\r\n      selected: false,\r\n    });\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    if (param != \"\") {\r\n      this.request(this.props.token, param, true);\r\n    }\r\n    // this.setState({\r\n    //     isShowBlockSelect: true\r\n    // });\r\n  };\r\n  onBlurAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    // if(param != '' && param.length >= 3){\r\n    //     this.request(this.props.token, param, false);\r\n    // }\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      inputResult: null,\r\n      isShowBlockSelect: true,\r\n      isShowInputResult: false,\r\n      isShowInputRequest: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelect: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.inputRequest) {\r\n        this.request(this.props.token, val, false);\r\n\r\n        // let inputDataObj = this.props.AcquiringReportsCriteria;\r\n        // inputDataObj.tsp_name = val;\r\n        console.log(val);\r\n        //console.log(typeof val);\r\n        this.props.addMccCode(Number(val));\r\n        this.setState({\r\n          inputResult: val,\r\n          inputRequest: val,\r\n          isShowBlockSelect: false,\r\n          isShowInputResult: true,\r\n          isShowInputRequest: false,\r\n\r\n          selected: true,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelect: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  // clickTest = (e) => {\r\n  //   if (this.myRef.current != null) {\r\n  //     if (this.myRef.current.className != e.target.parentElement.className) {\r\n  //       this.setState({\r\n  //         isShowBlockSelect: false,\r\n  //       });\r\n  //     }\r\n  //   }\r\n  // };\r\n  async request(token, param, showBlock) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            data: [{ mcc_name: \"Незнайдено жодного результату\" }],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            data: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelect: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelect: false,\r\n          });\r\n        }\r\n        this.setState({\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  handleSelect = (ev) => {\r\n    let inputValue;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    if (ev.length === 0) {\r\n      inputValue = 0;\r\n    } else {\r\n      inputValue = ev.map((i) => i.value).join(\",\");\r\n    }\r\n    inputDataObj.payment_system_id = inputValue;\r\n    this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n  };\r\n\r\n  render() {\r\n    console.log(this.props);\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"autocomplete\">\r\n        <InputMask\r\n          mask=\"999999999999\"\r\n          type=\"text\"\r\n          maskChar=\"\"\r\n          alwaysShowMask=\"false\"\r\n          pattern=\"[0-9]\"\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputRequest ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Введіть код...\"\r\n          type=\"text\"\r\n          onBlur={this.onBlurAutocompleteInput}\r\n          onChange={this.onChangeAutocompleteInput}\r\n          onClick={this.onClickAutocompleteInput}\r\n          value={this.state.inputRequest}\r\n        />\r\n        <input\r\n          className={`${this.state.selected ? \"selected \" : \"\"}${\r\n            this.state.isShowInputResult ? \"\" : \"dn \"\r\n          }form-control`}\r\n          placeholder=\"Результат\"\r\n          type=\"text\"\r\n          value={this.state.inputResult}\r\n          onClick={this.onClickAutocompleteInputRes}\r\n        />\r\n        <div\r\n          className={`${this.state.isShowBlockSelect ? \"\" : \"dn \"}blockSelect`}\r\n          onBlur={this.onBlurBlockSelect}\r\n          ref={this.myRef}\r\n        >\r\n          {this.state.isShowBlockSelect ? (\r\n            this.state.data != null ? (\r\n              this.state.data.map((item, index) => {\r\n                return (\r\n                  <ItemMccCode\r\n                    key={index}\r\n                    item={item}\r\n                    onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                  />\r\n                );\r\n              })\r\n            ) : (\r\n              <></>\r\n            )\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n        {this.state.isLoading ? <LoaderUI /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass REPORT_OPERATIONS extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        report_type_id: \"REPORT_OPERATIONS\",\r\n        payment_system_id: 0,\r\n        format_type_id: 1,\r\n        terminal_type_id: 2,\r\n        institution_id: 0,\r\n        date_type_id: 1,\r\n        merchant_id: 0,\r\n        terminal_id: 0,\r\n        tsp_id: 0,\r\n        ident_code: 0,\r\n      },\r\n\r\n      date_from: null,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n\r\n      DICT_TERMINAL_SYSTEM: null,\r\n      isShowSelectDICT_MERCHANT_SYSTEM: false,\r\n\r\n      DICT_MERCHANT_SYSTEM: null,\r\n      isShowSelectDICT_TERMINAL_SYSTEM: false,\r\n\r\n      DICT_MCC_SYSTEM: null,\r\n      isShowSelectDICT_MCC_SYSTEM: false,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_month_Validation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_toValidation: true,\r\n      isForm_toValidation: true,\r\n\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      error_text: \"Заповніть, будь ласка, дати\",\r\n      isSuccess: false,\r\n      merchant_error: \"\",\r\n    };\r\n    this.myRef = React.createRef();\r\n    //console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    // window.addEventListener(\"mousedown\", this.clickTest);\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n\r\n        if (response.data.Table.TableRows.length === 1) {\r\n          const param = response.data.Table.TableRows[0].institution_id;\r\n          let inputDataObj = this.state.AcquiringReportsCriteria;\r\n          inputDataObj.institution_id = param;\r\n\r\n          this.setState({\r\n            isShowSelectTVBV: false,\r\n            TSPReportSettingsSearchObj: inputDataObj,\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isInstitution_idValidation: true,\r\n            institution_id: param,\r\n          });\r\n          this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n        }\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_MERCHANT_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_MERCHANT_SYSTEM: response.data.merchant_list.TableRows,\r\n          isShowSelectDICT_MERCHANT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_TERMINAL_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.tsp_id) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.tsp_id;\r\n    } else if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.Table.TableRows,\r\n            DICT_MCC_SYSTEM: response.data.Table.TableRows,\r\n            isShowSelectDICT_TERMINAL_SYSTEM: true,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  async requestDICT_MCC_SYSTEM() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMCC`;\r\n    const userBody = {\r\n      terminal_id: +this.state.AcquiringReportsCriteria.tsp_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.AcquiringReportsCriteria.ident_code) {\r\n      userBody.client_id = +this.state.AcquiringReportsCriteria.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        if (response.data.record_count !== 0) {\r\n          this.setState({\r\n            DICT_TERMINAL_SYSTEM: response.data.mcc_list.TableRows,\r\n            isShowSelectDICT_MCC_SYSTEM: true,\r\n          });\r\n        }\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.users);\r\n        //console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        // this.setState({isSuccess: true})\r\n        // this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    console.log(e.target.value);\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = param;\r\n\r\n    console.log(inputDataObj);\r\n    if (param == \"\") {\r\n      console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n\r\n    console.log(this.state);\r\n    console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      console.log(inputValue);\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n\r\n    console.log(this.state);\r\n    console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    if (inputValue == \"\") {\r\n      console.log(inputValue);\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n\r\n    console.log(this.state);\r\n    console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\"\r\n    ) {\r\n      inputDataObj[apiName] = Number(inputValue);\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state);\r\n    console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    if (day.toString().length < 2) {\r\n      day = \"0\" + day;\r\n    }\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  };\r\n\r\n  sendOptionToServer() {\r\n    if (\r\n      this.state.isInstitution_idValidation &&\r\n      this.state.isTerminal_type_idValidation &&\r\n      // this.state.isMerchant_idValidation &&\r\n      this.state.isDate_type_idValidation &&\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation &&\r\n      this.state.isForm_toValidation &&\r\n      this.state.isDate_month_Validation\r\n    ) {\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n    }\r\n  }\r\n\r\n  handleCheckId() {\r\n    this.checkMerchantID().then((res) => {\r\n      if (res.data.ErrorStatus.ErrorCode !== 0) {\r\n        this.setState({\r\n          merchant_error: res.data.ErrorStatus.ErrorMessage,\r\n          isShowPopupError: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n  async checkMerchantID() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/QueryMerchant`;\r\n    const userBody = {\r\n      institution_id: +this.state.institution_id,\r\n      merchant_id: +this.state.merchant_id || 0,\r\n    };\r\n\r\n    if (this.state.tsp_id) {\r\n      userBody.client_id = +this.state.tsp_id;\r\n    } else if (this.state.ident_code) {\r\n      userBody.client_id = +this.state.ident_code;\r\n    } else {\r\n      userBody.client_id = 0;\r\n    }\r\n\r\n    return await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${this.props.store.userState.token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.changeLoading(false);\r\n        return response;\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  defineValidationInputs = () => {\r\n    // if (this.state.merchant_id == null || this.state.merchant_id == \"\") {\r\n    //     this.setState({isMerchant_idValidation: false});\r\n    // }\r\n\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (this.state.institution_id == null || this.state.institution_id == 0) {\r\n      this.setState({ isInstitution_idValidation: false });\r\n    }\r\n\r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({ isDate_fromValidation: false });\r\n    }\r\n    if (this.state.date_to == null || this.state.date_to == \"\") {\r\n      this.setState({ isDate_toValidation: false });\r\n    }\r\n\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n\r\n    if (\r\n      this.state.AcquiringReportsCriteria.ident_code === 0 &&\r\n      this.state.AcquiringReportsCriteria.tsp_id == 0 &&\r\n      this.state.AcquiringReportsCriteria.merchant_id == 0 &&\r\n      !this.state.AcquiringReportsCriteria.trans_rrn &&\r\n      this.state.AcquiringReportsCriteria.terminal_id == 0\r\n    ) {\r\n      this.setState({ isForm_toValidation: false });\r\n    } else {\r\n      this.setState({ isForm_toValidation: true });\r\n    }\r\n\r\n    this.setState({}, () => this.sendOptionToServer());\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    return tsp_list.map((item, index) => {\r\n      console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_name}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_name}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    console.log(currentTsp);\r\n    console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      console.log(this.state.currentTsp);\r\n      console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      console.log(item);\r\n\r\n      console.log(item.tsp_id);\r\n      console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n\r\n          console.log(report_period_type_id);\r\n          console.log(report_format_id);\r\n          console.log(channel_type_id);\r\n          console.log(file_name_mask);\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період звіту</label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            console.log(report_period_type_id);\r\n            console.log(report_format_id);\r\n            console.log(channel_type_id);\r\n            console.log(file_name_mask);\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                console.log(acquiring_type_id);\r\n                console.log(report_period_type_id);\r\n                console.log(report_format_id);\r\n                console.log(channel_type_id);\r\n                console.log(file_name_mask);\r\n                console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     console.log(item);\r\n        //     console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //console.log(val);\r\n    //console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //console.log(this.state.InputDICT_MCC);\r\n      //console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //console.log(e.target.parentElement.className);\r\n    //console.log(this.myRef.current.className);\r\n    // console.log(this.myRef);\r\n    // console.log(typeof this.myRef);\r\n    // console.log(this.myRef != null);\r\n    //console.log(this.myRef.current != null);\r\n    // console.log(e);\r\n    // console.log(e.target);\r\n    // console.log(e.target.parentElement);\r\n    // console.log(e.target.parentElement.className);\r\n    // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    // if (this.myRef.current != null) {\r\n    //   if (this.myRef.current.className != e.target.parentElement.className) {\r\n    //     this.setState({\r\n    //       isShowBlockSelectDICT_MCC: false,\r\n    //     });\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n  //\r\n  addTspName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addMerchantName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.merchant_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addTerminalName = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.terminal_id = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria.tsp_name);\r\n  };\r\n  addIdentCode = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.ident_code = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addClientID = (val) => {\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.tsp_id = val;\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  addMccCode = (val) => {\r\n    console.log(val);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj.mcc_code = val;\r\n    console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring\">\r\n        {this.state.isSuccess ? (\r\n          <Alert variant={\"success\"}>\r\n            Звіт Виписка операцій успішно сформована. Перейдіть по{\" \"}\r\n            <Alert.Link href=\"/dashboard/REPORTS_ACQUIRING_MONITOR\">\r\n              лінку\r\n            </Alert.Link>\r\n            . Для перегляду звіта.\r\n          </Alert>\r\n        ) : null}\r\n\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter\">\r\n          <div className=\"coverInput col-3\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">РУ менеджера</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : null}\r\n            </select>\r\n            <p className=\"error\">\r\n            {this.state.isInstitution_idValidation\r\n                ? null\r\n                : \"Оберіть, будь ласка, значення!\"}\r\n            </p>\r\n            <label htmlFor=\"TVBV\">ТВБВ</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              apiName=\"bank_branch_id\"\r\n              className=\"form-select\"\r\n              disabled={this.state.isDisableTVBV ? \"disabled\" : \"\"}\r\n              title=\"ТВБВ\"\r\n            >\r\n              <option></option>\r\n              {this.state.isShowSelectTVBV ? (\r\n                this.state.DICT_BRANCH.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_BRANCH key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            <label htmlFor=\"tsp_name\">Назва ТСП</label>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"tsp_name\" id=\"tsp_name\" type=\"text\"/>*/}\r\n            <AutocompleteInputTspName\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTspName}\r\n              tsp_name={this.state.AcquiringReportsCriteria.tsp_id}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n            <label htmlFor=\"INN\">ІНН/ЄДРПОУ</label>\r\n            <AutocompleteInputIdentCode\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addIdentCode={this.addIdentCode}\r\n              addClientID={this.addClientID}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n\r\n            <label htmlFor=\"INN\">РРН</label>\r\n            <input\r\n              onChange={this.changeInput}\r\n              apiName=\"trans_rrn\"\r\n              type=\"text\"\r\n              class={`form-control ${\r\n                !this.state.isForm_toValidation ? \"validError \" : false\r\n              }`}\r\n              placeholder=\"Введіть цифри...\"\r\n            ></input>\r\n\r\n            <p className=\"error\">\r\n              {this.state.isForm_toValidation\r\n                ? null\r\n                : \"Заповніть, будь ласка, одне з 5-и значень!\"}\r\n            </p>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"ident_code\" id=\"INN\" type=\"text\"/>*/}\r\n          </div>\r\n          <div className=\"coverInput col-2\">\r\n            {/*<label htmlFor=\"report_type_id\">Назва звіту</label>*/}\r\n            {/*<select onChange={this.changeInput} apiName=\"report_type_id\" id=\"report_type_id\" className=\"form-select\"*/}\r\n            {/*        title=\"\">*/}\r\n            {/*    <option>-</option>*/}\r\n            {/*    {*/}\r\n            {/*        this.state.isShowSelectDICT_ACQUIRING_REPORTS*/}\r\n            {/*            ?*/}\r\n            {/*            this.state.DICT_ACQUIRING_REPORTS.map((item, index) => {*/}\r\n            {/*                return < OptionItemDICT_ACQUIRING_REPORTS key={index} optionItem={item}/>*/}\r\n            {/*            })*/}\r\n            {/*            : <>*/}\r\n            {/*            </>*/}\r\n            {/*    }*/}\r\n            {/*</select>*/}\r\n\r\n            {/* <label htmlFor=\"terminal_type_id\">Вид термінала</label>\r\n                        <select onChange={this.changeInput} apiName=\"terminal_type_id\" id=\"terminal_type_id\" className={`${this.state.isTerminal_type_idValidation ? '' : 'validError'} form-select`}\r\n                                title=\"Регіональні управління\">\r\n                            <option></option>\r\n                            {\r\n                                this.state.isShowSelectDICT_ACQUIRING_TYPE\r\n                                    ?\r\n                                    this.state.DICT_ACQUIRING_TYPE.map((item, index) => {\r\n                                        return < OptionItemDICT_ACQUIRING_TYPE key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select> */}\r\n            {/* <p className=\"error\">{this.state.isTerminal_type_idValidation ? null : this.state.error_text}</p> */}\r\n            {/* <label htmlFor=\"merchant\">merchant ID</label>\r\n                        <select onChange={this.changeInput} onFocus={()=>this.requestDICT_MERCHANT_SYSTEM()} apiName=\"merchant_id\" id=\"dropdown-basic-button\" className=\"form-select\"\r\n                                title=\"merchant ID\">\r\n                                    <option></option>\r\n                            {\r\n                                this.state.isShowSelectDICT_MERCHANT_SYSTEM\r\n                                    ?\r\n                                    this.state.DICT_MERCHANT_SYSTEM.map((item, index) => {\r\n                                        return < OptionItemDICT_MERCHANT_SYSTEM key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select> */}\r\n\r\n            <label htmlFor=\"merchant_id\">merchant ID</label>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"tsp_name\" id=\"tsp_name\" type=\"text\"/>*/}\r\n            <AutocompleteInputMerchantName\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addMerchantName}\r\n              tsp_id={this.state.AcquiringReportsCriteria.tsp_id}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              tsp_name={this.state.AcquiringReportsCriteria.merchant_id}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n            {/* <input onChange={this.changeInput} className={`form-control`} apiName=\"merchant_id\" id=\"merchant\" type=\"text\" onBlur={this.handleCheckId.bind(this)}/> */}\r\n            {/* <p className=\"error\">{this.state.isMerchant_idValidation ? null : this.state.error_text}</p> */}\r\n\r\n            <label htmlFor=\"terminal_id\">Terminal ID</label>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"tsp_name\" id=\"tsp_name\" type=\"text\"/>*/}\r\n            <AutocompleteInputTerminalName\r\n              token={this.props.store.userState.token}\r\n              institution_id={\r\n                this.state.AcquiringReportsCriteria.institution_id\r\n              }\r\n              branch_id={this.state.AcquiringReportsCriteria.bank_branch_id}\r\n              addTspName={this.addTerminalName}\r\n              tsp_id={this.state.AcquiringReportsCriteria.tsp_id}\r\n              ident_code={this.state.AcquiringReportsCriteria.ident_code}\r\n              tsp_name={this.state.AcquiringReportsCriteria.merchant_id}\r\n              isError={this.state.isForm_toValidation}\r\n            />\r\n\r\n            {/* <label htmlFor=\"terminal_id\">Terminal ID</label>\r\n                        <select onChange={this.changeInput} onFocus={()=>this.requestDICT_TERMINAL_SYSTEM()} apiName=\"terminal_id\" id=\"dropdown-basic-button\" className=\"form-select\"\r\n                                title=\"Terminal ID\">\r\n                                    <option></option>\r\n\r\n                            {\r\n                                this.state.isShowSelectDICT_TERMINAL_SYSTEM\r\n                                    ?\r\n                                    this.state.DICT_TERMINAL_SYSTEM.map((item, index) => {\r\n                                        return < OptionItemDICT_TERMINAL_SYSTEM key={index} optionItem={item}/>\r\n                                    })\r\n                                    : <>\r\n                                    </>\r\n                            }\r\n                        </select> */}\r\n          </div>\r\n          <div className=\"coverInput col-3\">\r\n            <div className=\"base-field\">\r\n              <label htmlFor=\"base\">Базові поля</label>\r\n              <input apiName=\"base\" id=\"base\" type=\"checkbox\" />\r\n            </div>\r\n            <label htmlFor=\"DICT_PAYMENT_SYSTEM\">Карти</label>\r\n            {/* <select\r\n              onChange={this.changeInput}\r\n              apiName=\"payment_system_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className=\"form-select\"\r\n              title=\"Карти\"\r\n            >\r\n              {this.state.isShowSelectDICT_PAYMENT_SYSTEM ? (\r\n                this.state.DICT_PAYMENT_SYSTEM.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_PAYMENT_SYSTEM\r\n                      key={index}\r\n                      optionItem={item}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select> */}\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              isMulti\r\n              options={this.state.DICT_PAYMENT_SYSTEM}\r\n              placeholder=\"Всі\"\r\n              onChange={this.handleSelect}\r\n            />\r\n            <label htmlFor=\"terminal_id\">MCC</label>\r\n            <select\r\n              onChange={this.changeInput}\r\n              onFocus={() => this.requestDICT_TERMINAL_SYSTEM()}\r\n              apiName=\"mcc_code\"\r\n              id=\"dropdown-basic-button\"\r\n              className=\"form-select\"\r\n              title=\"Terminal ID\"\r\n            >\r\n              {this.state.isShowSelectDICT_MCC_SYSTEM ? (\r\n                this.state.DICT_MCC_SYSTEM.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_TERMINAL_SYSTEM\r\n                      key={index}\r\n                      optionItem={item}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n            {/* <label htmlFor=\"mcc_code\">MCC</label>\r\n            <AutocompleteInputMccCode\r\n              token={this.props.store.userState.token}\r\n              addMccCode={this.addMccCode}\r\n              mcc_code={this.state.AcquiringReportsCriteria.mcc_code}\r\n            /> */}\r\n\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"mcc_code\" id=\"mcc_code\" type=\"text\"/>*/}\r\n            {/*<div className=\"autocomplete\">*/}\r\n            {/*    <input*/}\r\n            {/*        className={`${this.state.isShowInputDICT_MCC ? '' : 'dn'} form-control`}*/}\r\n            {/*        placeholder=\"Введіть код\" type=\"text\"*/}\r\n            {/*        onBlur={this.onBlurAutocompleteInput}*/}\r\n            {/*        onChange={this.onChangeAutocompleteInput}*/}\r\n            {/*        onClick={this.onClickAutocompleteInput}*/}\r\n            {/*        value={this.state.InputDICT_MCC}*/}\r\n            {/*    />*/}\r\n            {/*    <input*/}\r\n            {/*        className={`${this.state.isShowInputResDICT_MCC ? '' : 'dn'} form-control`}*/}\r\n            {/*        placeholder=\"Результат\" type=\"text\"*/}\r\n            {/*        value={this.state.AcquiringReportsCriteria.mcc_code}*/}\r\n            {/*        onClick={this.onClickAutocompleteInputRes}*/}\r\n            {/*    />*/}\r\n            {/*    <div className={`${this.state.isShowBlockSelectDICT_MCC ? '' : 'dn'}blockSelect`} onBlur={this.onBlurBlockSelect} ref={this.myRef} >*/}\r\n            {/*        {*/}\r\n            {/*            this.state.isShowBlockSelectDICT_MCC*/}\r\n            {/*                ? this.state.DICT_MCC != null*/}\r\n            {/*                ? this.state.DICT_MCC.map((item, index) => {*/}\r\n            {/*                    return < ItemDICT_MCC key={index} item={item} onClickBlockSelectItem={this.onClickBlockSelectItem}/>*/}\r\n            {/*                })*/}\r\n            {/*                : <></>*/}\r\n            {/*                : <></>*/}\r\n\r\n            {/*        }*/}\r\n            {/*    </div>*/}\r\n            {/*</div>*/}\r\n\r\n            <label htmlFor=\"format_type_id\">Формат файлу</label>\r\n            <select\r\n              onChange={this.changeInput}\r\n              apiName=\"format_type_id\"\r\n              id=\"format_type_id\"\r\n              className=\"form-select\"\r\n              title=\"DICT_REPORT_FORMAT\"\r\n            >\r\n              {this.state.isShowSelectDICT_REPORT_FORMAT ? (\r\n                this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                  //console.log(item)\r\n                  return (\r\n                    <OptionItemDICT_REPORT_FORMAT\r\n                      key={index}\r\n                      optionItem={item}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <div className=\"coverInput col-4\">\r\n            <div className=\"coverInput col-11\">\r\n              <div className=\"coverDate\">\r\n                {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                <select\r\n                  onChange={this.changeInput}\r\n                  apiName=\"date_type_id\"\r\n                  id=\"date_type_id\"\r\n                  className={`${\r\n                    this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                  } form-select`}\r\n                  title=\"DICT_DATE_TYPE\"\r\n                >\r\n                  {this.state.isShowSelectDICT_DATE_TYPE ? (\r\n                    this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                      //console.log(item)\r\n                      return (\r\n                        <OptionItemDICT_DATE_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                        />\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <></>\r\n                  )}\r\n                </select>\r\n                <p className=\"error\">\r\n                  {this.state.isDate_type_idValidation\r\n                    ? null\r\n                    : this.state.error_text}\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"coverInput col-11\">\r\n              <span>Період звіту</span>\r\n              <div className=\"row\">\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_from\">З</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_from}\r\n                    apiName=\"date_from\"\r\n                    className={`${\r\n                      this.state.isDate_fromValidation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_from\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_to\">По</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_to}\r\n                    apiName=\"date_to\"\r\n                    className={`${\r\n                      this.state.isDate_toValidation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_to\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <p className=\"error\">\r\n                {this.state.isDate_fromValidation &&\r\n                this.state.isDate_toValidation\r\n                  ? null\r\n                  : \"Заповніть, будь ласка, дати!\"}\r\n                {this.state.isDate_month_Validation\r\n                  ? null\r\n                  : \"Максимальний термін 31 день!\"}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Побудувати звіт\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-danger\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">{this.state.merchant_error}</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS;\r\n","import { BootstrapTable, TableHeaderColumn } from \"react-bootstrap-table\";\r\nimport React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport { Typeahead } from \"react-bootstrap-typeahead\";\r\nimport Select from \"react-select\";\r\n\r\n\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { ListGroup } from \"react-bootstrap\";\r\n\r\nconst OptionItemDICT_INSTITUTION = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option value={props.optionItem.institution_id}>\r\n      {props.optionItem.institution_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option value={props.optionItem.branch_id}>\r\n      {props.optionItem.branch_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_BRANCH_ENTITY = (props) => {\r\n  console.log(\"OptionItemDICT_BRANCH_ENTITY:\", props);\r\n  return (\r\n    <option value={props.optionItem.entity_id}>\r\n      {props.optionItem.entity_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemCommon = ({ name, id }) => {\r\n  return <option value={id}>{name}</option>;\r\n};\r\nconst OptionItemDICT_ACQUIRING_REPORTS = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_id}>\r\n      {props.optionItem.report_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_ACQUIRING_TYPE = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option value={props.optionItem.acquiring_type_id}>\r\n      {props.optionItem.acquiring_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_TSP_TYPE = ({ optionItem }) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option value={optionItem.id}>{optionItem.name} - {optionItem.institution_id}</option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\n\r\nconst OptionItemDICT_PAYMENT_SYSTEM = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option value={props.optionItem.payment_system_id}>\r\n      {props.optionItem.payment_system_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_FORMAT = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option value={props.optionItem.report_format_id}>\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_DATE_TYPE = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option value={props.optionItem.date_type_id}>\r\n      {props.optionItem.date_type_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItem = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_format_id == props.report_format_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_format_id}\r\n    >\r\n      {props.optionItem.report_format_name}\r\n    </option>\r\n    // <Dropdown.Item  onClick={() => this.selectRoleID} value={props.optionItem.role_id} >{props.optionItem.role_name}</Dropdown.Item>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_PERIOD_TYPE = (props) => {\r\n  // // console.log( props );\r\n  // // console.log( props.optionItem.report_period_type_id );\r\n  // // console.log( props.report_period_type_id );\r\n  //// console.log( props.optionItem.report_period_type_id == props.report_period_type_id  );\r\n\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_period_type_id == props.report_period_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_period_type_id}\r\n    >\r\n      {props.optionItem.report_period_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst OptionItemDICT_REPORT_CHANNEL_TYPE = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <option\r\n      selected={\r\n        props.optionItem.report_channel_type_id == props.channel_type_id\r\n          ? \"selected\"\r\n          : \"\"\r\n      }\r\n      value={props.optionItem.report_channel_type_id}\r\n    >\r\n      {props.optionItem.report_channel_type_name}\r\n    </option>\r\n  );\r\n};\r\nconst ItemDICT_MCC = (props) => {\r\n  //// console.log( props )\r\n  return (\r\n    <div\r\n      className=\"blockSelectItem\"\r\n      value={props.item.mcc_code}\r\n      onClick={(e) => props.onClickBlockSelectItem(e)}\r\n    >\r\n      {props.item.mcc_name}\r\n    </div>\r\n  );\r\n};\r\n\r\nclass REPORT_OPERATIONS_NET extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      DICT_INSTITUTION: null,\r\n      isShowSelectDICT_INSTITUTION: false,\r\n\r\n      DICT_BRANCH: null,\r\n      isDisableTVBV: true,\r\n      isShowSelectTVBV: false,\r\n\r\n      DICT_ACQUIRING_REPORTS: null,\r\n      isShowSelectDICT_ACQUIRING_REPORTS: false,\r\n\r\n      DICT_ACQUIRING_TYPE: null,\r\n      isShowSelectDICT_ACQUIRING_TYPE: false,\r\n\r\n      DICT_PAYMENT_SYSTEM: null,\r\n      isShowSelectDICT_PAYMENT_SYSTEM: false,\r\n\r\n      DICT_REPORT_FORMAT: null,\r\n      isShowSelectDICT_REPORT_FORMAT: false,\r\n\r\n      DICT_DATE_TYPE: null,\r\n      isShowSelectDICT_DATE_TYPE: false,\r\n\r\n      AcquiringReportsCriteria: {\r\n        report_type_id: \"REPORT_OPERATIONS_NET\",\r\n        payment_system_id: 0,\r\n        format_type_id: 1,\r\n        date_type_id: 1,\r\n      },\r\n      date_from: null,\r\n      date_to: null,\r\n      date_type_id: 1,\r\n      institution_id: 0,\r\n      merchant_id: null,\r\n      terminal_type_id: null,\r\n      brand_name: null,\r\n\r\n      isInstitution_idValidation: true,\r\n      isMerchant_idValidation: true,\r\n      isTerminal_type_idValidation: true,\r\n      isDate_type_idValidation: true,\r\n      isDate_month_Validation: true,\r\n      isDate_fromValidation: true,\r\n      isDate_toValidation: true,\r\n      isMerchant_toValidation: true,\r\n      isTerminal_toValidation: true,\r\n      isBrandName_toValidation: true,\r\n      isTSP_toValidation: true,\r\n      isMCC_toValidation: true,\r\n\r\n      DICT_BRAND_NAME_ID: null,\r\n      DICT_MCC: null,\r\n      InputDICT_MCC: null,\r\n      isShowBlockSelectDICT_MCC: false,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n      isShow_BRANCH_NAME_VALUES: false,\r\n      DICT_BRAND_VALUES: [],\r\n      DICT_BRAND_NAME_VALUES: [],\r\n      DICT_BRAND_NAME_VAL: null,\r\n      isShow_ENTITY_NAME_VALUES: false,\r\n\r\n      isShow_DICT_TSP: false,\r\n      DICT_TSP_VALUE: [],\r\n\r\n      isShow_DICT_MERCHANT: false,\r\n      DICT_MERCHANT_VALUE: [],\r\n\r\n      isShow_DICT_TERMINAL: false,\r\n      DICT_TERMINAL_VALUE: [],\r\n      error_text: \"Заповніть, будь ласка, значення!\"\r\n    };\r\n    this.myRef = React.createRef();\r\n    this.handleRequestDICT_BRANCH_NAME =\r\n      this.handleRequestDICT_BRANCH_NAME.bind(this);\r\n    this.get_DICT_BRAND_NAME_LEVEL = this.get_DICT_BRAND_NAME_LEVEL.bind(this);\r\n    this.get_DICT_TSP = this.get_DICT_TSP.bind(this);\r\n\r\n    //// console.log(this.data.sort());\r\n  }\r\n  componentDidMount() {\r\n    window.addEventListener(\"mousedown\", this.clickTest);\r\n    this.requestDICT_INSTITUTION(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_REPORTS(this.props.store.userState.token);\r\n    this.requestDICT_ACQUIRING_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_PAYMENT_SYSTEM(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_DATE_TYPE(this.props.store.userState.token);\r\n    this.get_DICT_NET_BRAND(this.props.store.userState.token);\r\n  }\r\n  componentWillUnmount() {\r\n    window.addEventListener(\"mousedown\", null);\r\n  }\r\n\r\n  async requestDICT_BRANCH(token, param) {\r\n    this.props.store.changeLoading(true);\r\n    console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_BRANCH/?param1=${param}`;\r\n    let paramBody = {\r\n      param1: param,\r\n    };\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        //console.log(response.data.Table);\r\n\r\n        this.setState({\r\n          DICT_BRANCH: response.data.Table.TableRows,\r\n          isShowSelectTVBV: true,\r\n          isDisableTVBV: false,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n        console.log(error.response.data);\r\n        //console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_INSTITUTION(token) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        //// console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.Table);\r\n        this.setState({\r\n          DICT_INSTITUTION: response.data.Table.TableRows,\r\n          isShowSelectDICT_INSTITUTION: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  async get_DICT_NET_BRAND(token) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND`;\r\n\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          DICT_BRAND_NAME_VALUES: response.data.Table.TableRows.map(\r\n            (item) => item.brand_name\r\n          ),\r\n          DICT_BRAND_VALUES: response.data.Table.TableRows,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n  async get_DICT_BRAND_NAME_LEVEL() {\r\n    if (!this.state.DICT_BRAND_NAME_VAL) return;\r\n    this.props.store.changeLoading(true);\r\n\r\n    const { second_level_flag, brand_id } = this.state.DICT_BRAND_VALUES.filter(\r\n      (item) => item.brand_name === this.state.DICT_BRAND_NAME_VAL[0]\r\n    )[0];\r\n\r\n    this.setState({\r\n      DICT_BRAND_NAME_ID: brand_id,\r\n    });\r\n\r\n    console.log(\"this.state\", this.state);\r\n\r\n    if (second_level_flag === 1) {\r\n      const secondUrl = `/api/Dictionary/DICT_NET_ENTITY/?param1=${brand_id}`;\r\n      await axios\r\n        .get(secondUrl, {\r\n          headers: { Token: `${this.props.store.userState.token}` },\r\n        })\r\n        .then((res) => {\r\n          console.log(\"res.data.Table.TableRows\", res.data.Table.TableRows);\r\n          this.setState({\r\n            DICT_BRANCH_ENTITY_VALUES: res.data.Table.TableRows,\r\n            isShow_ENTITY_NAME_VALUES: true,\r\n            isInstitution_idValidation: true\r\n          });\r\n        });\r\n    } else {\r\n      this.setState({\r\n        DICT_BRANCH_ENTITY_VALUES: [],\r\n        isShow_ENTITY_NAME_VALUES: false,\r\n        isInstitution_idValidation: true\r\n      });\r\n    }\r\n    this.props.store.changeLoading(false);\r\n    this.get_DICT_TSP(brand_id);\r\n    this.get_DICT_BRAND_MERCHANT(brand_id);\r\n    this.get_DICT_BRAND_TERMINALS(brand_id);\r\n  }\r\n\r\n  async get_DICT_BRAND_MERCHANT(brand_id = null) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const params = {\r\n      param1: brand_id ? brand_id : this.state.DICT_BRAND_NAME_ID,\r\n    };\r\n    if (this.state.AcquiringReportsCriteria.network_entity_id) {\r\n      params.param2 = this.state.AcquiringReportsCriteria.network_entity_id;\r\n    }\r\n\r\n    console.log(\"params: \", params);\r\n    const secondUrl = `/api/Dictionary/DICT_NETWORK_MERCHANTS`;\r\n    await axios\r\n      .get(secondUrl, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n        params,\r\n      })\r\n      .then((res) => {\r\n        console.log(\"res.data.Table.TableRows\", res.data.Table.TableRows);\r\n        this.setState({\r\n          DICT_MERCHANT_VALUE: res.data.Table.TableRows,\r\n          isShow_DICT_MERCHANT: res.data.Table.TableRows !== null,\r\n        });\r\n      });\r\n\r\n    this.props.store.changeLoading(false);\r\n  }\r\n\r\n  async get_DICT_BRAND_TERMINALS(brand_id = null) {\r\n    this.props.store.changeLoading(true);\r\n\r\n    const params = {\r\n      param1: brand_id ? brand_id : this.state.DICT_BRAND_NAME_ID,\r\n    };\r\n    if (this.state.AcquiringReportsCriteria.network_entity_id) {\r\n      params.param2 = this.state.AcquiringReportsCriteria.network_entity_id;\r\n    }\r\n\r\n    const secondUrl = `/api/Dictionary/DICT_NETWORK_TERMINALS`;\r\n    await axios\r\n      .get(secondUrl, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n        params,\r\n      })\r\n      .then((res) => {\r\n        console.log(\"res.data.Table.TableRows\", res.data.Table.TableRows);\r\n        this.setState({\r\n          DICT_TERMINAL_VALUE: res.data.Table.TableRows,\r\n          isShow_DICT_TERMINAL: res.data.Table.TableRows !== null,\r\n        });\r\n      });\r\n\r\n    this.props.store.changeLoading(false);\r\n  }\r\n  async get_DICT_TSP(brand_id) {\r\n    this.props.store.changeLoading(true);\r\n    // const client_name =\r\n    //   !this.state.DICT_BRAND_NAME_VAL\r\n    //     ? \"\"\r\n    //     : this.state.DICT_BRAND_NAME_VAL[0];\r\n\r\n    const body = {\r\n      institution_id: Number(this.state.institution_id),\r\n      branch_id: this.state.AcquiringReportsCriteria.bank_branch_id,\r\n      network_brand_id: brand_id,\r\n    };\r\n\r\n    const baseURL = `/api/Dictionary/QueryTSP`;\r\n    await axios\r\n      .post(baseURL, body, {\r\n        headers: { token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((res) => {\r\n        console.log(\"/api/Dictionary/QueryTSP\", res.data.tsp_list.TableRows);\r\n        this.setState({\r\n          DICT_TSP_VALUE: res.data.tsp_list.TableRows,\r\n          isShow_DICT_TSP: res.data.tsp_list.TableRows !== null,\r\n        });\r\n      });\r\n\r\n    this.props.store.changeLoading(false);\r\n  }\r\n  async requestDICT_REPORT_FORMAT(token) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_FORMAT`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_FORMAT: response.data.Table.TableRows,\r\n          isShowSelectDICT_REPORT_FORMAT: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_REPORT_PERIOD_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_REPORT_PERIOD_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_REPORT_PERIOD_TYPE: response.data.Table.TableRows,\r\n          isShowDICT_REPORT_PERIOD_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestDICT_ACQUIRING_REPORTS(token) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_REPORTS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_REPORTS: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_REPORTS: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_ACQUIRING_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_ACQUIRING_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_ACQUIRING_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_ACQUIRING_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_PAYMENT_SYSTEM(token) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_PAYMENT_SYSTEM`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_PAYMENT_SYSTEM: response.data.Table.TableRows.map((i) => {\r\n            return { value: i.payment_system_id, label: i.payment_system_name };\r\n          }),\r\n          isShowSelectDICT_PAYMENT_SYSTEM: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n  async requestDICT_BRANCH_NAME() {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_NET_BRAND?param1=${this.state.brand_name}`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${this.props.store.userState.token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_BRAND_NAME_VALUES: response.data.Table.TableRows,\r\n          isShow_BRANCH_NAME_VALUES: response.data.Table.TableRows !== null,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n  handleRequestDICT_BRANCH_NAME(e) {\r\n    const item = {\r\n      brand_name: e.target.innerText,\r\n      brand_id: e.target.dataset.id,\r\n    };\r\n    this.setState({\r\n      brand_name: item.brand_name,\r\n      brand_id: item.brand_id,\r\n      isShow_BRANCH_NAME_VALUES: false,\r\n    });\r\n  }\r\n\r\n  async requestDICT_DATE_TYPE(token) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_DATE_TYPE`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n\r\n        this.setState({\r\n          DICT_DATE_TYPE: response.data.Table.TableRows,\r\n          isShowSelectDICT_DATE_TYPE: true,\r\n        });\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  async requestReports_Acquiring(token, userBody) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Reports/Acquiring`;\r\n\r\n    await axios\r\n      .post(baseUrl, userBody, {\r\n        headers: {\r\n          Token: `${token}`,\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        //// console.log(response.data.users);\r\n        //// console.log(response.data.Table);\r\n\r\n        //this.props.store.showTable(true);\r\n\r\n        // this.props.store.addTableData(true, response.data.users);\r\n        // if(response.data.record_count >= 1){\r\n        //     this.setState({\r\n        //         settings: response.data.settings,\r\n        //         tsp_list: response.data.tsp_list,\r\n        //         //tsp_id: response.data.tsp_list[0].tsp_id,\r\n        //         isShowTsp: true\r\n        //     });\r\n        // }else if(response.data.record_count < 1){\r\n        //     this.setState({\r\n        //         isShowPopupError: true\r\n        //     });\r\n        // }\r\n        this.props.store.changeLoading(false);\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n        //this.props.store.showTable(true);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n\r\n  selectDICT_INSTITUTION = (e) => {\r\n    // console.log(e.target.value);\r\n    let param = e.target.value;\r\n    // console.log(param);\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    // console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    // console.log(inputDataObj);\r\n    if (param == \"\") {\r\n      // console.log(param);\r\n      this.setState({\r\n        isShowSelectTVBV: true,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isShowSelectTVBV: false,\r\n        TSPReportSettingsSearchObj: inputDataObj,\r\n        isInstitution_idValidation: true,\r\n        institution_id: param,\r\n      });\r\n      this.requestDICT_BRANCH(this.props.store.userState.token, param);\r\n    }\r\n\r\n    // console.log(this.state);\r\n    // console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  changeInputDateReport = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    // console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    // console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    // console.log(this.state);\r\n    // console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n  changeInputDateReport_from = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    // console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n    if (inputValue == \"\") {\r\n      // console.log(inputValue);\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_fromValidation: true,\r\n        date_from: inputValue,\r\n      });\r\n    }\r\n\r\n    // console.log(inputDataObj);\r\n\r\n    // console.log(this.state);\r\n    // console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n  changeInputDateReport_to = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    // console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = this.formatDate(new Date(inputValue));\r\n\r\n    if (inputValue == \"\") {\r\n      // console.log(inputValue);\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: false,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        AcquiringReportsCriteria: inputDataObj,\r\n        isDate_toValidation: true,\r\n        date_to: inputValue,\r\n      });\r\n    }\r\n\r\n    // console.log(inputDataObj);\r\n\r\n    // console.log(this.state);\r\n    // console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  changeInputBase = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    // console.log(apiName);\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    inputDataObj[apiName] = inputValue;\r\n\r\n    // console.log(inputDataObj);\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    // console.log(this.state);\r\n    // console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n  changeInput = (e) => {\r\n    let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n    let inputValue = e.target.value;\r\n    let inputDataObj = this.state.AcquiringReportsCriteria;\r\n\r\n    if (\r\n      apiName == \"format_type_id\" ||\r\n      apiName == \"mcc_code\" ||\r\n      apiName == \"payment_system_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"bank_branch_id\" ||\r\n      apiName == \"institution_id\" ||\r\n      apiName == \"tsp_id\" ||\r\n      apiName == \"merchant_id\" ||\r\n      apiName == \"terminal_id\" ||\r\n      apiName == \"ident_code\" ||\r\n      apiName == \"network_entity_id\"\r\n    ) {\r\n      inputDataObj[apiName] = Number(inputValue);\r\n    } else {\r\n      if (apiName == \"terminal_type_id\") {\r\n        inputDataObj[apiName] = inputValue;\r\n        if (inputValue == \"\") {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isTerminal_type_idValidation: true,\r\n            terminal_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"merchant_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          // console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isMerchant_idValidation: true,\r\n            merchant_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"network_entity_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n      } else if (apiName == \"date_type_id\") {\r\n        inputDataObj[apiName] = Number(inputValue);\r\n        if (inputValue == \"\") {\r\n          // console.log(inputValue);\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            AcquiringReportsCriteria: inputDataObj,\r\n            isDate_type_idValidation: true,\r\n            date_type_id: inputValue,\r\n          });\r\n        }\r\n      } else if (apiName == \"brand_name\") {\r\n        this.setState({\r\n          [apiName]: inputValue,\r\n        });\r\n      } else {\r\n        inputDataObj[apiName] = inputValue;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      AcquiringReportsCriteria: inputDataObj,\r\n    });\r\n    console.log(this.state.AcquiringReportsCriteria);\r\n  };\r\n\r\n  formatDate = (date) => {\r\n    let day = date.getDate();\r\n    let month = (\"0\" + (date.getMonth() + 1)).slice(-2);\r\n    let year = date.getFullYear();\r\n    return year + month + day;\r\n  };\r\n  search = () => {\r\n    this.defineValidationInputs();\r\n  }\r\n\r\n  sendOptionToServer(){\r\n    if (\r\n      this.state.isBrandName_toValidation &&\r\n      this.state.isDate_type_idValidation &&\r\n      this.state.isDate_fromValidation &&\r\n      this.state.isDate_toValidation && \r\n      this.state.isDate_month_Validation\r\n    ) {\r\n      \r\n      if( this.state.DICT_BRAND_NAME_ID){\r\n        this.state.AcquiringReportsCriteria.network_brand_id =\r\n          this.state.DICT_BRAND_NAME_ID;\r\n      }\r\n      if( this.state.AcquiringReportsCriteria.institution_id){\r\n        this.state.AcquiringReportsCriteria.institution_id = Number(\r\n          this.state.AcquiringReportsCriteria.institution_id);\r\n       \r\n      }\r\n      if(this.state.AcquiringReportsCriteria.mcc_code){\r\n        this.state.AcquiringReportsCriteria.mcc_code = Number(\r\n          this.state.AcquiringReportsCriteria.mcc_code\r\n        );\r\n      }\r\n\r\n      this.requestReports_Acquiring(\r\n        this.props.store.userState.token,\r\n        this.state.AcquiringReportsCriteria\r\n      );\r\n\r\n    }\r\n  }\r\n  defineValidationInputs = () => {\r\n    const date1 = new Date(this.state.date_from);\r\n    const date2 = new Date(this.state.date_to);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if ( this.state.DICT_BRAND_NAME_VAL == null ||  this.state.DICT_BRAND_NAME_VAL == \"\") {\r\n      this.setState({ isBrandName_toValidation: false });\r\n    }\r\n    // if ( this.state.institution_id == null ||  this.state.institution_id == \"\") {\r\n    //   this.setState({ isInstitution_idValidation: false });\r\n    // }\r\n\r\n    if (this.state.date_type_id == null || this.state.date_type_id == \"\") {\r\n      this.setState({ isDate_type_idValidation: false });\r\n    }\r\n\r\n    if (this.state.date_from == null || this.state.date_from == \"\") {\r\n      this.setState({isDate_fromValidation: false});\r\n    }\r\n\r\n    if (this.state.date_to == null || this.state.date_to == \"\") {\r\n        this.setState({isDate_toValidation: false});\r\n    }\r\n\r\n    if (diffDays > 31) {\r\n      this.setState({ isDate_month_Validation: false });\r\n    }\r\n\r\n    this.setState({}, ()=>this.sendOptionToServer())\r\n  };\r\n  Tsp_list = (tsp_list) => {\r\n    // console.log(tsp_list);\r\n    return tsp_list.map((item, index) => {\r\n      // console.log(item);\r\n      return (\r\n        <li className=\"dropdownMenuItem\">\r\n          <p>\r\n            <input\r\n              name=\"tsp_list\"\r\n              id={item.tsp_id}\r\n              type=\"radio\"\r\n              onClick={this.itemTsp}\r\n              value={item.tsp_id}\r\n            />{\" \"}\r\n            {item.tsp_id}\r\n          </p>\r\n        </li>\r\n      );\r\n    });\r\n  };\r\n  itemTsp = (e) => {\r\n    // let currentTsp = e.target.value;\r\n    // // console.log(currentTsp);\r\n    // let currentTspArr = this.state.currentTsp;\r\n    // currentTspArr.push(currentTsp);\r\n    // this.setState({\r\n    //     currentTsp: currentTspArr,\r\n    //     isShowTypeAcquiring: true\r\n    // });\r\n    let currentTsp = e.target.value;\r\n    // console.log(currentTsp);\r\n    // console.log(this.state);\r\n    this.state.settings.map((item, index) => {\r\n      if (item.tsp_id == currentTsp) {\r\n        if (item.main_settings == null) {\r\n          this.setState({\r\n            type_acquiring: 2,\r\n            report_format_id: 1,\r\n            report_period_type_id: 1,\r\n            channel_type_id: 1,\r\n            file_name_mask: \"\",\r\n          });\r\n        } else if (item.main_settings.length) {\r\n          // console.log(item.main_settings[0].acquiring_type_id);\r\n          this.setState({\r\n            type_acquiring: item.main_settings[0].acquiring_type_id,\r\n            report_format_id: item.main_settings[0].report_format_id,\r\n            report_period_type_id: item.main_settings[0].report_period_type_id,\r\n            channel_type_id: item.main_settings[0].channel_type_id,\r\n            file_name_mask: item.main_settings[0].file_name_mask,\r\n          });\r\n        }\r\n      }\r\n    });\r\n    this.setState({\r\n      currentTsp: Number(currentTsp),\r\n      TSPReportSettingsSTD: null,\r\n      isShowTypeAcquiring: true,\r\n    });\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask\r\n    // });\r\n    this.requestDICT_REPORT_FORMAT(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_PERIOD_TYPE(this.props.store.userState.token);\r\n    this.requestDICT_REPORT_CHANNEL_TYPE(this.props.store.userState.token);\r\n    //this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n\r\n  changeTypeAcquiring = (e) => {\r\n    let typeAcquiring = e.currentTarget.getAttribute(\"type_acquiring\");\r\n    // console.log(typeAcquiring);\r\n    // this.setState({\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n    this.state.settings.map((item, index) => {\r\n      // console.log(this.state.currentTsp);\r\n      // console.log(item.tsp_id);\r\n      if (item.tsp_id == this.state.currentTsp) {\r\n        if (item.main_settings.length > 1) {\r\n          // console.log(item.main_settings.length > 1);\r\n          item.main_settings.map((item, index) => {\r\n            if (item.acquiring_type_id == typeAcquiring) {\r\n              // console.log(item.acquiring_type_id == typeAcquiring);\r\n              this.setState({\r\n                type_acquiring: Number(typeAcquiring),\r\n                report_format_id: item.report_format_id,\r\n                report_period_type_id: item.report_period_type_id,\r\n                channel_type_id: item.channel_type_id,\r\n                file_name_mask: item.file_name_mask,\r\n              });\r\n            }\r\n          });\r\n        }\r\n      }\r\n    });\r\n\r\n    // this.state.settings.map( ( item , index) => {\r\n    //     if(item.tsp_id == this.state.currentTsp){\r\n    //         if(item.main_settings.length > 1){\r\n    //\r\n    //             // console.log(item.main_settings[0].acquiring_type_id);\r\n    //             this.setState({\r\n    //                 type_acquiring: item.main_settings[0].acquiring_type_id,\r\n    //                 report_format_id: item.main_settings[0].report_format_id,\r\n    //                 report_period_type_id: item.main_settings[0].report_period_type_id,\r\n    //                 channel_type_id: item.main_settings[0].channel_type_id,\r\n    //                 file_name_mask: item.main_settings[0].file_name_mask,\r\n    //             });\r\n    //         }\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({\r\n    //     report_period_type_id: this.state.settings[0].main_settings[0].report_period_type_id,\r\n    //     report_format_id: this.state.settings[0].main_settings[0].report_format_id,\r\n    //     channel_type_id: this.state.settings[0].main_settings[0].channel_type_id,\r\n    //     file_name_mask: this.state.settings[0].main_settings[0].file_name_mask,\r\n    //\r\n    //     type_acquiring: Number(typeAcquiring),\r\n    //     isShowReport: true\r\n    // });\r\n  };\r\n\r\n  openStandardReport = () => {\r\n    // this.setState({\r\n    //     isShowTableTSPReportSettingsSTD: true\r\n    // });\r\n    this.requestTSPReportSettingsSTD(this.props.store.userState.token);\r\n  };\r\n  closePopupTable = () => {\r\n    this.setState({\r\n      isShowTableTSPReportSettingsSTD: false,\r\n    });\r\n  };\r\n\r\n  changeReport_format_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    this.setState({\r\n      report_format_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeReport_period_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    this.setState({\r\n      report_period_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeChannel_type_id = (e) => {\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    this.setState({\r\n      channel_type_id: Number(inputValue),\r\n    });\r\n  };\r\n  changeFile_name_mask = (e) => {\r\n    let inputValue = e.target.value;\r\n    // console.log(inputValue);\r\n    this.setState({\r\n      file_name_mask: inputValue,\r\n    });\r\n  };\r\n  saveReport = () => {\r\n    let dody = {\r\n      acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n      tsp_list: [\r\n        {\r\n          tsp_id: this.state.currentTsp, //tsp_id\r\n        },\r\n      ],\r\n      main_settings: {\r\n        acquiring_type_id: this.state.type_acquiring, //type_acquiring\r\n        // \"standard_report\": true,\r\n        // \"extended_report\": true,\r\n        // \"installment_report\": true,\r\n        report_format_id: this.state.report_format_id, //report_format_id\r\n        // \"report_format_name\": \"string\",\r\n        report_period_type_id: this.state.report_period_type_id, //report_period_type_id\r\n        // \"report_period_type_name\": \"string\",\r\n        channel_type_id: this.state.channel_type_id, //channel_type_id\r\n        // \"channel_type_name\": \"string\",\r\n        file_name_mask: this.state.file_name_mask, //file_name_mask\r\n        // \"file_path\": \"string\"\r\n      },\r\n    };\r\n    if (this.state.TSPReportSettingsSTD != null) {\r\n      dody.std_settings = this.state.TSPReportSettingsSTD;\r\n    }\r\n    //// console.log( dody );\r\n    this.requestTSPReportSettingsSTD_SAVE(this.props.store.userState.token);\r\n  };\r\n\r\n  showReport = (currentTsp) => {\r\n    // console.log(currentTsp);\r\n    return this.state.settings.map((item, index) => {\r\n      // console.log(item);\r\n\r\n      // console.log(item.tsp_id);\r\n      // console.log(item.tsp_id == currentTsp);\r\n      if (item.tsp_id == currentTsp) {\r\n        // console.log(item.main_settings);\r\n\r\n        if (item.main_settings == null) {\r\n          let report_period_type_id = 1;\r\n          let report_format_id = 1;\r\n          let channel_type_id = 1;\r\n          let file_name_mask = \"\";\r\n\r\n          // console.log(report_period_type_id);\r\n          // console.log(report_format_id);\r\n          // console.log(channel_type_id);\r\n          // console.log(file_name_mask);\r\n          return (\r\n            <div className=\"report border\">\r\n              <div className=\"title\">Перелік полів звіту ТСП</div>\r\n              <button\r\n                className=\"btn btn-secondary\"\r\n                onClick={this.openStandardReport}\r\n              >\r\n                Стандартний звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Розширений звіт\r\n              </button>\r\n              <button className=\"btn btn-secondary\" disabled>\r\n                Звіт по операціям Installment\r\n              </button>\r\n              <br />\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_format\">Формат файлу</label>\r\n                {this.state.isShowREPORT_FORMAT ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_format_id}\r\n                    name=\"DICT_REPORT_FORMAT\"\r\n                    id=\"DICT_REPORT_FORMAT\"\r\n                  >\r\n                    {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                      return (\r\n                        <OptionItem\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_format_id={report_format_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"report_period\">Період звіту</label>\r\n                {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeReport_period_type_id}\r\n                    name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                    id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_PERIOD_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          report_period_type_id={report_period_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                <input\r\n                  defaultValue={file_name_mask}\r\n                  onChange={this.changeFile_name_mask}\r\n                  apiName=\"file_name_mask\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"file_name_mask\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сatalog\">Каталог</label>\r\n                <input\r\n                  disabled\r\n                  onChange={this.changeInput}\r\n                  apiName=\"сatalog\"\r\n                  className=\"customInput form-control\"\r\n                  id=\"сatalog\"\r\n                  type=\"text\"\r\n                />\r\n              </div>\r\n              <div className=\"coverInput\">\r\n                <label htmlFor=\"сhannel\">Канал</label>\r\n                {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                  <select\r\n                    className=\"form-select\"\r\n                    onChange={this.changeChannel_type_id}\r\n                    name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                    id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                  >\r\n                    {this.state.DICT_REPORT_CHANNEL_TYPE.map((item, index) => {\r\n                      return (\r\n                        <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                          key={index}\r\n                          optionItem={item}\r\n                          channel_type_id={channel_type_id}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </select>\r\n                ) : (\r\n                  <span>Завантаження...</span>\r\n                )}\r\n              </div>\r\n              <div className=\"reportCoverBtn\">\r\n                <button className=\"btn btn-secondary\" onClick={this.saveReport}>\r\n                  Зберегти\r\n                </button>\r\n              </div>\r\n            </div>\r\n          );\r\n        } else if (item.main_settings.length == 1) {\r\n          return item.main_settings.map((item, index) => {\r\n            let report_period_type_id = item.report_period_type_id;\r\n            let report_format_id = item.report_format_id;\r\n            let channel_type_id = item.channel_type_id;\r\n            let file_name_mask = item.file_name_mask;\r\n            // console.log(report_period_type_id);\r\n            // console.log(report_format_id);\r\n            // console.log(channel_type_id);\r\n            // console.log(file_name_mask);\r\n            return (\r\n              <div className=\" border report\">\r\n                <div className=\"coverBtn border\">\r\n                  <div className=\"title\">Вид екварингу</div>\r\n                  <button className=\"btn btn-secondary\">\r\n                    {this.state.type_acquiring == 1 ? \"Фізичний\" : \"Інтернет\"}\r\n                  </button>\r\n                  {/*<button*/}\r\n                  {/*    className=\"btn btn-secondary\"*/}\r\n                  {/*    disabled={this.state.type_acquiring == 2 ? 'disabled' : ''}*/}\r\n                  {/*    onClick={this.changeTypeAcquiringInternet}*/}\r\n                  {/*    type_acquiring={2}>Інтернет</button>*/}\r\n                </div>\r\n                <div className=\"report border\">\r\n                  <div className=\"title\">Перелік полів звіту ТСП</div>\r\n                  <button\r\n                    className=\"btn btn-secondary\"\r\n                    onClick={this.openStandardReport}\r\n                  >\r\n                    Стандартний звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Розширений звіт\r\n                  </button>\r\n                  <button className=\"btn btn-secondary\" disabled>\r\n                    Звіт по операціям Installment\r\n                  </button>\r\n                  <br />\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_format\">Формат файлу</label>\r\n                    {this.state.isShowREPORT_FORMAT ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_format_id}\r\n                        name=\"DICT_REPORT_FORMAT\"\r\n                        id=\"DICT_REPORT_FORMAT\"\r\n                      >\r\n                        {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                          return (\r\n                            <OptionItem\r\n                              key={index}\r\n                              optionItem={item}\r\n                              report_format_id={report_format_id}\r\n                            />\r\n                          );\r\n                        })}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"report_period\">Період звіту</label>\r\n                    {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeReport_period_type_id}\r\n                        name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_period_type_id={report_period_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                    <input\r\n                      defaultValue={file_name_mask}\r\n                      onChange={this.changeFile_name_mask}\r\n                      apiName=\"file_name_mask\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"file_name_mask\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сatalog\">Каталог</label>\r\n                    <input\r\n                      disabled\r\n                      onChange={this.changeInput}\r\n                      apiName=\"сatalog\"\r\n                      className=\"customInput form-control\"\r\n                      id=\"сatalog\"\r\n                      type=\"text\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"coverInput\">\r\n                    <label htmlFor=\"сhannel\">Канал</label>\r\n                    {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                      <select\r\n                        className=\"form-select\"\r\n                        onChange={this.changeChannel_type_id}\r\n                        name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                      >\r\n                        {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                          (item, index) => {\r\n                            return (\r\n                              <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                key={index}\r\n                                optionItem={item}\r\n                                channel_type_id={channel_type_id}\r\n                              />\r\n                            );\r\n                          }\r\n                        )}\r\n                      </select>\r\n                    ) : (\r\n                      <span>Завантаження...</span>\r\n                    )}\r\n                  </div>\r\n                  <div className=\"reportCoverBtn\">\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      onClick={this.saveReport}\r\n                    >\r\n                      Зберегти\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          });\r\n        } else if (item.main_settings.length == 2) {\r\n          return (\r\n            <div className=\"\">\r\n              <div className=\"coverBtn border\">\r\n                <div className=\"title\">Вид екварингу</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 1 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={1}\r\n                >\r\n                  Фізичний\r\n                </button>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  disabled={this.state.type_acquiring == 2 ? \"disabled\" : \"\"}\r\n                  onClick={this.changeTypeAcquiring}\r\n                  type_acquiring={2}\r\n                >\r\n                  Інтернет\r\n                </button>\r\n              </div>\r\n              {item.main_settings.map((item, index) => {\r\n                let report_period_type_id = item.report_period_type_id;\r\n                let report_format_id = item.report_format_id;\r\n                let channel_type_id = item.channel_type_id;\r\n                let file_name_mask = item.file_name_mask;\r\n                let acquiring_type_id = item.acquiring_type_id;\r\n                let standard_report = item.standard_report;\r\n                let extended_report = item.extended_report;\r\n                let installment_report = item.installment_report;\r\n                // console.log(acquiring_type_id);\r\n                // console.log(report_period_type_id);\r\n                // console.log(report_format_id);\r\n                // console.log(channel_type_id);\r\n                // console.log(file_name_mask);\r\n                // console.log(this.state.type_acquiring);\r\n                return (\r\n                  <div\r\n                    className={`${\r\n                      this.state.type_acquiring == acquiring_type_id\r\n                        ? \"\"\r\n                        : \"d-none\"\r\n                    } border report`}\r\n                  >\r\n                    <div className=\"title\">Перелік полів звіту ТСП</div>\r\n\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={standard_report ? \"\" : \"disabled\"}\r\n                      onClick={this.openStandardReport}\r\n                    >\r\n                      Стандартний звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={extended_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Розширений звіт\r\n                    </button>\r\n                    <button\r\n                      className=\"btn btn-secondary\"\r\n                      disabled={installment_report ? \"\" : \"disabled\"}\r\n                    >\r\n                      Звіт по операціям Installment\r\n                    </button>\r\n                    <br />\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_format\">Формат файлу</label>\r\n                      {this.state.isShowREPORT_FORMAT ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_format_id}\r\n                          name=\"DICT_REPORT_FORMAT\"\r\n                          id=\"DICT_REPORT_FORMAT\"\r\n                        >\r\n                          {this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                            return (\r\n                              <OptionItem\r\n                                key={index}\r\n                                optionItem={item}\r\n                                report_format_id={report_format_id}\r\n                              />\r\n                            );\r\n                          })}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"report_period\">Період звіту</label>\r\n                      {this.state.isShowDICT_REPORT_PERIOD_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeReport_period_type_id}\r\n                          name=\"DICT_REPORT_PERIOD_TYPE\"\r\n                          id=\"DICT_REPORT_PERIOD_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_PERIOD_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_PERIOD_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  report_period_type_id={report_period_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n                      <input\r\n                        defaultValue={file_name_mask}\r\n                        onChange={this.changeFile_name_mask}\r\n                        apiName=\"file_name_mask\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"file_name_mask\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сatalog\">Каталог</label>\r\n                      <input\r\n                        disabled\r\n                        onChange={this.changeInput}\r\n                        apiName=\"сatalog\"\r\n                        className=\"customInput form-control\"\r\n                        id=\"сatalog\"\r\n                        type=\"text\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"coverInput\">\r\n                      <label htmlFor=\"сhannel\">Канал</label>\r\n                      {this.state.isShowDICT_REPORT_CHANNEL_TYPE ? (\r\n                        <select\r\n                          className=\"form-select\"\r\n                          onChange={this.changeChannel_type_id}\r\n                          name=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                          id=\"DICT_REPORT_CHANNEL_TYPE\"\r\n                        >\r\n                          {this.state.DICT_REPORT_CHANNEL_TYPE.map(\r\n                            (item, index) => {\r\n                              return (\r\n                                <OptionItemDICT_REPORT_CHANNEL_TYPE\r\n                                  key={index}\r\n                                  optionItem={item}\r\n                                  channel_type_id={channel_type_id}\r\n                                />\r\n                              );\r\n                            }\r\n                          )}\r\n                        </select>\r\n                      ) : (\r\n                        <span>Завантаження...</span>\r\n                      )}\r\n                    </div>\r\n                    <br />\r\n                    <div className=\"reportCoverBtn\">\r\n                      <button\r\n                        className=\"btn btn-secondary\"\r\n                        onClick={this.saveReport}\r\n                      >\r\n                        Зберегти\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n              {/*<Tab eventKey=\"physical\" title=\"Фізичний\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n              {/*<Tab eventKey=\"internet\" title=\"Інтернет\">*/}\r\n              {/*    <div className=\"title\">Перелік полів звіту ТСП</div>*/}\r\n              {/*    <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>*/}\r\n              {/*    <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>*/}\r\n              {/*    <br/>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_format\">Формат файлу</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowREPORT_FORMAT*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"report_period\">Період звіту</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_PERIOD_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"file_name_mask\">Маска назви файлу</label>*/}\r\n              {/*        <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сatalog\">Каталог</label>*/}\r\n              {/*        <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>*/}\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"coverInput\">*/}\r\n              {/*        <label htmlFor=\"сhannel\">Канал</label>*/}\r\n              {/*        {*/}\r\n              {/*            this.state.isShowDICT_REPORT_CHANNEL_TYPE*/}\r\n              {/*                ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">*/}\r\n              {/*                    <option>-</option>*/}\r\n              {/*                    { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {*/}\r\n              {/*                        return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />*/}\r\n              {/*                    }) }*/}\r\n              {/*                </select>*/}\r\n              {/*                : <span>Завантаження...</span>*/}\r\n              {/*        }*/}\r\n\r\n              {/*    </div>*/}\r\n              {/*    <div className=\"reportCoverBtn\">*/}\r\n              {/*        <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>*/}\r\n              {/*    </div>*/}\r\n              {/*</Tab>*/}\r\n            </div>\r\n          );\r\n        }\r\n\r\n        // return item.main_settings.map( ( item , index) => {\r\n        //     // console.log(item);\r\n        //     // console.log(item.acquiring_type_id == this.state.type_acquiring);\r\n        //\r\n        //     if(item.acquiring_type_id == this.state.type_acquiring){\r\n        //         let report_period_type_id = item.report_period_type_id;\r\n        //         let report_format_id = item.report_format_id;\r\n        //         let channel_type_id = item.channel_type_id;\r\n        //         let file_name_mask = item.file_name_mask;\r\n        //         // this.setState({\r\n        //         //     report_period_type_id: report_period_type_id,\r\n        //         //     report_format_id: report_format_id,\r\n        //         //     channel_type_id: channel_type_id,\r\n        //         //     file_name_mask: file_name_mask\r\n        //         // });\r\n        //\r\n        //         return(\r\n        //             <div className=\"report border\">\r\n        //                 <div className=\"title\">{this.state.type_acquiring == 1 ? \"Фізичний\" :\"Інтернет\"}</div>\r\n        //                 <div className=\"title\">Перелік полів звіту ТСП</div>\r\n        //                 <button className=\"btn btn-secondary\" onClick={this.openStandardReport} >Стандартний звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Розширений звіт</button>\r\n        //                 <button className=\"btn btn-secondary\" disabled>Звіт по операціям Installment</button>\r\n        //                 <br/>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_format\">Формат файлу</label>\r\n        //                     {\r\n        //                         this.state.isShowREPORT_FORMAT\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_format_id} name=\"DICT_REPORT_FORMAT\" id=\"DICT_REPORT_FORMAT\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_FORMAT.map( ( item , index) => {\r\n        //                                     return < OptionItem key={index} optionItem={item} report_format_id={report_format_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"report_period\">Період звіту</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_PERIOD_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeReport_period_type_id} name=\"DICT_REPORT_PERIOD_TYPE\" id=\"DICT_REPORT_PERIOD_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_PERIOD_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_PERIOD_TYPE key={index} optionItem={item} report_period_type_id={report_period_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"file_name_mask\">Маска назви файлу</label>\r\n        //                     <input defaultValue={file_name_mask} onChange={this.changeFile_name_mask} apiName=\"file_name_mask\" className=\"customInput form-control\" id=\"file_name_mask\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сatalog\">Каталог</label>\r\n        //                     <input disabled onChange={this.changeInput} apiName=\"сatalog\" className=\"customInput form-control\" id=\"сatalog\" type=\"text\"/>\r\n        //                 </div>\r\n        //                 <div className=\"coverInput\">\r\n        //                     <label htmlFor=\"сhannel\">Канал</label>\r\n        //                     {\r\n        //                         this.state.isShowDICT_REPORT_CHANNEL_TYPE\r\n        //                             ? <select className=\"form-select\" onChange={this.changeChannel_type_id} name=\"DICT_REPORT_CHANNEL_TYPE\" id=\"DICT_REPORT_CHANNEL_TYPE\">\r\n        //\r\n        //                                 { this.state.DICT_REPORT_CHANNEL_TYPE.map( ( item , index) => {\r\n        //                                     return < OptionItemDICT_REPORT_CHANNEL_TYPE key={index} optionItem={item} channel_type_id={channel_type_id} />\r\n        //                                 }) }\r\n        //                             </select>\r\n        //                             : <span>Завантаження...</span>\r\n        //                     }\r\n        //\r\n        //                 </div>\r\n        //                 <div className=\"reportCoverBtn\">\r\n        //                     <button className=\"btn btn-secondary\" onClick={this.saveReport}>Зберегти</button>\r\n        //                 </div>\r\n        //             </div>\r\n        //         )\r\n        //     }\r\n        // });\r\n      }\r\n    });\r\n  };\r\n\r\n  closePopupError = () => {\r\n    this.setState({\r\n      isShowPopupError: false,\r\n    });\r\n  };\r\n  closePopupErrorSave = () => {\r\n    this.setState({\r\n      isShowPopupErrorSave: false,\r\n    });\r\n  };\r\n  activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.map((item, index) => {\r\n      if (item.operation == operation) {\r\n        //// console.log(item.name);\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  //\r\n  onChangeAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // console.log(param);\r\n    this.setState({\r\n      InputDICT_MCC: param,\r\n    });\r\n    if (param != \"\") {\r\n      this.requestDICT_MCC(this.props.store.userState.token, param, true);\r\n    }\r\n  };\r\n  onClickAutocompleteInput = (e) => {\r\n    let param = e.target.value;\r\n    // console.log(param);\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onClickAutocompleteInputRes = () => {\r\n    this.setState({\r\n      mcc_code: null,\r\n      isShowBlockSelectDICT_MCC: true,\r\n      isShowInputResDICT_MCC: false,\r\n      isShowInputDICT_MCC: true,\r\n    });\r\n  };\r\n\r\n  onBlurBlockSelect = () => {\r\n    this.setState({\r\n      isShowBlockSelectDICT_MCC: false,\r\n    });\r\n  };\r\n\r\n  onClickBlockSelectItem = (e) => {\r\n    //// console.log('----onClickBlockSelectItem-----');\r\n    let val = e.currentTarget.getAttribute(\"value\");\r\n    //// console.log(val);\r\n    //// console.log('----onClickBlockSelectItem-----');\r\n    if (val != \"\") {\r\n      //// console.log(this.state.InputDICT_MCC);\r\n      //// console.log(this.state.mcc_code);\r\n      if (val != this.state.InputDICT_MCC) {\r\n        this.requestDICT_MCC(this.props.store.userState.token, val, false);\r\n\r\n        let inputDataObj = this.state.AcquiringReportsCriteria;\r\n        inputDataObj.mcc_code = val;\r\n        // console.log(val);\r\n        this.setState({\r\n          AcquiringReportsCriteria: inputDataObj,\r\n          InputDICT_MCC: val,\r\n          isShowBlockSelectDICT_MCC: false,\r\n          isShowInputResDICT_MCC: true,\r\n          isShowInputDICT_MCC: false,\r\n        });\r\n      }\r\n      this.setState({\r\n        isShowBlockSelectDICT_MCC: false,\r\n        // isShowInputResDICT_MCC: true,\r\n        // isShowInputDICT_MCC: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickTest = (e) => {\r\n    //// console.log(e.target.parentElement.className);\r\n    //// console.log(this.myRef.current.className);\r\n    // // console.log(this.myRef);\r\n    // // console.log(typeof this.myRef);\r\n    // // console.log(this.myRef != null);\r\n    //// console.log(this.myRef.current != null);\r\n    // // console.log(e);\r\n    // // console.log(e.target);\r\n    // // console.log(e.target.parentElement);\r\n    // // console.log(e.target.parentElement.className);\r\n    // // console.log(e.target.parentElement.className != null && this.myRef.current != null);\r\n    if (this.myRef.current != null) {\r\n      if (this.myRef.current.className != e.target.parentElement.className) {\r\n        this.setState({\r\n          isShowBlockSelectDICT_MCC: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  async requestDICT_MCC(token, param, showBlock) {\r\n    this.props.store.changeLoading(true);\r\n    // console.log(token);\r\n    const baseUrl = `/api/Dictionary/DICT_MCC/?param1=${param}`;\r\n    // console.log(baseUrl);\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        // console.log(response.data);\r\n        //// console.log(response.data.Table);\r\n\r\n        if (response.data.Table.TableRows == null) {\r\n          this.setState({\r\n            DICT_MCC: [\r\n              {\r\n                mcc_code: \"\",\r\n                mcc_name: \"За даним кодом незнайдено жодного результату\",\r\n              },\r\n            ],\r\n          });\r\n        } else {\r\n          this.setState({\r\n            DICT_MCC: response.data.Table.TableRows,\r\n          });\r\n        }\r\n\r\n        if (showBlock) {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: true,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            isShowBlockSelectDICT_MCC: false,\r\n          });\r\n        }\r\n\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        // console.log(error.response);\r\n        // console.log(error.response.data);\r\n        //// console.log('error_catch');\r\n      });\r\n  }\r\n  //\r\n\r\n    handleSelect = (ev) => {\r\n      let inputValue;\r\n      let inputDataObj = this.state.AcquiringReportsCriteria;\r\n      if (ev.length === 0) {\r\n        inputValue = 0;\r\n      } else {\r\n        inputValue = ev.map((i) => i.value).join(\",\");\r\n      }\r\n      inputDataObj.payment_system_id = inputValue;\r\n      this.setState({ AcquiringReportsCriteria: inputDataObj });\r\n    };\r\n  render() {\r\n    // // console.log(this.props.store.menuState.tableData);\r\n    // // console.log(this.state.DICT_INSTITUTION);\r\n    // // console.log(this.state.DICT_BRANCH);\r\n    //// console.log(this.state.TSPReportSettingsSTD);\r\n    // console.log(this.state);\r\n\r\n    return (\r\n      <div className=\"coverTable REPORT_aquiring\">\r\n        <div className=\"headerTable\">\r\n          <div className=\"titleTable\">\r\n            {this.activeOperation(\r\n              this.props.store.userState.OPERATIONS,\r\n              this.props.store.location.pathname.substr(11)\r\n            )}\r\n          </div>\r\n          <div className=\"optionBlock\"></div>\r\n        </div>\r\n        <div className=\"filter\">\r\n          <div className=\"col-3 coverInput\">\r\n            <label htmlFor=\"DICT_INSTITUTION\">Регіональні управління</label>\r\n            <select\r\n              onChange={this.selectDICT_INSTITUTION}\r\n              apiName=\"institution_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className={`${\r\n                this.state.isInstitution_idValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              title=\"Регіональні управління\"\r\n            >\r\n              {this.state.isShowSelectDICT_INSTITUTION ? (\r\n                this.state.DICT_INSTITUTION.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_INSTITUTION key={index} optionItem={item} />\r\n                  );\r\n                })\r\n              ) : null}\r\n            </select>\r\n            <p className=\"error\">{this.state.isInstitution_idValidation ? null : this.state.error_text}</p>\r\n            <label htmlFor=\"TVBV\">ТВБВ</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              apiName=\"bank_branch_id\"\r\n              className={`form-select`}\r\n              disabled={this.state.isDisableTVBV ? \"disabled\" : \"\"}\r\n              title=\"ТВБВ\"\r\n            >\r\n              <option></option>\r\n              {this.state.isShowSelectTVBV\r\n                ? this.state.DICT_BRANCH.map((item, index) => {\r\n                    return (\r\n                      <OptionItemDICT_BRANCH key={index} optionItem={item} />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n\r\n            {/* \r\n            <div className=\"autocomplete\">\r\n              <input\r\n                className={`${\r\n                  this.state.isShowInputTsp_name ? \"\" : \"dn\"\r\n                } form-control`}\r\n                placeholder=\"Введіть код\"\r\n                type=\"text\"\r\n                onBlur={this.onBlurAutocompleteInput}\r\n                onChange={this.onChangeAutocompleteInput}\r\n                onClick={this.onClickAutocompleteInput}\r\n                value={this.state.InputDICT_MCC}\r\n              />\r\n              <input\r\n                className={`${\r\n                  this.state.isShowInputResTsp_name ? \"\" : \"dn\"\r\n                } form-control`}\r\n                placeholder=\"Результат\"\r\n                type=\"text\"\r\n                value={this.state.AcquiringReportsCriteria.mcc_code}\r\n                onClick={this.onClickAutocompleteInputRes}\r\n              />\r\n              <div\r\n                className={`${\r\n                  this.state.isShowBlockSelectTsp_name ? \"\" : \"dn\"\r\n                }blockSelect`}\r\n                onBlur={this.onBlurBlockSelect}\r\n                ref={this.myRef}\r\n              >\r\n                {this.state.isShowBlockSelectDICT_MCC ? (\r\n                  this.state.DICT_MCC != null ? (\r\n                    this.state.DICT_MCC.map((item, index) => {\r\n                      return (\r\n                        <ItemDICT_MCC\r\n                          key={index}\r\n                          item={item}\r\n                          onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                        />\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div> */}\r\n\r\n            {/* <label htmlFor=\"tsp_id\">Назва Мережі</label>\r\n            <input\r\n              onChange={this.changeInput}\r\n              onKeyDown={(e) => {\r\n                if (e.code === \"Enter\") {\r\n                  e.preventDefault();\r\n                  this.requestDICT_BRANCH_NAME();\r\n                }\r\n              }}\r\n              className=\"form-control\"\r\n              apiName=\"brand_name\"\r\n              id=\"brand_name\"\r\n              type=\"text\"\r\n              value={this.state.brand_name}\r\n              placeholder=\"Назва мережі Enter...\"\r\n            />\r\n            <ListGroup\r\n              style={{ cursor: \"pointer\" }}\r\n              onClick={this.handleRequestDICT_BRANCH_NAME}\r\n            >\r\n              {this.state.isShow_BRANCH_NAME_VALUES\r\n                ? this.state.DICT_BRAND_NAME_VALUES.map((item, key) => {\r\n                    return (\r\n                      <ListGroup.Item key={key} data-id={item.brand_id}>\r\n                        {item.brand_name}\r\n                      </ListGroup.Item>\r\n                    );\r\n                  })\r\n                : null}\r\n            </ListGroup> */}\r\n\r\n            <label htmlFor=\"tsp_id\">Назва Мережі</label>\r\n            <Typeahead\r\n              id=\"basic-typeahead-single\"\r\n              labelKey=\"name\"\r\n              onChange={(val) =>{ this.setState({ DICT_BRAND_NAME_VAL: val })}}\r\n              options={this.state.DICT_BRAND_NAME_VALUES}\r\n              placeholder=\"Почніть вводити назву\"\r\n              selected={this.state.DICT_BRAND_NAME_VAL}\r\n              onBlur={this.get_DICT_BRAND_NAME_LEVEL}\r\n              className={`${\r\n                this.state.isBrandName_toValidation ? \"\" : \"validError\"\r\n              }`}\r\n            />\r\n            <p className=\"error\">{this.state.isBrandName_toValidation ? null : this.state.error_text}</p>\r\n            \r\n            <label htmlFor=\"TVBV\">Назва мережі 2-го рівня</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              apiName=\"network_entity_id\"\r\n              className=\"form-select\"\r\n              disabled={!this.state.isShow_ENTITY_NAME_VALUES ? \"disabled\" : \"\"}\r\n              onBlur={() => {\r\n                this.get_DICT_BRAND_MERCHANT();\r\n                this.get_DICT_BRAND_TERMINALS();\r\n              }}\r\n            >\r\n              <option></option>\r\n              {this.state.isShow_ENTITY_NAME_VALUES\r\n                ? this.state.DICT_BRANCH_ENTITY_VALUES.map((item, index) => {\r\n                    return (\r\n                      <OptionItemDICT_BRANCH_ENTITY\r\n                        key={index}\r\n                        optionItem={item}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n            <label htmlFor=\"tsp_id\">Назва ТСП</label>\r\n            <select\r\n              onChange={this.changeInput}\r\n              apiName=\"tsp_id\"\r\n              id=\"tsp_id\"\r\n              disabled={!this.state.isShow_DICT_TSP ? \"disabled\" : \"\"}\r\n              className={`${\r\n                this.state.isTSP_toValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n            >\r\n              <option></option>\r\n              {this.state.isShow_DICT_TSP\r\n                ? this.state.DICT_TSP_VALUE.map((item, index) => {\r\n                    return (\r\n                      <OptionItemDICT_TSP_TYPE\r\n                        key={index}\r\n                        optionItem={{\r\n                          id: item.client_id,\r\n                          name: item.client_name,\r\n                          institution_id: item.institution_id\r\n                        }}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n            <label htmlFor=\"ident_code\">ІНН/ЄДРПОУ</label>\r\n            <select\r\n              onChange={this.changeInput}\r\n              apiName=\"ident_code\"\r\n              id=\"ident_code\"\r\n              className=\"form-select\"\r\n              disabled={!this.state.isShow_DICT_TSP ? \"disabled\" : \"\"}\r\n            >\r\n              <option></option>\r\n              {this.state.isShow_DICT_TSP\r\n                ? this.state.DICT_TSP_VALUE.map((item, index) => {\r\n                    return (\r\n                      <OptionItemDICT_TSP_TYPE\r\n                        key={index}\r\n                        optionItem={{\r\n                          id: item.ident_code,\r\n                          name: item.ident_code,\r\n                          institution_id: item.institution_id,\r\n                        }}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n            <label htmlFor=\"INN\">РРН</label>\r\n            <input\r\n              onChange={this.changeInput}\r\n              apiName=\"trans_rrn\"\r\n              type=\"text\"\r\n              class={`form-control`}\r\n              placeholder=\"Введіть цифри...\"\r\n            ></input>\r\n          </div>\r\n          <div className=\"col-2 coverInput\">\r\n            <label htmlFor=\"merchant\">merchant ID</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              apiName=\"merchant_id\"\r\n              id=\"merchant\"\r\n              className={`${\r\n                this.state.isMerchant_toValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              disabled={!this.state.isShow_DICT_MERCHANT ? \"disabled\" : \"\"}\r\n            >\r\n              <option></option>\r\n              {this.state.isShow_DICT_MERCHANT\r\n                ? this.state.DICT_MERCHANT_VALUE.map((item, index) => {\r\n                    return (\r\n                      <OptionItemCommon\r\n                        key={index}\r\n                        name={item.merchant_id}\r\n                        id={item.merchant_id}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n\r\n            <label htmlFor=\"terminal_id\">Terminal ID</label>\r\n            <select\r\n              id=\"dropdown-basic-button\"\r\n              onChange={this.changeInput}\r\n              apiName=\"terminal_id\"\r\n              id=\"terminal_id\"\r\n              className={`${\r\n                this.state.isTerminal_toValidation ? \"\" : \"validError\"\r\n              } form-select`}\r\n              disabled={!this.state.isShow_DICT_TERMINAL ? \"disabled\" : \"\"}\r\n            >\r\n              <option></option>\r\n              {this.state.isShow_DICT_TERMINAL\r\n                ? this.state.DICT_TERMINAL_VALUE.map((item, index) => {\r\n                    return (\r\n                      <OptionItemCommon\r\n                        key={index}\r\n                        name={item.terminal_id}\r\n                        id={item.terminal_id}\r\n                      />\r\n                    );\r\n                  })\r\n                : null}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-3 coverInput\">\r\n            {/* <label htmlFor=\"base\">Базові поля</label>\r\n            <input apiName=\"base\" id=\"base\" type=\"checkbox\" checked={true} /> */}\r\n            <label htmlFor=\"DICT_PAYMENT_SYSTEM\">Карти</label>\r\n            {/* <select\r\n              onChange={this.changeInput}\r\n              apiName=\"payment_system_id\"\r\n              id=\"dropdown-basic-button\"\r\n              className=\"form-select\"\r\n              title=\"Карти\"\r\n            >\r\n              {this.state.isShowSelectDICT_PAYMENT_SYSTEM ? (\r\n                this.state.DICT_PAYMENT_SYSTEM.map((item, index) => {\r\n                  return (\r\n                    <OptionItemDICT_PAYMENT_SYSTEM\r\n                      key={index}\r\n                      optionItem={item}\r\n                    />\r\n                  );\r\n                })\r\n              ) : null}\r\n            </select> */}\r\n              <Select\r\n              closeMenuOnSelect={false}\r\n              isMulti\r\n              options={this.state.DICT_PAYMENT_SYSTEM}\r\n              placeholder=\"Всі\"\r\n              onChange={this.handleSelect}\r\n            />\r\n            <label htmlFor=\"mcc_code\">MCC</label>\r\n            {/*<input onChange={this.changeInput} className=\"form-control\" apiName=\"mcc_code\" id=\"mcc_code\" type=\"text\"/>*/}\r\n            <div className=\"autocomplete\">\r\n              <input\r\n                className={`${\r\n                  this.state.isShowInputDICT_MCC ? \"\" : \"dn\"\r\n                } form-control`}\r\n                placeholder=\"Введіть код\"\r\n                type=\"text\"\r\n                onBlur={this.onBlurAutocompleteInput}\r\n                onChange={this.onChangeAutocompleteInput}\r\n                onClick={this.onClickAutocompleteInput}\r\n                value={this.state.InputDICT_MCC}\r\n              />\r\n              <input\r\n                className={`${\r\n                  this.state.isShowInputResDICT_MCC ? \"\" : \"dn\"\r\n                } form-control`}\r\n                placeholder=\"Результат\"\r\n                type=\"text\"\r\n                value={this.state.AcquiringReportsCriteria.mcc_code}\r\n                onClick={this.onClickAutocompleteInputRes}\r\n              />\r\n              <div\r\n                className={`${\r\n                  this.state.isShowBlockSelectDICT_MCC ? \"\" : \"dn\"\r\n                }blockSelect`}\r\n                onBlur={this.onBlurBlockSelect}\r\n                ref={this.myRef}\r\n              >\r\n                {this.state.isShowBlockSelectDICT_MCC ? (\r\n                  this.state.DICT_MCC != null ? (\r\n                    this.state.DICT_MCC.map((item, index) => {\r\n                      return (\r\n                        <ItemDICT_MCC\r\n                          key={index}\r\n                          item={item}\r\n                          onClickBlockSelectItem={this.onClickBlockSelectItem}\r\n                        />\r\n                      );\r\n                    })\r\n                  ) : (\r\n                    <></>\r\n                  )\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            </div>\r\n\r\n            <label htmlFor=\"format_type_id\">Формат файлу</label>\r\n            <select\r\n              onChange={this.changeInput}\r\n              apiName=\"format_type_id\"\r\n              id=\"format_type_id\"\r\n              className=\"form-select\"\r\n              title=\"DICT_REPORT_FORMAT\"\r\n            >\r\n              {this.state.isShowSelectDICT_REPORT_FORMAT ? (\r\n                this.state.DICT_REPORT_FORMAT.map((item, index) => {\r\n                  //// console.log(item)\r\n                  return (\r\n                    <OptionItemDICT_REPORT_FORMAT\r\n                      key={index}\r\n                      optionItem={item}\r\n                    />\r\n                  );\r\n                })\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </select>\r\n          </div>\r\n          <div className=\"col-4 coverInput\">\r\n            <div className=\"coverInput col-11\">\r\n              <div className=\"coverDate\">\r\n                {/*<label htmlFor=\"date_type_id\">Дата звіту</label>*/}\r\n                {/*<input onChange={this.changeInputDateReport} apiName=\"date_type_id\" className=\"customInput\" id=\"date_type_id\" type=\"date\"/>*/}\r\n\r\n                <label htmlFor=\"date_type_id\">Дата звіту</label>\r\n                <select\r\n                  onChange={this.changeInput}\r\n                  apiName=\"date_type_id\"\r\n                  id=\"date_type_id\"\r\n                  className={`${\r\n                    this.state.isDate_type_idValidation ? \"\" : \"validError\"\r\n                  } form-select`}\r\n                  title=\"DICT_DATE_TYPE\"\r\n                >\r\n                  {this.state.isShowSelectDICT_DATE_TYPE\r\n                    ? this.state.DICT_DATE_TYPE.map((item, index) => {\r\n                        //// console.log(item)\r\n                        return (\r\n                          <OptionItemDICT_DATE_TYPE\r\n                            key={index}\r\n                            optionItem={item}\r\n                          />\r\n                        );\r\n                      })\r\n                    : null}\r\n                </select>\r\n                <p className=\"error\">{this.state.isDate_type_idValidation ? null : this.state.error_text}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"coverInput\">\r\n              <span>Період звіту</span>\r\n              <div className=\"coverInputs row col-12\">\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_from\">З</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_from}\r\n                    apiName=\"date_from\"\r\n                    className={`${\r\n                      this.state.isDate_fromValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_from\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n                <div className=\"coverDate col-6\">\r\n                  <label htmlFor=\"date_report_to\">По</label>\r\n                  <input\r\n                    onChange={this.changeInputDateReport_to}\r\n                    apiName=\"date_to\"\r\n                    className={`${\r\n                      this.state.isDate_toValidation && this.state.isDate_month_Validation ? \"\" : \"validError\"\r\n                    } customInput form-control`}\r\n                    id=\"date_to\"\r\n                    type=\"date\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              <p className=\"error\">{this.state.isDate_fromValidation &&this.state.isDate_toValidation  ? null : \"Заповніть, будь ласка, дати!\"}{this.state.isDate_month_Validation\r\n                  ? null\r\n                  : \"Максимальний термін 31 день!\"}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"btnBlock\">\r\n          <button className=\"search btn btn-primary\" onClick={this.search}>\r\n            Сформувати\r\n          </button>\r\n        </div>\r\n\r\n        {this.state.isShowPopupError ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Немає результату по даному пошуку\r\n                </div>\r\n                <div className=\"msg\">Спробуйте ввести інші дані для пошуку</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupError}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {this.state.isShowPopupErrorSave ? (\r\n          <>\r\n            <div className=\"coverPopupError\">\r\n              <div className=\"innerBlock\">\r\n                <div className=\"title alert alert-primary\">\r\n                  Упс1 Сталася помилка\r\n                </div>\r\n                <div className=\"msg\">:(</div>\r\n                <button\r\n                  className=\"btn btn-secondary\"\r\n                  onClick={this.closePopupErrorSave}\r\n                >\r\n                  Закрити\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default REPORT_OPERATIONS_NET;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default function REPORT_TERMINALS_INTERNET({ store }) {\r\n  const [isErrorInstitution, setIsErrorInstitution] = useState(false);\r\n  const [isErrorTerminal, setIsErrorTerminal] = useState(false);\r\n  const [isErrorDate, setIsErrorDate] = useState(false);\r\n  const [isErrorDateMonth, setIsErrorDateMonth] = useState(false);\r\n  const [arrInstitution, setArrInstitution] = useState(null);\r\n  const [isShowInstitution, setIsShowInstitution] = useState(false);\r\n  const [arrTerminal, setArrTerminal] = useState(null);\r\n  const [isShowTerminal, setIsShowTerminal] = useState(false);\r\n  const [isShowTypeDate, setIsShowTypeDate] = useState(false);\r\n  // const [brand, setBrand] = useState(null);\r\n  const [institution, setInstitution] = useState(0);\r\n  const [terminal, setTerminal] = useState(0);\r\n  const [dateFrom, setDateFrom] = useState(null);\r\n  const [dateTo, setDateTo] = useState(null);\r\n\r\n  const confirm = async () => {\r\n    const date1 = new Date(dateFrom);\r\n    const date2 = new Date(dateTo);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    setIsErrorDate(false)\r\n  \r\n      if ((isShowTypeDate && !dateFrom)||(!isShowTypeDate && (!dateFrom|| !dateTo))) {\r\n        return setIsErrorDate(true);\r\n      }\r\n\r\n      if (!isShowTypeDate && diffDays > 31) {\r\n        return setIsErrorDateMonth(true);\r\n      }\r\n    \r\n    \r\n    store.changeLoading(true);\r\n    let date_from = dateFrom.split(\"-\");\r\n    const body = {\r\n      institution_id: institution,\r\n      report_type_id: \"REPORT_TERMINALS\",\r\n      terminal_type_id: 2,\r\n      terminal_status_id: terminal,\r\n    };\r\n    if (dateTo) {\r\n      let date_to = dateTo.split(\"-\");\r\n      body.date_from = `${date_from[0]}${date_from[1]}${date_from[2]}`;\r\n      body.date_to = `${date_to[0]}${date_to[1]}${date_to[2]}`;\r\n    } else {\r\n      body.on_date = `${date_from[0]}${date_from[1]}${date_from[2]}`;\r\n    }\r\n    await axios\r\n      .post(`/api/Reports/Acquiring`, body, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        store.changeLoading(false);\r\n          window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n      });\r\n  };\r\n\r\n  const handleDateFrom = (e) => {\r\n    setDateFrom(e.target.value);\r\n  };\r\n  const handleDateTo = (e) => {\r\n    setDateTo(e.target.value);\r\n  };\r\n\r\n  const activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.filter((item, index) => {\r\n      if (item.operation === operation) {\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  const handleTerminal = (e) => {\r\n    let param = e.target.value;\r\n    if (param) {\r\n      setTerminal(param);\r\n    }\r\n  };\r\n  const handleInstitution = (e) => {\r\n    let param = e.target.value;\r\n    if (param) {\r\n      setInstitution(param);\r\n    }\r\n  };\r\n  const reqInstitution = async (token) => {\r\n    store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        setArrInstitution(response.data.Table.TableRows);\r\n        setIsShowInstitution(true);\r\n        store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n  const reqTerminal = async (token) => {\r\n    store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_TERMINAL_STATUS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        setArrTerminal(response.data.Table.TableRows);\r\n        setIsShowTerminal(true);\r\n        store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const handleTypeDate = (e) => {\r\n    const type = e.target.value;\r\n    if (!type) return;\r\n\r\n    setDateTo(null);\r\n    setDateFrom(null);\r\n    if (+type === 1) {\r\n      setIsShowTypeDate(false);\r\n    } else {\r\n      setIsShowTypeDate(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    reqInstitution(store.userState.token);\r\n    reqTerminal(store.userState.token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"coverTable DICT_NET_BRAND\">\r\n      <div className=\"headerTable\">\r\n        <div className=\"titleTable\">\r\n          {activeOperation(\r\n            store.userState.OPERATIONS,\r\n            store.location.pathname.substr(11)\r\n          )}\r\n        </div>\r\n        <div className=\"optionBlock\"></div>\r\n      </div>\r\n      <div className=\"addbBlock \">\r\n        <div className=\"container\">\r\n          <div className=\"row col-6\">\r\n            <div className=\"row col-12\">\r\n              <label htmlFor=\"institution\">РУ менеджера</label>\r\n              <select\r\n                onChange={handleInstitution}\r\n                id=\"institution\"\r\n                className={`${\r\n                  isErrorInstitution ? \"validError\" : \"\"\r\n                } form-select`}\r\n                title=\"Регіональні управління\"\r\n              >\r\n                {isShowInstitution\r\n                  ? arrInstitution.map((item, index) => {\r\n                      return (\r\n                        <option value={item.institution_id}>\r\n                          {item.institution_name}\r\n                        </option>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </select>\r\n            </div>\r\n            <div className=\"row col-12\">\r\n              <label htmlFor=\"terminal\">Статус термінала</label>\r\n              <select\r\n                onChange={handleTerminal}\r\n                className={`${isErrorTerminal ? \"validError\" : \"\"} form-select`}\r\n                title=\"Регіональні управління\"\r\n                id=\"terminal\"\r\n              >\r\n                {isShowTerminal\r\n                  ? arrTerminal.map((item, index) => {\r\n                      return (\r\n                        <option value={item.terminal_status_id}>\r\n                          {item.terminal_status_name}\r\n                        </option>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </select>\r\n            </div>\r\n            <div className=\"row col-12\">\r\n              <label htmlFor=\"terminal\">Дата звіту</label>\r\n              <input\r\n                className={`${isErrorTerminal ? \"validError\" : \"\"} form-select`}\r\n                id=\"type-date\"\r\n                value={\"Дата реєстрації терміналу\"}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"coverInput mt-3\">\r\n                {/* <label htmlFor=\"date_type\">Дата звіту</label> */}\r\n                <div\r\n                  key={`inline-radio`}\r\n                  className=\"mb-3\"\r\n                  onChange={handleTypeDate}\r\n                >\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Період\"\r\n                    name=\"group1\"\r\n                    type={\"radio\"}\r\n                    id={`date-1`}\r\n                    defaultChecked={true}\r\n                    value={1}\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"На дату\"\r\n                    name=\"group1\"\r\n                    type={\"radio\"}\r\n                    id={`date-2`}\r\n                    value={2}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"coverInput mt-3\">\r\n                {/* <span className=\"mb-1\">Дата звіту</span> */}\r\n                {!isShowTypeDate ? (\r\n                  <div className=\"row container\">\r\n                    <div className=\"d-flex align-items-center col-6\">\r\n                      <label htmlFor=\"date_report_from\">З</label>\r\n                      <Form.Control\r\n                        onChange={handleDateFrom}\r\n                        type=\"date\"\r\n                        value={dateFrom}\r\n                        className={`${isErrorDate || isErrorDateMonth ? \"validError\" : \"\"}`}\r\n                        style={{ marginLeft: \"10px\", minWidth: \"150px\" }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center col-6\">\r\n                      <label htmlFor=\"date_report_to\">По</label>\r\n                      <Form.Control\r\n                        onChange={handleDateTo}\r\n                        value={dateTo}\r\n                        type=\"date\"\r\n                        className={`${isErrorDate || isErrorDateMonth ? \"validError\" : \"\"}`}\r\n                        style={{ marginLeft: \"10px\", minWidth: \"150px\" }}\r\n                      />\r\n                    </div>\r\n                    <p className=\"error\">\r\n                      {isErrorDate ? \"Заповніть, будь ласка, поля!\" : null}\r\n                      {!isErrorDateMonth\r\n                        ? null\r\n                        : \"Максимальний термін 31 день!\"}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"row container\">\r\n                    <div className=\"d-flex align-items-center col-5\">\r\n                      <Form.Control\r\n                        onChange={handleDateFrom}\r\n                        type=\"date\"\r\n                        value={dateFrom}\r\n                        className={`${isErrorDate || isErrorDateMonth  ? \"validError\" : \"\"}`}\r\n                        style={{ marginLeft: \"10px\", minWidth: \"150px\" }}\r\n                      />\r\n                    </div>\r\n                    <p className=\"error\">\r\n                      {isErrorDate ? \"Заповніть, будь ласка, поле!\" : null}\r\n                      \r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"btnBlock\" style={{ background: \"white\", padding: \"10px\" }}>\r\n        <button class=\"btn btn-success\" onClick={confirm}>\r\n          Сформувати звіт\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nexport default function REPORT_TERMINALS({ store }) {\r\n  const [isErrorInstitution, setIsErrorInstitution] = useState(false);\r\n  const [isErrorTerminal, setIsErrorTerminal] = useState(false);\r\n  const [isErrorDate, setIsErrorDate] = useState(false);\r\n  const [isErrorDateMonth, setIsErrorDateMonth] = useState(false);\r\n  const [arrInstitution, setArrInstitution] = useState(null);\r\n  const [isShowInstitution, setIsShowInstitution] = useState(false);\r\n  const [arrTerminal, setArrTerminal] = useState(null);\r\n  const [isShowTerminal, setIsShowTerminal] = useState(false);\r\n  const [isShowTypeDate, setIsShowTypeDate] = useState(false);\r\n  // const [brand, setBrand] = useState(null);\r\n  const [institution, setInstitution] = useState(0);\r\n  const [terminal, setTerminal] = useState(0);\r\n  const [dateFrom, setDateFrom] = useState(null);\r\n  const [dateTo, setDateTo] = useState(null);\r\n\r\n  const confirm = async () => {\r\n    const date1 = new Date(dateFrom);\r\n    const date2 = new Date(dateTo);\r\n    const diffTime = Math.abs(date2 - date1);\r\n    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    setIsErrorDate(false);\r\n\r\n    if (\r\n      (isShowTypeDate && !dateFrom) ||\r\n      (!isShowTypeDate && (!dateFrom || !dateTo))\r\n    ) {\r\n      return setIsErrorDate(true);\r\n    }\r\n    if (diffDays > 31) {\r\n      return setIsErrorDateMonth(true);\r\n    }\r\n\r\n    store.changeLoading(true);\r\n    let date_from = dateFrom.split(\"-\");\r\n    const body = {\r\n      institution_id: institution,\r\n      report_type_id: \"REPORT_TERMINALS\",\r\n      terminal_type_id: 1,\r\n      terminal_status_id: terminal,\r\n    };\r\n    if (dateTo) {\r\n      let date_to = dateTo.split(\"-\");\r\n      body.date_from = `${date_from[0]}${date_from[1]}${date_from[2]}`;\r\n      body.date_to = `${date_to[0]}${date_to[1]}${date_to[2]}`;\r\n    } else {\r\n      body.on_date = `${date_from[0]}${date_from[1]}${date_from[2]}`;\r\n    }\r\n    await axios\r\n      .post(`/api/Reports/Acquiring`, body, {\r\n        headers: {\r\n          token: store.userState.token,\r\n        },\r\n        responseType: \"blob\",\r\n      })\r\n      .then((response) => {\r\n        store.changeLoading(false);\r\n        window.location.href = \"/dashboard/REPORTS_ACQUIRING_MONITOR\";\r\n      });\r\n  };\r\n\r\n  const handleDateFrom = (e) => {\r\n    setDateFrom(e.target.value);\r\n  };\r\n  const handleDateTo = (e) => {\r\n    setDateTo(e.target.value);\r\n  };\r\n\r\n  const activeOperation = (operationArr, operation) => {\r\n    let res;\r\n    operationArr.filter((item, index) => {\r\n      if (item.operation === operation) {\r\n        res = item.name;\r\n      }\r\n    });\r\n    return res;\r\n  };\r\n\r\n  const handleTerminal = (e) => {\r\n    let param = e.target.value;\r\n    if (param) {\r\n      setTerminal(param);\r\n    }\r\n  };\r\n  const handleInstitution = (e) => {\r\n    let param = e.target.value;\r\n    if (param) {\r\n      setInstitution(param);\r\n    }\r\n  };\r\n  const reqInstitution = async (token) => {\r\n    store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_INSTITUTION`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        setArrInstitution(response.data.Table.TableRows);\r\n        setIsShowInstitution(true);\r\n        store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n  const reqTerminal = async (token) => {\r\n    store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/DICT_TERMINAL_STATUS`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        setArrTerminal(response.data.Table.TableRows);\r\n        setIsShowTerminal(true);\r\n        store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error);\r\n      });\r\n  };\r\n\r\n  const handleTypeDate = (e) => {\r\n    const type = e.target.value;\r\n    if (!type) return;\r\n\r\n    setDateTo(null);\r\n    setDateFrom(null);\r\n    if (+type === 1) {\r\n      setIsShowTypeDate(false);\r\n    } else {\r\n      setIsShowTypeDate(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    reqInstitution(store.userState.token);\r\n    reqTerminal(store.userState.token);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"coverTable DICT_NET_BRAND\">\r\n      <div className=\"headerTable\">\r\n        <div className=\"titleTable\">\r\n          {activeOperation(\r\n            store.userState.OPERATIONS,\r\n            store.location.pathname.substr(11)\r\n          )}\r\n        </div>\r\n        <div className=\"optionBlock\"></div>\r\n      </div>\r\n      <div className=\"addbBlock \">\r\n        <div className=\"container\">\r\n          <div className=\"row col-6\">\r\n            <div className=\"row col-12\">\r\n              <label htmlFor=\"institution\">РУ менеджера</label>\r\n              <select\r\n                onChange={handleInstitution}\r\n                id=\"institution\"\r\n                className={`${\r\n                  isErrorInstitution ? \"validError\" : \"\"\r\n                } form-select`}\r\n                title=\"Регіональні управління\"\r\n              >\r\n                {isShowInstitution\r\n                  ? arrInstitution.map((item, index) => {\r\n                      return (\r\n                        <option value={item.institution_id}>\r\n                          {item.institution_name}\r\n                        </option>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </select>\r\n            </div>\r\n            <div className=\"row col-12\">\r\n              <label htmlFor=\"terminal\">Статус термінала</label>\r\n              <select\r\n                onChange={handleTerminal}\r\n                className={`${isErrorTerminal ? \"validError\" : \"\"} form-select`}\r\n                title=\"Регіональні управління\"\r\n                id=\"terminal\"\r\n              >\r\n                {isShowTerminal\r\n                  ? arrTerminal.map((item, index) => {\r\n                      return (\r\n                        <option value={item.terminal_status_id}>\r\n                          {item.terminal_status_name}\r\n                        </option>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </select>\r\n            </div>\r\n            <div className=\"row col-12\">\r\n              <label htmlFor=\"terminal\">Дата звіту</label>\r\n              <input\r\n                className={`${isErrorTerminal ? \"validError\" : \"\"} form-select`}\r\n                id=\"type-date\"\r\n                value={\"Дата реєстрації терміналу\"}\r\n              />\r\n            </div>\r\n            <div>\r\n              <div className=\"coverInput mt-3\">\r\n                {/* <label htmlFor=\"date_type\">Дата звіту</label> */}\r\n                <div\r\n                  key={`inline-radio`}\r\n                  className=\"mb-3\"\r\n                  onChange={handleTypeDate}\r\n                >\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"Період\"\r\n                    name=\"group1\"\r\n                    type={\"radio\"}\r\n                    id={`date-1`}\r\n                    defaultChecked={true}\r\n                    value={1}\r\n                  />\r\n                  <Form.Check\r\n                    inline\r\n                    label=\"На дату\"\r\n                    name=\"group1\"\r\n                    type={\"radio\"}\r\n                    id={`date-2`}\r\n                    value={2}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div>\r\n              <div className=\"coverInput mt-3\">\r\n                {/* <span className=\"mb-1\">Дата звіту</span> */}\r\n                {!isShowTypeDate ? (\r\n                  <div className=\"row container\">\r\n                    <div className=\"d-flex align-items-center col-6\">\r\n                      <label htmlFor=\"date_report_from\">З</label>\r\n                      <Form.Control\r\n                        onChange={handleDateFrom}\r\n                        type=\"date\"\r\n                        value={dateFrom}\r\n                        className={`${\r\n                          isErrorDate || isErrorDateMonth ? \"validError\" : \"\"\r\n                        }`}\r\n                        style={{ marginLeft: \"10px\", minWidth: \"150px\" }}\r\n                      />\r\n                    </div>\r\n                    <div className=\"d-flex align-items-center col-6\">\r\n                      <label htmlFor=\"date_report_to\">По</label>\r\n                      <Form.Control\r\n                        onChange={handleDateTo}\r\n                        value={dateTo}\r\n                        type=\"date\"\r\n                        className={`${\r\n                          isErrorDate || isErrorDateMonth ? \"validError\" : \"\"\r\n                        }`}\r\n                        style={{ marginLeft: \"10px\", minWidth: \"150px\" }}\r\n                      />\r\n                    </div>\r\n                    <p className=\"error\">\r\n                      {isErrorDate ? \"Заповніть,  будь ласка, поля!\" : null}\r\n                      {!isErrorDateMonth\r\n                        ? null\r\n                        : \"Максимальний термін 31 день!\"}\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"row container\">\r\n                    <div className=\"d-flex align-items-center col-5\">\r\n                      <Form.Control\r\n                        onChange={handleDateFrom}\r\n                        type=\"date\"\r\n                        value={dateFrom}\r\n                        className={`${isErrorDate ? \"validError\" : \"\"}`}\r\n                        style={{ marginLeft: \"10px\", minWidth: \"150px\" }}\r\n                      />\r\n                    </div>\r\n                    <p className=\"error\">\r\n                      {isErrorDate ? \"Заповніть, будь ласка, поле!\" : null}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"btnBlock\" style={{ background: \"white\", padding: \"10px\" }}>\r\n        <button class=\"btn btn-success\" onClick={confirm}>\r\n          Сформувати звіт\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport TableBootstrapDICT from \"./DICT/TableBootstrapDICT\";\r\nimport NETWORK_REPORT from \"./NETWORK/NETWORK_REPORT\";\r\nimport DICT_BIN_TABLE from \"./DICT/DICT_BIN_TABLE\";\r\nimport DICT_BANK_RANGE from \"./DICT/DICT_BANK_RANGE\";\r\nimport NETWORK_ADD_CLIENT from \"./NETWORK/NETWORK_ADD_CLIENT\";\r\nimport NETWORK_CREATE from \"./NETWORK/NETWORK_CREATE\";\r\nimport NETWORK_EDIT from \"./NETWORK/NETWORK_EDIT\";\r\nimport NETWORK_AUDIT from \"./NETWORK/NETWORK_AUDIT\";\r\nimport TableADMIN_USERS from \"./ADMIN/TableADMIN_USERS\";\r\nimport TableADMIN_OPERATIONS from \"./ADMIN/TableADMIN_OPERATIONS\";\r\nimport TableADMIN_ROLE_OPERATIONS from \"./ADMIN/TableADMIN_ROLE_OPERATIONS\";\r\nimport TableADMIN_USER_OPERATIONS from \"./ADMIN/TableADMIN_USER_OPERATIONS\";\r\nimport TableADMIN_ROLES from \"./ADMIN/TableADMIN_ROLES\";\r\nimport REPORT_SETTINGS_TSP from \"./REPORT/REPORT_SETTINGS_TSP\";\r\nimport REPORT_SETTINGS_NET from \"./REPORT/REPORT_SETTINGS_NET\";\r\nimport REPORTS_acquiring from \"./REPORT/REPORTS_acquiring\";\r\nimport REPORTS_ACQUIRING_MONITOR from \"./REPORT/REPORTS_ACQUIRING_MONITOR\";\r\nimport REPORT_FIX_COMMISSION from \"./REPORT/REPORT_FIX_COMMISSION\";\r\nimport REPORT_ACQ_DETAILED_INT from \"./REPORT/REPORT_ACQ_DETAILED_INT\";\r\nimport REPORT_ACQ_DETAILED from \"./REPORT/REPORT_ACQ_DETAILED\";\r\nimport REPORT_GROSS_COMM from \"./REPORT/REPORT_GROSS_COMM\";\r\nimport REPORT_GROSS_COMM_INTERNET from \"./REPORT/REPORT_GROSS_COMM_INTERNET\";\r\nimport REPORT_OPERATIONS from \"./REPORT/REPORT_OPERATIONS\";\r\nimport REPORT_CASH_OUT from \"./REPORT/REPORT_CASH_OUT\";\r\nimport REPORT_OPERATIONS_INTERNET from \"./REPORT/REPORT_OPERATIONS_INTERNET\";\r\nimport REPORT_OPERATIONS_NET from \"./REPORT/REPORT_OPERATIONS_NET\";\r\nimport REPORT_TERMINALS_INTERNET from \"./REPORT/REPORT_TERMINALS_INTERNET\";\r\nimport REPORT_TERMINALS from \"./REPORT/REPORT_TERMINALS\";\r\n\r\nfunction Default() {\r\n  return (\r\n    <div className=\"coverTable\">\r\n      <div className=\"headerTable\">\r\n        <span>\r\n          Вас вітає <b>Ощадбанк Звітність.</b> <br /> Перейдіть на одну зі\r\n          сторінок в меню.\r\n        </span>\r\n        <div className=\"optionBlock\"></div>\r\n      </div>\r\n      <div className=\"innerTable\">\r\n        <div className=\"Table\"></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nclass CoverTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  async requestOperation(token, operation) {\r\n    this.props.store.changeLoading(true);\r\n    const baseUrl = `/api/Dictionary/${operation}`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${token}` },\r\n      })\r\n      .then((response) => {\r\n        this.props.store.addTableData(true, response.data.Table);\r\n        this.props.store.changeLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        throw new Error(error)\r\n      });\r\n  }\r\n\r\n  tableType = (operation) => {\r\n    switch (operation) {\r\n      case \"ADMIN_USERS\":\r\n        return <TableADMIN_USERS store={this.props.store} />;\r\n      case \"ADMIN_ROLES\":\r\n        return <TableADMIN_ROLES store={this.props.store} />;\r\n      case \"ADMIN_OPERATIONS\":\r\n        return <TableADMIN_OPERATIONS store={this.props.store} />;\r\n      case \"ADMIN_ROLE_OPERATIONS\":\r\n        return <TableADMIN_ROLE_OPERATIONS store={this.props.store} />;\r\n      case \"ADMIN_USER_OPERATIONS\":\r\n        return <TableADMIN_USER_OPERATIONS store={this.props.store} />;\r\n      case \"REPORT_SETTINGS_TSP\":\r\n        return <REPORT_SETTINGS_TSP store={this.props.store} />;\r\n      case \"REPORT_SETTINGS_NET\":\r\n        return <REPORT_SETTINGS_NET store={this.props.store} />;\r\n      case \"REPORTS_ACQUIRING\":\r\n        return <REPORTS_acquiring store={this.props.store} />;\r\n      case \"REPORTS_ACQUIRING_MONITOR\":\r\n        return <REPORTS_ACQUIRING_MONITOR store={this.props.store} />;\r\n      case \"REPORT_TERMINALS_INTERNET\":\r\n        return <REPORT_TERMINALS_INTERNET store={this.props.store} />;\r\n      case \"REPORT_TERMINALS\":\r\n        return <REPORT_TERMINALS store={this.props.store} />;\r\n      case \"REPORT_OPERATIONS\":\r\n        return <REPORT_OPERATIONS store={this.props.store} />;\r\n      case \"REPORT_ACQ_DETAILED\":\r\n        return <REPORT_ACQ_DETAILED store={this.props.store} />;\r\n      case \"REPORT_ACQ_DETAILED_INT\":\r\n        return <REPORT_ACQ_DETAILED_INT store={this.props.store} />;\r\n      case \"REPORT_FIX_COMMISSION\":\r\n        return <REPORT_FIX_COMMISSION store={this.props.store} />;\r\n      case \"REPORT_GROSS_COMM\":\r\n        return <REPORT_GROSS_COMM store={this.props.store} />;\r\n      case \"REPORT_GROSS_COMM_INTERNET\":\r\n        return <REPORT_GROSS_COMM_INTERNET store={this.props.store} />;\r\n      case \"REPORT_OPERATIONS_INTERNET\":\r\n        return <REPORT_OPERATIONS_INTERNET store={this.props.store} />;\r\n      case \"REPORT_OPERATIONS_NET\":\r\n        return <REPORT_OPERATIONS_NET store={this.props.store} />;\r\n      case \"REPORT_CASH_OUT\":\r\n        return <REPORT_CASH_OUT store={this.props.store} />;\r\n      case \"DICT_PAYMENT_SYSTEM\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_REPORT_FORMAT\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_CURRENCY\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_DATE_TYPE\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_REPORT_ACTION\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_OPERATION_TYPE\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_ACQUIRING_TYPE\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_ACQUIRING_SERVICE\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_INSTITUTION\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_BRANCH\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_REPORT_PERIOD_TYPE\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"DICT_REPORT_CHANNEL_TYPE\":\r\n        return <TableBootstrapDICT store={this.props.store} />;\r\n      case \"NETWORK_CREATE\":\r\n        return <NETWORK_CREATE store={this.props.store} />;\r\n      case \"NETWORK_EDIT\":\r\n        return <NETWORK_EDIT store={this.props.store} />;\r\n      case \"NETWORK_AUDIT\":\r\n        return <NETWORK_AUDIT store={this.props.store} />;\r\n      case \"NETWORK_ADD_CLIENT\":\r\n        return <NETWORK_ADD_CLIENT store={this.props.store} />;\r\n      case \"NETWORK_REPORT\":\r\n        return <NETWORK_REPORT store={this.props.store} />;\r\n      case \"DICT_BIN_TABLE\":\r\n        return <DICT_BIN_TABLE store={this.props.store} />;\r\n      case \"DICT_BANK_RANGE\":\r\n        return <DICT_BANK_RANGE store={this.props.store} />;\r\n      default:\r\n        return <Default />;\r\n    }\r\n  };\r\n  render() {\r\n    return this.tableType(this.props.params);\r\n  }\r\n}\r\nexport default CoverTable;","import React from \"react\";\r\nimport { Field, reduxForm } from 'redux-form'\r\n\r\nconst DeleteRow = (props) => {\r\n    console.log(props);\r\n    const save = () => {\r\n        props.store.showPopupTable(false, null );\r\n    }\r\n    const close = () => {\r\n        props.store.showPopupTable(false, null );\r\n    }\r\n    return (\r\n        <div className=\"coverInputBlock\">\r\n            <div className=\"coverBtn\">\r\n                <button className=\"sendCallback\" onClick={save}>Видалити</button>\r\n                <button className=\"closeCallback\" onClick={close}>Закрити</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst FormInput = (props) => {\r\n    console.log(props);\r\n    const renderField = ({input, label, type, meta: {touched, error, warning}}) => (\r\n        <div className=\"inputblock\">\r\n            <label className=\"control-label\" htmlFor={label}>{label}</label>\r\n            <div>\r\n                <input id={label} {...input} placeholder={label} type={type}/>\r\n                {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n            </div>\r\n        </div>\r\n    )\r\n    const close = () => {\r\n        props.store.showPopupTable(false, null );\r\n    }\r\n    const RenderingInputsForm = (data) => {\r\n        console.log(data);\r\n        let number = 0;\r\n        console.log(data.TableHeaders);\r\n        return Object.values( data.TableHeaders ).map(( item , index) => {\r\n            console.log(item);\r\n            console.log(number++);\r\n            let name = `${item}_${number++}`;\r\n            return(\r\n                <Field name={item} type=\"text\" component={renderField} label={item} />\r\n            )\r\n        })\r\n    }\r\n    return (\r\n        <form className=\"coverInputBlock\" onSubmit={props.handleSubmit}>\r\n            {RenderingInputsForm(props.store.menuState.tableData)}\r\n            {/*<Field name=\"username\" type=\"username\"*/}\r\n            {/*       component={renderField} label=\"Username\"*/}\r\n            {/*       validate={required}*/}\r\n            {/*/>*/}\r\n\r\n            <div className=\"coverBtn\">\r\n                <button className=\"sendCallback\" type=\"submit\">Зберегти</button>\r\n                <button className=\"closeCallback\" onClick={close}>Закрити</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst FormInputRedux = reduxForm({ form: 'formInput' })(FormInput)\r\n\r\nclass PopupTable extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggle: false\r\n        }\r\n\r\n        console.log(this.props);\r\n    }\r\n    namePopup = (name) => {\r\n        switch (name) {\r\n            case 'add':\r\n                return 'Додавання';\r\n            case 'edit':\r\n                return 'Редагування';\r\n            case 'delete':\r\n                return 'Видалення';\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    close = () => {\r\n        this.props.store.showPopupTable(false, null );\r\n    }\r\n    renderingInputs = (data) => {\r\n        console.log(data);\r\n\r\n        console.log(data.TableHeaders);\r\n        return Object.values( data.TableHeaders ).map(( item , index) => {\r\n            console.log(item);\r\n            return(\r\n                <div className=\"inputblock\">\r\n                    <label className=\"control-label\" htmlFor=\"data\">{item}</label>\r\n                    <input type=\"text\" name=\"data\" placeholder={item} autoComplete=\"off\" required=\"required\" pattern=\".{3,}\"/>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n    }\r\n    renderingInputsForm = (data) => {\r\n        console.log(data);\r\n\r\n        console.log(data.TableHeaders);\r\n        return Object.values( data.TableHeaders ).map(( item , index) => {\r\n            console.log(item);\r\n            return(\r\n                <div className=\"inputblock\">\r\n                    <label className=\"control-label\" htmlFor=\"data\">{item}</label>\r\n                    <input type=\"text\" name=\"data\" placeholder={item} autoComplete=\"off\" required=\"required\" pattern=\".{3,}\"/>\r\n                </div>\r\n            )\r\n\r\n        })\r\n\r\n    }\r\n    formInputData = (val) => {\r\n        console.log(val);\r\n        this.props.store.showPopupTable(false, null );\r\n    }\r\n    typePopup = (type) => {\r\n        switch (type) {\r\n            case 'add':\r\n                return <FormInputRedux store={this.props.store} onSubmit={this.formInputData}/>;\r\n            case 'edit':\r\n                return 'Редагування';\r\n            case 'delete':\r\n                return <DeleteRow store={this.props.store} />;\r\n            default:\r\n                return '';\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"popupTable\">\r\n                <div className=\"innerBlock\">\r\n                    <h2>{this.namePopup(this.props.store.menuState.typePopup)}</h2>\r\n\r\n                    {\r\n                        this.typePopup(this.props.store.menuState.typePopup)\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PopupTable;","import React from \"react\";\r\nimport * as axios from \"axios\";\r\nimport Header from \"./header/Header\";\r\nimport Menu from \"./menu/Menu\";\r\nimport CoverTable from \"./coverTable/CoverTable\";\r\nimport PopupTable from \"./popup/PopupTable\";\r\nimport LoaderUI from \"../UI/LoaderUI\";\r\n\r\nclass Dashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (!window.localStorage.getItem(\"token\")) {\r\n      this.props.history.push(\"/login\");\r\n    } else {\r\n      this.authToken();\r\n    }\r\n  }\r\n\r\n  async authToken() {\r\n    const baseUrl = `/api/Auth/ALL`;\r\n    await axios\r\n      .get(baseUrl, {\r\n        headers: { Token: `${window.localStorage.getItem(\"token\")}` },\r\n      })\r\n      .then((response) => {\r\n        const { token, user_code, user_name, user_position, OPERATIONS } = response.data;\r\n\r\n        this.props.addUserData(\r\n          token,\r\n          user_code,\r\n          user_name,\r\n          user_position,\r\n          OPERATIONS\r\n        );\r\n        this.setState({ loading: false });\r\n      })\r\n      .catch((error) => {\r\n        let ErrorMessage = error.response.data.ErrorStatus.ErrorMessage;\r\n        if (ErrorMessage === \"Помилка токена.\") {\r\n          window.localStorage.removeItem(\"token\");\r\n          this.props.history.push(\"/login\");\r\n        }\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"wrapper\">\r\n        {this.state.loading ? (\r\n          <LoaderUI />\r\n        ) : (\r\n          <>\r\n            <Header store={this.props}></Header>\r\n            <div className=\"content\">\r\n              <Menu\r\n                store={this.props}\r\n                params={this.props.location.pathname.substr(11)}\r\n              />\r\n              <CoverTable\r\n                store={this.props}\r\n                params={this.props.location.pathname.substr(11)}\r\n              />\r\n            </div>\r\n          </>\r\n        )}\r\n        {this.props.menuState.showPopupTable ? (\r\n          <PopupTable store={this.props} />\r\n        ) : null}\r\n        {this.props.menuState.isLoading ? <LoaderUI /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import { connect } from \"react-redux\";\r\nimport { addUserDataCreator } from \"../../redux/userReducer\";\r\nimport {\r\n    addTableDataCreator,\r\n    changeLoadingCreator,\r\n    operationNameCreator,\r\n    roleDataCreator,\r\n    showPopupTableCreator\r\n} from \"../../redux/menuReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport Dashboard from \"./Dashboard\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        userState: state.userState,\r\n        menuState: state.menuState,\r\n        form: state.form\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addUserData: (token, user_code, user_name, user_position, OPERATIONS) => {\r\n            dispatch(addUserDataCreator( token, user_code, user_name, user_position, OPERATIONS ) );\r\n        },\r\n        showPopupTable: (value, typePopup) => {\r\n            dispatch(showPopupTableCreator( value, typePopup ) );\r\n        },\r\n        addTableData: (showTable, operation) => {\r\n            dispatch(addTableDataCreator(showTable, operation ) );\r\n        },\r\n        changeLoading: (operation) => {\r\n            dispatch(changeLoadingCreator( operation ) );\r\n        },\r\n        operationName: (nameOperation, operation) => {\r\n            dispatch(operationNameCreator( nameOperation, operation ) );\r\n        },\r\n        addRoleData: (role) => {\r\n            dispatch(roleDataCreator( role ) );\r\n        },\r\n    }\r\n}\r\nlet DashboardWithRouter = withRouter( Dashboard );\r\nconst DashboardContainer = connect(mapStateToProps, mapDispatchToProps)(DashboardWithRouter);\r\nexport default DashboardContainer;","import React, { useEffect, useState } from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport * as axios from \"axios\";\r\nimport LoaderUI from \"../UI/LoaderUI\";\r\nimport Alert from \"react-bootstrap/Alert\";\r\n\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning },\r\n}) => (\r\n  <div className=\"coverInput \">\r\n    <label htmlFor=\"userEmail\">{label}</label>\r\n    <div>\r\n      <input id=\"userEmail\" {...input} placeholder={label} type={type} />\r\n      {touched &&\r\n        ((error && <span>{error}</span>) ||\r\n          (warning && <span>{warning}</span>))}\r\n    </div>\r\n  </div>\r\n);\r\nconst required = (value) => (value ? undefined : \"Обовязкове\");\r\nconst LoginForm = (props) => {\r\n  return (\r\n    <form className=\"form\" onSubmit={props.handleSubmit}>\r\n      <Field\r\n        name=\"username\"\r\n        type=\"username\"\r\n        autocomplete=\"off\"\r\n        autocomplete=\"Логін\"\r\n        component={renderField}\r\n        label=\"Логін\"\r\n        validate={required}\r\n      />\r\n      <Field\r\n        name=\"password\"\r\n        type=\"password\"\r\n        component={renderField}\r\n        label=\"Пароль\"\r\n      />\r\n\r\n      <div className=\"coverBtn\">\r\n        <p style={{ color: \"red\" }}>{props.errorAuth}</p>\r\n        <button type=\"submit\">Увійти</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nconst LoginFormRedux = reduxForm({ form: \"loginForm\" })(LoginForm);\r\n\r\nfunction Login(props) {\r\n  const [errorAuth, setErrorAuth] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (window.localStorage.getItem(\"token\") !== null) {\r\n      props.history.push(\"/dashboard\");\r\n    } else {\r\n      props.changeLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  async function RequestAuth(user_code, user_pass) {\r\n    props.changeLoading(true);\r\n    const body = { user_code, user_pass };\r\n    await axios\r\n      .post(`/api/Auth`, body, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((response) => {\r\n        window.localStorage.removeItem(\"token\");\r\n        window.localStorage.setItem(\"token\", response.data.token);\r\n        props.addUserData(\r\n          response.data.token,\r\n          response.data.user_code,\r\n          response.data.user_name,\r\n          response.data.user_position,\r\n          response.data.OPERATIONS\r\n        );\r\n        props.changeLoading(false);\r\n        props.history.push(\"/dashboard\");\r\n      })\r\n      .catch((error) => {\r\n        props.changeLoading(false);\r\n\r\n        setErrorAuth(error.response.data.ErrorStatus.ErrorMessage);\r\n      });\r\n  }\r\n  return (\r\n    <>\r\n    <div className=\"login\">\r\n        {errorAuth ? <Alert variant={\"danger\"} style={{position: \"absolute\", top: \"20px\"}}>{errorAuth}</Alert> : null}\r\n      <div className=\"innerLogin\">\r\n        <h3>Вхід до системи</h3>\r\n        <LoginFormRedux\r\n          store={props}\r\n          onSubmit={(val) => RequestAuth(val.username, val.password)}\r\n          />\r\n        {props.menuState.isLoading ? <LoaderUI /> : null}\r\n      </div>\r\n    </div>\r\n          </>\r\n  );\r\n}\r\nexport default Login;\r\n","import { connect } from \"react-redux\";\r\nimport { addUserDataCreator } from \"../../redux/userReducer\";\r\nimport { changeLoadingCreator } from \"../../redux/menuReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\n\r\nimport Login from \"./Login\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        userState: state.userState,\r\n        menuState: state.menuState,\r\n        form: state.form\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addUserData: (token, user_code, user_name, user_position, OPERATIONS) => {\r\n            //console.log(`addPhoneNumberCreator - value ${value}`);\r\n            dispatch(addUserDataCreator( token, user_code, user_name, user_position, OPERATIONS ) );\r\n        },\r\n        changeLoading: (operation) => {\r\n            dispatch(changeLoadingCreator( operation ) );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet LogindWithRouter = withRouter( Login );\r\n\r\n\r\nconst LoginContainer = connect(mapStateToProps, mapDispatchToProps)(LogindWithRouter);\r\n\r\nexport default LoginContainer;","import React from 'react';\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\n\r\nclass Main extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loading: true\r\n        }\r\n        console.log(this.props);\r\n        // console.log(baseURL);\r\n    }\r\n    componentDidMount() {\r\n        console.log(window.localStorage.getItem('token') !== null);\r\n        if (window.localStorage.getItem('token') !== null) {\r\n            this.props.history.push('/dashboard');\r\n        }else{\r\n            this.props.history.push('/login');\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","import { connect } from \"react-redux\";\r\nimport { addUserDataCreator } from \"../../redux/userReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\n\r\nimport Main from \"./Main\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(state);\r\n    return {\r\n        userState: state.userState\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        addUserData: (value) => {\r\n            //console.log(`addPhoneNumberCreator - value ${value}`);\r\n            dispatch(addUserDataCreator( value ) );\r\n        }\r\n\r\n    }\r\n}\r\n\r\nlet MainWithRouter = withRouter( Main );\r\n\r\n\r\nconst MainContainer = connect(mapStateToProps, mapDispatchToProps)(MainWithRouter);\r\n\r\nexport default MainContainer;","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport * as axios from \"axios\";\r\nimport {Accordion} from \"react-bootstrap\";\r\nimport {Button} from \"react-bootstrap\";\r\nimport InputMask from \"react-input-mask\";\r\n\r\nclass Profile extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showContent: false,\r\n            isDisableBtnSave: true,\r\n            inputsData: {}\r\n        }\r\n\r\n        console.log(this.props);\r\n    }\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n        this.props.changeLoading(true);\r\n\r\n        if (window.localStorage.getItem('token') == null) {\r\n            this.props.history.push('/login');\r\n        }else{\r\n            this.authToken();\r\n        }\r\n    }\r\n    async authToken ()  {\r\n        const baseUrl = `/api/Auth/ALL`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\"Token\" : `${ window.localStorage.getItem('token') }`}\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                //console.log(response.data.token);\r\n                this.props.addUserData(response.data.token,response.data.user_code,response.data.user_name,response.data.user_position,response.data.OPERATIONS);\r\n                this.props.changeLoading(false);\r\n                this.requestUserCabinet(this.props.userState.token);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                //console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n    }\r\n    async requestUserCabinet  (token) {\r\n        console.log( token );\r\n        const baseUrl = `/api/UserCabinet`;\r\n        await axios.get(\r\n            baseUrl,\r\n            {\r\n                headers: {\r\n                    \"Token\" : `${ token }`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                let inputDataObj = this.state.inputsData;\r\n                inputDataObj.user_code = response.data.user_code;\r\n                this.setState({\r\n                    data: response.data,\r\n                    inputsData: inputDataObj,\r\n                    showContent: true\r\n                });\r\n                //console.log(response.data.sort());\r\n\r\n                // this.props.au_addToken(response.data.token); //записуєм token в store\r\n                //this.props.history.push('/login');\r\n                this.props.changeLoading(false);\r\n                console.log(this.state.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n                //console.log('error_catch');\r\n\r\n            });\r\n\r\n    }\r\n    day = (date) => {\r\n        let days = [\r\n            'Неділя',\r\n            'Понеділок',\r\n            'Вівторок',\r\n            'Середа',\r\n            'Четвер',\r\n            'П\\'ятниця',\r\n            'Субота'\r\n        ];\r\n        let number = date.getDay();\r\n        return days[number]\r\n    }\r\n    formatDate = (date) => {\r\n        let monthNames = [\r\n            \"Січень\", \"Лютий\", \"Березень\",\r\n            \"Квітень\", \"Травень\", \"Червень\", \"Липень\",\r\n            \"Серпень\", \"Вересень\", \"Жовтень\",\r\n            \"Листопад\", \"Грудень\"\r\n        ];\r\n\r\n        let day = date.getDate();\r\n        let monthIndex = date.getMonth();\r\n        let year = date.getFullYear();\r\n\r\n        return day + ' ' + monthNames[monthIndex] + ' ' + year;\r\n    }\r\n    changeInput = (e) => {\r\n        let apiName = e.currentTarget.getAttribute(\"apiName\");\r\n        console.log(apiName);\r\n        let inputValue = e.target.value;\r\n        console.log(inputValue);\r\n        let inputDataObj = this.state.inputsData;\r\n        inputDataObj[apiName] = inputValue;\r\n        console.log(inputDataObj);\r\n        this.setState({\r\n            isDisableBtnSave: false,\r\n            inputsData: inputDataObj\r\n        });\r\n        console.log(this.state);\r\n        console.log(this.state.inputsData);\r\n    }\r\n    saveUserData = () => {\r\n        this.requestSaveUserData(this.props.userState.token);\r\n    }\r\n    async requestSaveUserData  (token) {\r\n        this.props.changeLoading(true);\r\n        console.log( token );\r\n        console.log( this.state.inputsData );\r\n        const baseUrl = `/api/User`;\r\n        const userBody = {\r\n            //this.state.inputsData\r\n        };\r\n        await axios.put(\r\n            baseUrl,\r\n            this.state.inputsData,\r\n            {\r\n                headers: {\r\n                    \"Token\" : `${ token }`,\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            }\r\n        )\r\n            .then((response) => {\r\n                console.log(response.data);\r\n                //console.log(response.data.users);\r\n                //console.log(response.data.Table);\r\n\r\n\r\n                //this.props.store.showTable(true);\r\n\r\n                //this.props.store.addTableData(true, response.data.users);\r\n\r\n                this.props.changeLoading(false);\r\n                this.setState({ isDisableBtnSave: true });\r\n                //this.props.store.showTable(true);\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error.response);\r\n                console.log(error.response.data);\r\n            });\r\n\r\n    }\r\n    closeProfile = () => {\r\n        this.props.history.push('/dashboard');\r\n    }\r\n\r\n    render() {\r\n        console.log(this.props);\r\n        console.log(this.state);\r\n        console.log(this.props.menuState.isLoading);\r\n        console.log('--------');\r\n        return (\r\n            <div className=\"profile\">\r\n                {\r\n                    this.state.showContent\r\n                        ? <div className=\"innerProfile\">\r\n                            <div className=\"headerBlock\">\r\n                                <h3>Мій кабінет</h3>\r\n                                <div className=\"dataBlock\">\r\n                                    <div className=\"date\">\r\n                                        <input defaultValue={this.formatDate(new Date())} className=\"customInput\" id=\"dateInput\" type=\"text\" disabled/>\r\n                                        <input defaultValue={this.day(new Date())} className=\"customInput\" id=\"dateDayInput\" type=\"text\" disabled/>\r\n                                        <div className=\"coverInput\">\r\n                                            <label htmlFor=\"dateLastInput\">Час останнього входу</label>\r\n                                            <input defaultValue={this.state.data.last_logon_date} className=\"customInput\" id=\"dateLastInput\" type=\"text\" disabled/>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"user\">\r\n                                        <div className=\"coverInput\">\r\n                                            <label htmlFor=\"userFullName\">Користувач</label>\r\n                                            <input defaultValue={this.state.data.user_name} className=\"customInput\" id=\"userFullName\" type=\"text\" disabled/>\r\n                                        </div>\r\n                                        <div className=\"coverInput\">\r\n                                            <label htmlFor=\"powers\">Повноваження</label>\r\n                                            <input defaultValue={this.state.data.role_name} className=\"customInput\" id=\"powers\" type=\"text\" disabled/>\r\n                                        </div>\r\n                                        <div className=\"coverInput\">\r\n                                            <label htmlFor=\"statusInput\">Статус</label>\r\n                                            <input defaultValue={this.state.data.status} className=\"customInput\" id=\"statusInput\" type=\"text\" disabled/>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"commmonBlock\">\r\n                                <h4>Мій профіль</h4>\r\n                                <div className=\"dataBlock\">\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"registrationDateInput\">Дата реєстрації</label>\r\n                                        <input defaultValue={this.state.data.date_registered} className=\"customInput\" id=\"registrationDateInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"accountInput\">Обліковий запис</label>\r\n                                        <input defaultValue={this.state.data.user_code} className=\"customInput\" id=\"accountInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"lastNameInput\">Прізвище</label>\r\n                                        <input defaultValue={this.state.data.surname} className=\"customInput\" id=\"lastNameInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"nameInput\">Імя</label>\r\n                                        <input defaultValue={this.state.data.name} className=\"customInput\" id=\"nameInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"surnameInput\">По батькові</label>\r\n                                        <input defaultValue={this.state.data.middle_name} className=\"customInput\" id=\"surnameInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"phoneInput\">Телефон</label>\r\n                                        <div className=\"coverInputs\">\r\n                                            <input\r\n                                                className=\"customInput\"\r\n                                                id=\"phoneInput\"\r\n                                                placeholder=\"044 000 00 00\"\r\n                                                type=\"phone\"\r\n                                                defaultValue={this.state.data.phone}\r\n                                                apiName=\"phone\"\r\n                                                onChange={this.changeInput}\r\n\r\n                                            />\r\n                                            <input\r\n                                                className=\"customInput\"\r\n                                                id=\"phoneInput\"\r\n                                                type=\"phone\"\r\n                                                apiName=\"ipphone\"\r\n                                                defaultValue={this.state.data.ipphone}\r\n                                                onChange={this.changeInput}\r\n                                                disabled\r\n                                            />\r\n                                            <input\r\n                                                className=\"customInput\"\r\n                                                id=\"phoneInput\"\r\n                                                placeholder=\"+38 000 000 00 00\"\r\n                                                type=\"phone\"\r\n                                                apiName=\"mobile\"\r\n                                                defaultValue={this.state.data.mobile}\r\n                                                onChange={this.changeInput}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"managementAreaInput\">Область управління</label>\r\n                                        <input defaultValue={this.state.data.region} className=\"customInput\" id=\"managementAreaInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"positionInput\">Посада</label>\r\n                                        <input defaultValue={this.state.data.user_position} className=\"customInput\" id=\"positionInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"emailInput\">Ел. адреса</label>\r\n                                        <input defaultValue={this.state.data.user_email} className=\"customInput\" id=\"emailInput\" type=\"email\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"tvbvInput\">ТВБВ</label>\r\n                                        <input defaultValue={this.state.data.tvbv} className=\"customInput\" id=\"tvbvInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"departmentInput\">Департамент</label>\r\n                                        <input defaultValue={this.state.data.department} className=\"customInput\" id=\"departmentInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"managementInput\">Управління</label>\r\n                                        <input defaultValue={this.state.data.office} className=\"customInput\" id=\"managementInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                    <div className=\"coverInput\">\r\n                                        <label htmlFor=\"sectionInput\">Відділ</label>\r\n                                        <input defaultValue={this.state.data.division} className=\"customInput\" id=\"sectionInput\" type=\"text\" disabled/>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"btnBlock\">\r\n                                <Button variant=\"secondary\" onClick={this.closeProfile}>Закрити</Button>\r\n                                <Button variant=\"success\" onClick={this.saveUserData} disabled={this.state.isDisableBtnSave ? 'disabled' : ''}>Зберегти</Button>\r\n                            </div>\r\n                        </div>\r\n                        : <></>\r\n                }\r\n\r\n                {\r\n                    this.props.menuState.isLoading\r\n                        ? <div className=\"coverloader\">\r\n                            <div className=\"loader\"></div>\r\n                        </div>\r\n                        : <></>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Profile;","import { connect } from \"react-redux\";\r\nimport { addUserDataCreator } from \"../../../redux/userReducer\";\r\nimport { changeLoadingCreator } from \"../../../redux/menuReducer\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Profile from \"./Profile\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  console.log(state);\r\n  return {\r\n    userState: state.userState,\r\n    menuState: state.menuState,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addUserData: (token, user_code, user_name, user_position, OPERATIONS) => {\r\n      dispatch(\r\n        addUserDataCreator(\r\n          token,\r\n          user_code,\r\n          user_name,\r\n          user_position,\r\n          OPERATIONS\r\n        )\r\n      );\r\n    },\r\n    changeLoading: (operation) => {\r\n      dispatch(changeLoadingCreator(operation));\r\n    },\r\n  };\r\n};\r\nlet ProfileWithRouter = withRouter(Profile);\r\nconst ProfileContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(ProfileWithRouter);\r\nexport default ProfileContainer;","import \"./App.scss\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport DashboardContainer from \"./components/dashboard/DashboardContainer\";\r\nimport React from \"react\";\r\nimport LoginContainer from \"./components/login/LoginContainer\";\r\nimport MainContainer from \"./components/main/MainContainer\";\r\nimport ProfileContainer from \"./components/dashboard/profile/ProfileContainer\";\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Route exact path=\"/\" render={() => <MainContainer />} />\r\n        <Route path=\"/dashboard/\" render={() => <DashboardContainer />} />\r\n        <Route path=\"/profile\" render={() => <ProfileContainer />} />\r\n        <Route path=\"/login\" render={() => <LoginContainer />} />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {combineReducers, createStore} from \"redux\";\r\n\r\nimport userReducer from \"./userReducer\";\r\nimport menuReducer from \"./menuReducer\";\r\n\r\n\r\n\r\n\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    userState: userReducer,\r\n    menuState: menuReducer,\r\n    form: formReducer\r\n});\r\n\r\nlet store = createStore(reducers);\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/redux-store';\r\nimport { Provider } from \"react-redux\"\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}>\r\n          <App />\r\n      </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\nreportWebVitals();\r\n"],"sourceRoot":""}